{"id":"62ba03467541aec9d42aea87c6edf513","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./ERC20Permit.sol\";\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/ERC20TokenUSDC.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\r\n\r\ncontract ERC20TokenUSDC is ERC20, Ownable, ERC20Permit {\r\n    constructor() ERC20(\"ERC20TokenUSDC\", \"TUSDC\") ERC20Permit(\"ERC20TokenUSDC\") {}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1060],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1061,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1060],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[137]},"id":138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":137,"linearizedBaseContracts":[137],"name":"IERC5267","nameLocation":"142:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"157:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"id":117,"name":"EIP712DomainChanged","nameLocation":"252:19:1","nodeType":"EventDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"271:2:1"},"src":"246:28:1"},{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"280:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":136,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"446:2:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"fields","nameLocation":"516:6:1","nodeType":"VariableDeclaration","scope":136,"src":"509:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":120,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"name","nameLocation":"550:4:1","nodeType":"VariableDeclaration","scope":136,"src":"536:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":122,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"version","nameLocation":"582:7:1","nodeType":"VariableDeclaration","scope":136,"src":"568:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":124,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"chainId","nameLocation":"611:7:1","nodeType":"VariableDeclaration","scope":136,"src":"603:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:1","nodeType":"VariableDeclaration","scope":136,"src":"632:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"salt","nameLocation":"679:4:1","nodeType":"VariableDeclaration","scope":136,"src":"671:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"extensions","nameLocation":"714:10:1","nodeType":"VariableDeclaration","scope":136,"src":"697:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":133,"nodeType":"ArrayTypeName","src":"697:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:1"},"scope":137,"src":"425:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":138,"src":"132:605:1","usedErrors":[]}],"src":"107:631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1060],"ERC20":[724],"IERC20":[802],"IERC20Metadata":[999]},"id":725,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":139,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":725,"sourceUnit":803,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":725,"sourceUnit":1000,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":725,"sourceUnit":1061,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":144,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"1550:7:2"},"id":145,"nodeType":"InheritanceSpecifier","src":"1550:7:2"},{"baseName":{"id":146,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1559:6:2"},"id":147,"nodeType":"InheritanceSpecifier","src":"1559:6:2"},{"baseName":{"id":148,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":999,"src":"1567:14:2"},"id":149,"nodeType":"InheritanceSpecifier","src":"1567:14:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"230:1301:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":724,"linearizedBaseContracts":[724,999,802,1060],"name":"ERC20","nameLocation":"1541:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":153,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:2","nodeType":"VariableDeclaration","scope":724,"src":"1588:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":152,"keyType":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":159,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:2","nodeType":"VariableDeclaration","scope":724,"src":"1640:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":158,"keyType":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":157,"keyType":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":161,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:2","nodeType":"VariableDeclaration","scope":724,"src":"1714:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":163,"mutability":"mutable","name":"_name","nameLocation":"1764:5:2","nodeType":"VariableDeclaration","scope":724,"src":"1749:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":162,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:2","nodeType":"VariableDeclaration","scope":724,"src":"1775:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":164,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":181,"nodeType":"Block","src":"2036:57:2","statements":[{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":173,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"2046:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":174,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2054:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":176,"nodeType":"ExpressionStatement","src":"2046:13:2"},{"expression":{"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":177,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2069:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":178,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2079:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":180,"nodeType":"ExpressionStatement","src":"2069:17:2"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"1804:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":182,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"name_","nameLocation":"2006:5:2","nodeType":"VariableDeclaration","scope":182,"src":"1992:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":167,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:2","nodeType":"VariableDeclaration","scope":182,"src":"2013:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":169,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:2"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"2036:0:2"},"scope":724,"src":"1980:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[986],"body":{"id":191,"nodeType":"Block","src":"2227:29:2","statements":[{"expression":{"id":189,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"2244:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":188,"id":190,"nodeType":"Return","src":"2237:12:2"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"2099:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":192,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:2","nodeType":"FunctionDefinition","overrides":{"id":185,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:2"},"parameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"2171:2:2"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2212:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":186,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:2"},"scope":724,"src":"2158:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[992],"body":{"id":201,"nodeType":"Block","src":"2440:31:2","statements":[{"expression":{"id":199,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2457:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":198,"id":200,"nodeType":"Return","src":"2450:14:2"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2262:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":202,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:2","nodeType":"FunctionDefinition","overrides":{"id":195,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:2"},"parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"2384:2:2"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"2425:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:2"},"scope":724,"src":"2369:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[998],"body":{"id":211,"nodeType":"Block","src":"3169:26:2","statements":[{"expression":{"hexValue":"3138","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":208,"id":210,"nodeType":"Return","src":"3179:9:2"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"2477:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":212,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:2","nodeType":"FunctionDefinition","overrides":{"id":205,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:2"},"parameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"3121:2:2"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"3162:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":206,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:2"},"scope":724,"src":"3104:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[751],"body":{"id":221,"nodeType":"Block","src":"3325:36:2","statements":[{"expression":{"id":219,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3342:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":218,"id":220,"nodeType":"Return","src":"3335:19:2"}]},"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"3201:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":222,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:2","nodeType":"FunctionDefinition","overrides":{"id":215,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:2"},"parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"3275:2:2"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"3316:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:2"},"scope":724,"src":"3255:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[759],"body":{"id":235,"nodeType":"Block","src":"3502:42:2","statements":[{"expression":{"baseExpression":{"id":231,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"3519:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":233,"indexExpression":{"id":232,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3529:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":230,"id":234,"nodeType":"Return","src":"3512:25:2"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"3367:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:2","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:2"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"account","nameLocation":"3446:7:2","nodeType":"VariableDeclaration","scope":236,"src":"3438:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:2"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3493:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:2"},"scope":724,"src":"3419:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[769],"body":{"id":260,"nodeType":"Block","src":"3825:104:2","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3843:5:2","nodeType":"VariableDeclaration","scope":260,"src":"3835:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3851:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:2"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3883:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3890:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"3894:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"3873:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3873:28:2"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3911:11:2"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3550:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:2","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:2"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"to","nameLocation":"3766:2:2","nodeType":"VariableDeclaration","scope":261,"src":"3758:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"amount","nameLocation":"3778:6:2","nodeType":"VariableDeclaration","scope":261,"src":"3770:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:2"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3819:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:2"},"scope":724,"src":"3740:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[779],"body":{"id":278,"nodeType":"Block","src":"4085:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":272,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"4102:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":274,"indexExpression":{"id":273,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":276,"indexExpression":{"id":275,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4121:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":277,"nodeType":"Return","src":"4095:34:2"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3935:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:2","nodeType":"FunctionDefinition","overrides":{"id":268,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:2"},"parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"4014:5:2","nodeType":"VariableDeclaration","scope":279,"src":"4006:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"4029:7:2","nodeType":"VariableDeclaration","scope":279,"src":"4021:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4076:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:2"},"scope":724,"src":"3987:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[789],"body":{"id":303,"nodeType":"Block","src":"4533:108:2","statements":[{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"owner","nameLocation":"4551:5:2","nodeType":"VariableDeclaration","scope":303,"src":"4543:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":292,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4559:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:2"},{"expression":{"arguments":[{"id":296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4590:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":297,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4597:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"4606:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":295,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4581:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"4581:32:2"},{"expression":{"hexValue":"74727565","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":289,"id":302,"nodeType":"Return","src":"4623:11:2"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4142:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:2","nodeType":"FunctionDefinition","overrides":{"id":286,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:2"},"parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"spender","nameLocation":"4469:7:2","nodeType":"VariableDeclaration","scope":304,"src":"4461:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"amount","nameLocation":"4486:6:2","nodeType":"VariableDeclaration","scope":304,"src":"4478:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:2"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"4527:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":287,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:2"},"scope":724,"src":"4444:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":336,"nodeType":"Block","src":"5306:153:2","statements":[{"assignments":[318],"declarations":[{"constant":false,"id":318,"mutability":"mutable","name":"spender","nameLocation":"5324:7:2","nodeType":"VariableDeclaration","scope":336,"src":"5316:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":321,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":319,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5334:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:2"},{"expression":{"arguments":[{"id":323,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5372:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":324,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5378:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":325,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5387:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":322,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5356:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"5356:38:2"},{"expression":{"arguments":[{"id":329,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5414:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5420:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":331,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5424:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":328,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5404:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"5404:27:2"},{"expression":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":316,"id":335,"nodeType":"Return","src":"5441:11:2"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"4647:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":337,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:2","nodeType":"FunctionDefinition","overrides":{"id":313,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:2"},"parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"from","nameLocation":"5233:4:2","nodeType":"VariableDeclaration","scope":337,"src":"5225:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"to","nameLocation":"5247:2:2","nodeType":"VariableDeclaration","scope":337,"src":"5239:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"amount","nameLocation":"5259:6:2","nodeType":"VariableDeclaration","scope":337,"src":"5251:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:2"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":337,"src":"5300:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:2"},"scope":724,"src":"5203:256:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":365,"nodeType":"Block","src":"5948:140:2","statements":[{"assignments":[348],"declarations":[{"constant":false,"id":348,"mutability":"mutable","name":"owner","nameLocation":"5966:5:2","nodeType":"VariableDeclaration","scope":365,"src":"5958:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":351,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5974:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:2"},{"expression":{"arguments":[{"id":353,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"6005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":354,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6012:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":356,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"6031:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":357,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":355,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"6021:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":359,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"6049:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":352,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5996:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5996:64:2"},{"expression":{"hexValue":"74727565","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":346,"id":364,"nodeType":"Return","src":"6070:11:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"5465:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":366,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:2","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"spender","nameLocation":"5889:7:2","nodeType":"VariableDeclaration","scope":366,"src":"5881:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:2","nodeType":"VariableDeclaration","scope":366,"src":"5898:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:2"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"5942:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":344,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:2"},"scope":724,"src":"5854:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":406,"nodeType":"Block","src":"6674:328:2","statements":[{"assignments":[377],"declarations":[{"constant":false,"id":377,"mutability":"mutable","name":"owner","nameLocation":"6692:5:2","nodeType":"VariableDeclaration","scope":406,"src":"6684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":380,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":378,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6700:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:2"},{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:2","nodeType":"VariableDeclaration","scope":406,"src":"6722:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":387,"initialValue":{"arguments":[{"id":384,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"6759:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":385,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6766:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":383,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"6749:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":389,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"6792:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":390,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6812:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"6784:85:2"},{"id":403,"nodeType":"UncheckedBlock","src":"6879:95:2","statements":[{"expression":{"arguments":[{"id":396,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"6912:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6919:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":398,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"6928:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":399,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6947:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":395,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"6903:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"6903:60:2"}]},{"expression":{"hexValue":"74727565","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":375,"id":405,"nodeType":"Return","src":"6984:11:2"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"6094:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":407,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:2","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"spender","nameLocation":"6610:7:2","nodeType":"VariableDeclaration","scope":407,"src":"6602:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:2","nodeType":"VariableDeclaration","scope":407,"src":"6619:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:2"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"6668:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:2"},"scope":724,"src":"6575:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":483,"nodeType":"Block","src":"7534:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"7552:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:2","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"7544:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":428,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7630:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:2","typeDescriptions":{}}},"id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"7622:64:2"},{"expression":{"arguments":[{"id":438,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"7718:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7724:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7728:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":437,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7697:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"7697:38:2"},{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:2","nodeType":"VariableDeclaration","scope":483,"src":"7746:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":448,"initialValue":{"baseExpression":{"id":445,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7768:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":447,"indexExpression":{"id":446,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"7778:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7801:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":451,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7816:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"7793:72:2"},{"id":470,"nodeType":"UncheckedBlock","src":"7875:273:2","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":456,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7899:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":458,"indexExpression":{"id":457,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"7909:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7917:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":460,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7931:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":463,"nodeType":"ExpressionStatement","src":"7899:38:2"},{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":464,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"8114:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":466,"indexExpression":{"id":465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"8124:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":467,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8131:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":469,"nodeType":"ExpressionStatement","src":"8114:23:2"}]},{"eventCall":{"arguments":[{"id":472,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"8172:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":473,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"8178:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":474,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8182:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":471,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8163:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"EmitStatement","src":"8158:31:2"},{"expression":{"arguments":[{"id":478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"8220:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"8226:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":480,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8230:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8200:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"ExpressionStatement","src":"8200:37:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"7008:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":484,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"from","nameLocation":"7483:4:2","nodeType":"VariableDeclaration","scope":484,"src":"7475:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"to","nameLocation":"7497:2:2","nodeType":"VariableDeclaration","scope":484,"src":"7489:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"amount","nameLocation":"7509:6:2","nodeType":"VariableDeclaration","scope":484,"src":"7501:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"7534:0:2"},"scope":724,"src":"7456:788:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"8585:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8603:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:2","typeDescriptions":{}}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"8595:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:2","typeDescriptions":{}}},"id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8704:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8713:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":502,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8671:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"8671:49:2"},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":511,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"8731:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8747:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"8731:22:2"},{"id":521,"nodeType":"UncheckedBlock","src":"8763:175:2","statements":[{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":515,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"8899:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":517,"indexExpression":{"id":516,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8909:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":518,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8921:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"nodeType":"ExpressionStatement","src":"8899:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:2","typeDescriptions":{}}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8973:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8982:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8952:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"EmitStatement","src":"8947:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:2","typeDescriptions":{}}},"id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"9032:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"9041:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9000:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"9000:48:2"}]},"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"8250:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"account","nameLocation":"8543:7:2","nodeType":"VariableDeclaration","scope":541,"src":"8535:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"amount","nameLocation":"8560:6:2","nodeType":"VariableDeclaration","scope":541,"src":"8552:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"8585:0:2"},"scope":724,"src":"8520:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"9440:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9458:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:2","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"9450:67:2"},{"expression":{"arguments":[{"id":560,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9549:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:2","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"9570:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"9528:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"9528:49:2"},{"assignments":[569],"declarations":[{"constant":false,"id":569,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:2","nodeType":"VariableDeclaration","scope":612,"src":"9588:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":573,"initialValue":{"baseExpression":{"id":570,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"9613:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":572,"indexExpression":{"id":571,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9623:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"9649:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"9667:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"ExpressionStatement","src":"9641:71:2"},{"id":593,"nodeType":"UncheckedBlock","src":"9722:194:2","statements":[{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":581,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"9746:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":583,"indexExpression":{"id":582,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9756:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":584,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"9767:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":585,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"9784:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ExpressionStatement","src":"9746:44:2"},{"expression":{"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":589,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"9883:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"9899:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":592,"nodeType":"ExpressionStatement","src":"9883:22:2"}]},{"eventCall":{"arguments":[{"id":595,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9940:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:2","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"9961:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":594,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"9931:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"EmitStatement","src":"9926:42:2"},{"expression":{"arguments":[{"id":604,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:2","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"10020:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":603,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9979:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"9979:48:2"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"9061:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:2","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"account","nameLocation":"9398:7:2","nodeType":"VariableDeclaration","scope":613,"src":"9390:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"amount","nameLocation":"9415:6:2","nodeType":"VariableDeclaration","scope":613,"src":"9407:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:2"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"9440:0:2"},"scope":724,"src":"9375:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"10540:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":624,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"10558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:2","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"10550:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"10636:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:2","typeDescriptions":{}}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"10628:68:2"},{"expression":{"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":643,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"10707:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":646,"indexExpression":{"id":644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"10719:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":647,"indexExpression":{"id":645,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"10726:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":648,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"10737:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":650,"nodeType":"ExpressionStatement","src":"10707:36:2"},{"eventCall":{"arguments":[{"id":652,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"10767:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":653,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"10774:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":654,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"10783:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"10758:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"EmitStatement","src":"10753:37:2"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"10040:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:2","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"owner","nameLocation":"10483:5:2","nodeType":"VariableDeclaration","scope":658,"src":"10475:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"spender","nameLocation":"10498:7:2","nodeType":"VariableDeclaration","scope":658,"src":"10490:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"amount","nameLocation":"10515:6:2","nodeType":"VariableDeclaration","scope":658,"src":"10507:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:2"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"10540:0:2"},"scope":724,"src":"10457:340:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":700,"nodeType":"Block","src":"11168:321:2","statements":[{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:2","nodeType":"VariableDeclaration","scope":700,"src":"11178:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[{"id":671,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"11215:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":672,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"11222:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"11205:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11244:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":699,"nodeType":"IfStatement","src":"11240:243:2","trueBody":{"id":698,"nodeType":"Block","src":"11283:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11305:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":684,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"11325:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"11297:68:2"},{"id":697,"nodeType":"UncheckedBlock","src":"11379:94:2","statements":[{"expression":{"arguments":[{"id":690,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"11416:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"11423:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11432:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"11451:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"11407:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"11407:51:2"}]}]}}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"10803:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"owner","nameLocation":"11111:5:2","nodeType":"VariableDeclaration","scope":701,"src":"11103:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"spender","nameLocation":"11126:7:2","nodeType":"VariableDeclaration","scope":701,"src":"11118:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"amount","nameLocation":"11143:6:2","nodeType":"VariableDeclaration","scope":701,"src":"11135:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:2"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"11168:0:2"},"scope":724,"src":"11078:411:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"12162:2:2","statements":[]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"11495:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:2","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"from","nameLocation":"12111:4:2","nodeType":"VariableDeclaration","scope":712,"src":"12103:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"to","nameLocation":"12125:2:2","nodeType":"VariableDeclaration","scope":712,"src":"12117:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"amount","nameLocation":"12137:6:2","nodeType":"VariableDeclaration","scope":712,"src":"12129:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:2"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"12162:0:2"},"scope":724,"src":"12073:91:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"12840:2:2","statements":[]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"12170:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:2","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"from","nameLocation":"12789:4:2","nodeType":"VariableDeclaration","scope":723,"src":"12781:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"to","nameLocation":"12803:2:2","nodeType":"VariableDeclaration","scope":723,"src":"12795:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"amount","nameLocation":"12815:6:2","nodeType":"VariableDeclaration","scope":723,"src":"12807:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:2"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"12840:0:2"},"scope":724,"src":"12752:90:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":725,"src":"1532:11312:2","usedErrors":[]}],"src":"105:12740:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":726,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":736,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":736,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":736,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":736,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":745,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":745,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":745,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":745,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":751,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":751,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":802,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":759,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":759,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":802,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":769,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":769,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":769,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":766,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":802,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":779,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":779,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":779,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":802,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":789,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":789,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":802,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"from","nameLocation":"2676:4:3","nodeType":"VariableDeclaration","scope":801,"src":"2668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"to","nameLocation":"2690:2:3","nodeType":"VariableDeclaration","scope":801,"src":"2682:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"amount","nameLocation":"2702:6:3","nodeType":"VariableDeclaration","scope":801,"src":"2694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"2728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":798,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:3"},"scope":802,"src":"2646:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":803,"src":"202:2534:3","usedErrors":[]}],"src":"106:2631:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[1060],"Counters":[1134],"ECDSA":[2055],"EIP712":[2259],"ERC20":[724],"ERC20Permit":[974],"IERC20":[802],"IERC20Metadata":[999],"IERC20Permit":[1035],"IERC5267":[137],"Math":[3125],"ShortString":[1139],"ShortStrings":[1350],"SignedMath":[3230],"StorageSlot":[1460],"Strings":[1689]},"id":975,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":975,"sourceUnit":1036,"src":"147:28:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":975,"sourceUnit":725,"src":"176:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":975,"sourceUnit":2056,"src":"199:47:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":975,"sourceUnit":2260,"src":"247:48:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":975,"sourceUnit":1135,"src":"296:37:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":811,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":724,"src":"886:5:4"},"id":812,"nodeType":"InheritanceSpecifier","src":"886:5:4"},{"baseName":{"id":813,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1035,"src":"893:12:4"},"id":814,"nodeType":"InheritanceSpecifier","src":"893:12:4"},{"baseName":{"id":815,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":2259,"src":"907:6:4"},"id":816,"nodeType":"InheritanceSpecifier","src":"907:6:4"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"335:517:4","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":974,"linearizedBaseContracts":[974,2259,137,1035,724,999,802,1060],"name":"ERC20Permit","nameLocation":"871:11:4","nodeType":"ContractDefinition","nodes":[{"id":820,"libraryName":{"id":817,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":1134,"src":"926:8:4"},"nodeType":"UsingForDirective","src":"920:36:4","typeName":{"id":819,"nodeType":"UserDefinedTypeName","pathNode":{"id":818,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"939:16:4"},"referencedDeclaration":1066,"src":"939:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":825,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:4","nodeType":"VariableDeclaration","scope":974,"src":"962:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1066_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":824,"keyType":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1066_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"981:16:4"},"referencedDeclaration":1066,"src":"981:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":830,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:4","nodeType":"VariableDeclaration","scope":974,"src":"1073:147:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":827,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1125:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"1226:254:4","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":833,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:4","nodeType":"VariableDeclaration","scope":974,"src":"1537:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":843,"nodeType":"Block","src":"1867:2:4","statements":[]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1592:220:4","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":844,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":839,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"1856:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":841,"kind":"baseConstructorSpecifier","modifierName":{"id":838,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":2259,"src":"1849:6:4"},"nodeType":"ModifierInvocation","src":"1849:17:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"name","nameLocation":"1843:4:4","nodeType":"VariableDeclaration","scope":844,"src":"1829:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":835,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:4"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"1867:0:4"},"scope":974,"src":"1817:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1020],"body":{"id":916,"nodeType":"Block","src":"2128:428:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":864,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2146:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2146:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":866,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2165:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2146:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2138:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"2138:69:4"},{"assignments":[872],"declarations":[{"constant":false,"id":872,"mutability":"mutable","name":"structHash","nameLocation":"2226:10:4","nodeType":"VariableDeclaration","scope":916,"src":"2218:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2218:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"arguments":[{"id":876,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2260:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":877,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2278:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":878,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2285:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2294:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":881,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2311:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":880,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2301:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2301:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":883,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2319:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":874,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2249:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2249:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":873,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2239:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2239:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2218:111:4"},{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"hash","nameLocation":"2348:4:4","nodeType":"VariableDeclaration","scope":916,"src":"2340:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2340:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":892,"initialValue":{"arguments":[{"id":890,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2372:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":889,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2355:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2340:43:4"},{"assignments":[894],"declarations":[{"constant":false,"id":894,"mutability":"mutable","name":"signer","nameLocation":"2402:6:4","nodeType":"VariableDeclaration","scope":916,"src":"2394:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":902,"initialValue":{"arguments":[{"id":897,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"2425:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":898,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2431:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":899,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2434:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":900,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"2437:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":895,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2411:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2055_$","typeString":"type(library ECDSA)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1990,"src":"2411:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2411:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2394:45:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2457:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":905,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2467:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2474:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2449:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2449:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"2449:58:4"},{"expression":{"arguments":[{"id":911,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"2534:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2543:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2518:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2518:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"2518:31:4"}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1875:50:4","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":917,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1939:6:4","nodeType":"FunctionDefinition","overrides":{"id":861,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:4"},"parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1963:5:4","nodeType":"VariableDeclaration","scope":917,"src":"1955:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1986:7:4","nodeType":"VariableDeclaration","scope":917,"src":"1978:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"value","nameLocation":"2011:5:4","nodeType":"VariableDeclaration","scope":917,"src":"2003:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"deadline","nameLocation":"2034:8:4","nodeType":"VariableDeclaration","scope":917,"src":"2026:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"v","nameLocation":"2058:1:4","nodeType":"VariableDeclaration","scope":917,"src":"2052:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":854,"name":"uint8","nodeType":"ElementaryTypeName","src":"2052:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"r","nameLocation":"2077:1:4","nodeType":"VariableDeclaration","scope":917,"src":"2069:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"s","nameLocation":"2096:1:4","nodeType":"VariableDeclaration","scope":917,"src":"2088:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1945:158:4"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"2128:0:4"},"scope":974,"src":"1930:626:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1028],"body":{"id":932,"nodeType":"Block","src":"2695:48:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":926,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2712:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1066_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":928,"indexExpression":{"id":927,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2720:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2712:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage","typeString":"struct Counters.Counter storage ref"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"2712:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1066_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1066_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2712:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":925,"id":931,"nodeType":"Return","src":"2705:31:4"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"2562:50:4","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":933,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2626:6:4","nodeType":"FunctionDefinition","overrides":{"id":922,"nodeType":"OverrideSpecifier","overrides":[],"src":"2668:8:4"},"parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"owner","nameLocation":"2641:5:4","nodeType":"VariableDeclaration","scope":933,"src":"2633:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"2633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2632:15:4"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"2686:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2685:9:4"},"scope":974,"src":"2617:126:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1034],"body":{"id":943,"nodeType":"Block","src":"2936:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":940,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"2953:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2953:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":939,"id":942,"nodeType":"Return","src":"2946:27:4"}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"2749:60:4","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":944,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2876:16:4","nodeType":"FunctionDefinition","overrides":{"id":936,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:4"},"parameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"2892:2:4"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"2927:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2927:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:9:4"},"scope":974,"src":"2867:113:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":972,"nodeType":"Block","src":"3188:126:4","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"nonce","nameLocation":"3223:5:4","nodeType":"VariableDeclaration","scope":972,"src":"3198:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":955,"nodeType":"UserDefinedTypeName","pathNode":{"id":954,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"3198:16:4"},"referencedDeclaration":1066,"src":"3198:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":960,"initialValue":{"baseExpression":{"id":957,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3231:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1066_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":959,"indexExpression":{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3239:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3198:47:4"},{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":961,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3255:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":962,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"3265:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"3265:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1066_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1066_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3265:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3255:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"nodeType":"ExpressionStatement","src":"3255:25:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":967,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"3290:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"3290:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1066_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1066_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3290:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"3290:17:4"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"2986:120:4","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3120:9:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"owner","nameLocation":"3138:5:4","nodeType":"VariableDeclaration","scope":973,"src":"3130:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3129:15:4"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"current","nameLocation":"3179:7:4","nodeType":"VariableDeclaration","scope":973,"src":"3171:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3170:17:4"},"scope":974,"src":"3111:203:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":975,"src":"853:2463:4","usedErrors":[1147,1149]}],"src":"122:3195:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[802],"IERC20Metadata":[999]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":976,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1000,"sourceUnit":803,"src":"135:23:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":979,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"305:6:5"},"id":980,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"160:116:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":999,"linearizedBaseContracts":[999,802],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":999,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":989,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":999,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":998,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":995,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":999,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1000,"src":"277:405:5","usedErrors":[]}],"src":"110:573:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1035]},"id":1036,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"148:480:6","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1035,"linearizedBaseContracts":[1035],"name":"IERC20Permit","nameLocation":"639:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"658:792:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1020,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:6","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"owner","nameLocation":"1488:5:6","nodeType":"VariableDeclaration","scope":1020,"src":"1480:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"spender","nameLocation":"1511:7:6","nodeType":"VariableDeclaration","scope":1020,"src":"1503:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"value","nameLocation":"1536:5:6","nodeType":"VariableDeclaration","scope":1020,"src":"1528:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:6","nodeType":"VariableDeclaration","scope":1020,"src":"1551:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"v","nameLocation":"1583:1:6","nodeType":"VariableDeclaration","scope":1020,"src":"1577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1012,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"r","nameLocation":"1602:1:6","nodeType":"VariableDeclaration","scope":1020,"src":"1594:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"s","nameLocation":"1621:1:6","nodeType":"VariableDeclaration","scope":1020,"src":"1613:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"1637:0:6"},"scope":1035,"src":"1455:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"1644:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1028,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:6","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"owner","nameLocation":"1967:5:6","nodeType":"VariableDeclaration","scope":1028,"src":"1959:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:6"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1028,"src":"1997:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:6"},"scope":1035,"src":"1943:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"2012:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:6","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"2223:2:6"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"2249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:6"},"scope":1035,"src":"2198:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1036,"src":"629:1631:6","usedErrors":[]}],"src":"123:2138:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[1060],"Counters":[1134],"ECDSA":[2055],"EIP712":[2259],"ERC20":[724],"ERC20Permit":[974],"IERC20":[802],"IERC20Metadata":[999],"IERC20Permit":[1035],"IERC5267":[137],"Math":[3125],"ShortString":[1139],"ShortStrings":[1350],"SignedMath":[3230],"StorageSlot":[1460],"Strings":[1689]},"id":1039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1037,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1038,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1039,"sourceUnit":975,"src":"218:27:7","symbolAliases":[],"unitAlias":""}],"src":"128:118:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1060]},"id":1061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1040,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1060,"linearizedBaseContracts":[1060],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1049,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":1046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1045,"id":1048,"nodeType":"Return","src":"712:17:8"}]},"id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1060,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1054,"id":1057,"nodeType":"Return","src":"819:15:8"}]},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1060,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1061,"src":"608:235:8","usedErrors":[]}],"src":"86:758:8"},"id":8},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1134]},"id":1135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1062,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"112:311:9","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1134,"linearizedBaseContracts":[1134],"name":"Counters","nameLocation":"432:8:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1066,"members":[{"constant":false,"id":1065,"mutability":"mutable","name":"_value","nameLocation":"794:6:9","nodeType":"VariableDeclaration","scope":1066,"src":"786:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:9","nodeType":"StructDefinition","scope":1134,"src":"447:374:9","visibility":"public"},{"body":{"id":1077,"nodeType":"Block","src":"901:38:9","statements":[{"expression":{"expression":{"id":1074,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"918:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"918:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1073,"id":1076,"nodeType":"Return","src":"911:21:9"}]},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:9","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"counter","nameLocation":"860:7:9","nodeType":"VariableDeclaration","scope":1078,"src":"844:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1068,"nodeType":"UserDefinedTypeName","pathNode":{"id":1067,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"844:7:9"},"referencedDeclaration":1066,"src":"844:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:9"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"892:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:9"},"scope":1134,"src":"827:112:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"998:70:9","statements":[{"id":1090,"nodeType":"UncheckedBlock","src":"1008:54:9","statements":[{"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1084,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"1032:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"1032:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1089,"nodeType":"ExpressionStatement","src":"1032:19:9"}]}]},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:9","nodeType":"FunctionDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"counter","nameLocation":"980:7:9","nodeType":"VariableDeclaration","scope":1092,"src":"964:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1080,"nodeType":"UserDefinedTypeName","pathNode":{"id":1079,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"964:7:9"},"referencedDeclaration":1066,"src":"964:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:9"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"998:0:9"},"scope":1134,"src":"945:123:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"1127:176:9","statements":[{"assignments":[1099],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"value","nameLocation":"1145:5:9","nodeType":"VariableDeclaration","scope":1119,"src":"1137:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1102,"initialValue":{"expression":{"id":1100,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1153:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"1153:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1185:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"1177:49:9"},{"id":1118,"nodeType":"UncheckedBlock","src":"1236:61:9","statements":[{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1110,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1260:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"1260:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1277:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1117,"nodeType":"ExpressionStatement","src":"1260:26:9"}]}]},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:9","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"counter","nameLocation":"1109:7:9","nodeType":"VariableDeclaration","scope":1120,"src":"1093:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"1093:7:9"},"referencedDeclaration":1066,"src":"1093:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:9"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"1127:0:9"},"scope":1134,"src":"1074:229:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"1358:35:9","statements":[{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1126,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"1368:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"1368:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1131,"nodeType":"ExpressionStatement","src":"1368:18:9"}]},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:9","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"counter","nameLocation":"1340:7:9","nodeType":"VariableDeclaration","scope":1133,"src":"1324:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1122,"nodeType":"UserDefinedTypeName","pathNode":{"id":1121,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"1324:7:9"},"referencedDeclaration":1066,"src":"1324:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1066_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:9"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"1358:0:9"},"scope":1134,"src":"1309:84:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1135,"src":"424:971:9","usedErrors":[]}],"src":"87:1309:9"},"id":9},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1139],"ShortStrings":[1350],"StorageSlot":[1460]},"id":1351,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1136,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1351,"sourceUnit":1461,"src":"131:27:10","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":1139,"name":"ShortString","nameLocation":"333:11:10","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:10","underlyingType":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"358:876:10","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1350,"linearizedBaseContracts":[1350],"name":"ShortStrings","nameLocation":"1243:12:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1143,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:10","nodeType":"VariableDeclaration","scope":1350,"src":"1325:112:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"id":1147,"name":"StringTooLong","nameLocation":"1450:13:10","nodeType":"ErrorDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"str","nameLocation":"1471:3:10","nodeType":"VariableDeclaration","scope":1147,"src":"1464:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1144,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:10"},"src":"1444:32:10"},{"id":1149,"name":"InvalidShortString","nameLocation":"1487:18:10","nodeType":"ErrorDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"1505:2:10"},"src":"1481:27:10"},{"body":{"id":1192,"nodeType":"Block","src":"1767:208:10","statements":[{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:10","nodeType":"VariableDeclaration","scope":1192,"src":"1777:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1164,"initialValue":{"arguments":[{"id":1162,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1803:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1160,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:10","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1165,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1821:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1821:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1174,"nodeType":"IfStatement","src":"1817:72:10","trueBody":{"id":1173,"nodeType":"Block","src":"1839:50:10","statements":[{"errorCall":{"arguments":[{"id":1170,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1874:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1169,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1860:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"RevertStatement","src":"1853:25:10"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1183,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1946:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:10","typeDescriptions":{}}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:10","typeDescriptions":{}}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1930:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1186,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1955:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1955:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:10","typeDescriptions":{}}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1922:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1175,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1905:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"type(ShortString)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1905:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"functionReturnParameters":1157,"id":1191,"nodeType":"Return","src":"1898:70:10"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"1514:170:10","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:10","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"str","nameLocation":"1726:3:10","nodeType":"VariableDeclaration","scope":1193,"src":"1712:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1151,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:10"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1193,"src":"1754:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":1155,"nodeType":"UserDefinedTypeName","pathNode":{"id":1154,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"1754:11:10"},"referencedDeclaration":1139,"src":"1754:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:10"},"scope":1350,"src":"1689:286:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1218,"nodeType":"Block","src":"2133:331:10","statements":[{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"len","nameLocation":"2151:3:10","nodeType":"VariableDeclaration","scope":1218,"src":"2143:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1207,"initialValue":{"arguments":[{"id":1205,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"2168:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}],"id":1204,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2157:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1139_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2157:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:10"},{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"str","nameLocation":"2275:3:10","nodeType":"VariableDeclaration","scope":1218,"src":"2261:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1208,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"hexValue":"3332","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1210,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:10"},{"AST":{"nodeType":"YulBlock","src":"2357:81:10","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:10"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:10"},"nodeType":"YulFunctionCall","src":"2371:16:10"},"nodeType":"YulExpressionStatement","src":"2371:16:10"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:10"},"nodeType":"YulFunctionCall","src":"2407:14:10"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:10"},"nodeType":"YulFunctionCall","src":"2400:28:10"},"nodeType":"YulExpressionStatement","src":"2400:28:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1203,"isOffset":false,"isSlot":false,"src":"2383:3:10","valueSize":1},{"declaration":1197,"isOffset":false,"isSlot":false,"src":"2423:4:10","valueSize":1},{"declaration":1209,"isOffset":false,"isSlot":false,"src":"2378:3:10","valueSize":1},{"declaration":1209,"isOffset":false,"isSlot":false,"src":"2411:3:10","valueSize":1}],"id":1215,"nodeType":"InlineAssembly","src":"2348:90:10"},{"expression":{"id":1216,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"2454:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1201,"id":1217,"nodeType":"Return","src":"2447:10:10"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"1981:73:10","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1219,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:10","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:10","nodeType":"VariableDeclaration","scope":1219,"src":"2077:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":1196,"nodeType":"UserDefinedTypeName","pathNode":{"id":1195,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"2077:11:10"},"referencedDeclaration":1139,"src":"2077:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:10"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1219,"src":"2118:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1199,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:10"},"scope":1350,"src":"2059:405:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"2606:175:10","statements":[{"assignments":[1229],"declarations":[{"constant":false,"id":1229,"mutability":"mutable","name":"result","nameLocation":"2624:6:10","nodeType":"VariableDeclaration","scope":1250,"src":"2616:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1239,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1234,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2660:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}],"expression":{"id":1232,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2641:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"type(ShortString)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1139_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:10","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2633:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2687:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"2683:69:10","trueBody":{"id":1246,"nodeType":"Block","src":"2700:52:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1243,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2721:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2721:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"RevertStatement","src":"2714:27:10"}]}},{"expression":{"id":1248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2768:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1227,"id":1249,"nodeType":"Return","src":"2761:13:10"}]},"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"2470:61:10","text":" @dev Return the length of a `ShortString`."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:10","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:10","nodeType":"VariableDeclaration","scope":1251,"src":"2556:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":1222,"nodeType":"UserDefinedTypeName","pathNode":{"id":1221,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"2556:11:10"},"referencedDeclaration":1139,"src":"2556:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:10"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"2597:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:10"},"scope":1350,"src":"2536:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"3004:232:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"3024:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:10","typeDescriptions":{}}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3018:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1288,"nodeType":"Block","src":"3102:128:10","statements":[{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1277,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"3142:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1274,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"3116:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1460_$","typeString":"type(library StorageSlot)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1437,"src":"3116:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1368_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3116:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1368_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"3116:38:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"3157:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1282,"nodeType":"ExpressionStatement","src":"3116:46:10"},{"expression":{"arguments":[{"id":1285,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3200:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1283,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3183:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"type(ShortString)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"functionReturnParameters":1261,"id":1287,"nodeType":"Return","src":"3176:43:10"}]},"id":1289,"nodeType":"IfStatement","src":"3014:216:10","trueBody":{"id":1273,"nodeType":"Block","src":"3044:52:10","statements":[{"expression":{"arguments":[{"id":1270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"3079:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1269,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"3065:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3065:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"functionReturnParameters":1261,"id":1272,"nodeType":"Return","src":"3058:27:10"}]}}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"2787:103:10","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:10","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"value","nameLocation":"2944:5:10","nodeType":"VariableDeclaration","scope":1291,"src":"2930:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1253,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"store","nameLocation":"2966:5:10","nodeType":"VariableDeclaration","scope":1291,"src":"2951:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1255,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:10"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"2991:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":1259,"nodeType":"UserDefinedTypeName","pathNode":{"id":1258,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"2991:11:10"},"referencedDeclaration":1139,"src":"2991:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:10"},"scope":1350,"src":"2895:341:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"3476:159:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"3509:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}],"expression":{"id":1302,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3490:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"type(ShortString)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1139_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3490:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1306,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3519:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1315,"nodeType":"Block","src":"3592:37:10","statements":[{"expression":{"id":1313,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3613:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1301,"id":1314,"nodeType":"Return","src":"3606:12:10"}]},"id":1316,"nodeType":"IfStatement","src":"3486:143:10","trueBody":{"id":1312,"nodeType":"Block","src":"3539:47:10","statements":[{"expression":{"arguments":[{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"3569:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}],"id":1308,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"3560:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1139_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3560:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1301,"id":1311,"nodeType":"Return","src":"3553:22:10"}]}}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"3242:120:10","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:10","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"value","nameLocation":"3409:5:10","nodeType":"VariableDeclaration","scope":1318,"src":"3397:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":1294,"nodeType":"UserDefinedTypeName","pathNode":{"id":1293,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"3397:11:10"},"referencedDeclaration":1139,"src":"3397:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"store","nameLocation":"3431:5:10","nodeType":"VariableDeclaration","scope":1318,"src":"3416:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1296,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:10"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"3461:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1299,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:10"},"scope":1350,"src":"3367:268:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1348,"nodeType":"Block","src":"4108:175:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4141:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}],"expression":{"id":1329,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"4122:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"type(ShortString)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1139_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4122:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1333,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4151:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1346,"nodeType":"Block","src":"4226:51:10","statements":[{"expression":{"expression":{"arguments":[{"id":1342,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"4253:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:10","typeDescriptions":{}}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4247:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4247:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1328,"id":1345,"nodeType":"Return","src":"4240:26:10"}]},"id":1347,"nodeType":"IfStatement","src":"4118:159:10","trueBody":{"id":1339,"nodeType":"Block","src":"4171:49:10","statements":[{"expression":{"arguments":[{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4203:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}],"id":1335,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"4192:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1139_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1328,"id":1338,"nodeType":"Return","src":"4185:24:10"}]}}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"3641:357:10","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1349,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:10","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"value","nameLocation":"4047:5:10","nodeType":"VariableDeclaration","scope":1349,"src":"4035:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":1321,"nodeType":"UserDefinedTypeName","pathNode":{"id":1320,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"4035:11:10"},"referencedDeclaration":1139,"src":"4035:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"store","nameLocation":"4069:5:10","nodeType":"VariableDeclaration","scope":1349,"src":"4054:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1323,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:10"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"4099:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:10"},"scope":1350,"src":"4003:280:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1351,"src":"1235:3050:10","usedErrors":[1147,1149]}],"src":"106:4180:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1460]},"id":1461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1352,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"218:1201:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1460,"linearizedBaseContracts":[1460],"name":"StorageSlot","nameLocation":"1428:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1356,"members":[{"constant":false,"id":1355,"mutability":"mutable","name":"value","nameLocation":"1483:5:11","nodeType":"VariableDeclaration","scope":1356,"src":"1475:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:11","nodeType":"StructDefinition","scope":1460,"src":"1446:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1359,"members":[{"constant":false,"id":1358,"mutability":"mutable","name":"value","nameLocation":"1535:5:11","nodeType":"VariableDeclaration","scope":1359,"src":"1530:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1357,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:11","nodeType":"StructDefinition","scope":1460,"src":"1501:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1362,"members":[{"constant":false,"id":1361,"mutability":"mutable","name":"value","nameLocation":"1590:5:11","nodeType":"VariableDeclaration","scope":1362,"src":"1582:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:11","nodeType":"StructDefinition","scope":1460,"src":"1553:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1365,"members":[{"constant":false,"id":1364,"mutability":"mutable","name":"value","nameLocation":"1645:5:11","nodeType":"VariableDeclaration","scope":1365,"src":"1637:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:11","nodeType":"StructDefinition","scope":1460,"src":"1608:49:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1368,"members":[{"constant":false,"id":1367,"mutability":"mutable","name":"value","nameLocation":"1698:5:11","nodeType":"VariableDeclaration","scope":1368,"src":"1691:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1366,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:11","nodeType":"StructDefinition","scope":1460,"src":"1663:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1371,"members":[{"constant":false,"id":1370,"mutability":"mutable","name":"value","nameLocation":"1749:5:11","nodeType":"VariableDeclaration","scope":1371,"src":"1743:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:11","nodeType":"StructDefinition","scope":1460,"src":"1716:45:11","visibility":"public"},{"body":{"id":1381,"nodeType":"Block","src":"1943:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:11","statements":[{"nodeType":"YulAssignment","src":"2019:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1378,"isOffset":false,"isSlot":true,"src":"2019:6:11","suffix":"slot","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"2029:4:11","valueSize":1}],"id":1380,"nodeType":"InlineAssembly","src":"1996:47:11"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"1767:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:11","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"slot","nameLocation":"1891:4:11","nodeType":"VariableDeclaration","scope":1382,"src":"1883:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:11"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"r","nameLocation":"1940:1:11","nodeType":"VariableDeclaration","scope":1382,"src":"1920:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1356_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"1920:11:11"},"referencedDeclaration":1356,"src":"1920:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1356_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:11"},"scope":1460,"src":"1859:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"2231:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:11","statements":[{"nodeType":"YulAssignment","src":"2307:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1389,"isOffset":false,"isSlot":true,"src":"2307:6:11","suffix":"slot","valueSize":1},{"declaration":1385,"isOffset":false,"isSlot":false,"src":"2317:4:11","valueSize":1}],"id":1391,"nodeType":"InlineAssembly","src":"2284:47:11"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"2055:87:11","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:11","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"slot","nameLocation":"2179:4:11","nodeType":"VariableDeclaration","scope":1393,"src":"2171:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:11"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"r","nameLocation":"2228:1:11","nodeType":"VariableDeclaration","scope":1393,"src":"2208:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1359_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1388,"nodeType":"UserDefinedTypeName","pathNode":{"id":1387,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":1359,"src":"2208:11:11"},"referencedDeclaration":1359,"src":"2208:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1359_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:11"},"scope":1460,"src":"2147:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1403,"nodeType":"Block","src":"2519:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:11","statements":[{"nodeType":"YulAssignment","src":"2595:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1400,"isOffset":false,"isSlot":true,"src":"2595:6:11","suffix":"slot","valueSize":1},{"declaration":1396,"isOffset":false,"isSlot":false,"src":"2605:4:11","valueSize":1}],"id":1402,"nodeType":"InlineAssembly","src":"2572:47:11"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"2343:87:11","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:11","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"slot","nameLocation":"2467:4:11","nodeType":"VariableDeclaration","scope":1404,"src":"2459:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:11"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"r","nameLocation":"2516:1:11","nodeType":"VariableDeclaration","scope":1404,"src":"2496:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1362_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1399,"nodeType":"UserDefinedTypeName","pathNode":{"id":1398,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"2496:11:11"},"referencedDeclaration":1362,"src":"2496:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1362_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:11"},"scope":1460,"src":"2435:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"2807:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:11","statements":[{"nodeType":"YulAssignment","src":"2883:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1411,"isOffset":false,"isSlot":true,"src":"2883:6:11","suffix":"slot","valueSize":1},{"declaration":1407,"isOffset":false,"isSlot":false,"src":"2893:4:11","valueSize":1}],"id":1413,"nodeType":"InlineAssembly","src":"2860:47:11"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"2631:87:11","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:11","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"slot","nameLocation":"2755:4:11","nodeType":"VariableDeclaration","scope":1415,"src":"2747:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:11"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"r","nameLocation":"2804:1:11","nodeType":"VariableDeclaration","scope":1415,"src":"2784:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1365_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1410,"nodeType":"UserDefinedTypeName","pathNode":{"id":1409,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":1365,"src":"2784:11:11"},"referencedDeclaration":1365,"src":"2784:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1365_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:11"},"scope":1460,"src":"2723:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"3092:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:11","statements":[{"nodeType":"YulAssignment","src":"3168:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1422,"isOffset":false,"isSlot":true,"src":"3168:6:11","suffix":"slot","valueSize":1},{"declaration":1418,"isOffset":false,"isSlot":false,"src":"3178:4:11","valueSize":1}],"id":1424,"nodeType":"InlineAssembly","src":"3145:47:11"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"2919:86:11","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:11","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"slot","nameLocation":"3041:4:11","nodeType":"VariableDeclaration","scope":1426,"src":"3033:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:11"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"r","nameLocation":"3089:1:11","nodeType":"VariableDeclaration","scope":1426,"src":"3070:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1368_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1421,"nodeType":"UserDefinedTypeName","pathNode":{"id":1420,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":1368,"src":"3070:10:11"},"referencedDeclaration":1368,"src":"3070:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1368_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:11"},"scope":1460,"src":"3010:188:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"3400:112:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:11","statements":[{"nodeType":"YulAssignment","src":"3476:20:11","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1433,"isOffset":false,"isSlot":true,"src":"3476:6:11","suffix":"slot","valueSize":1},{"declaration":1429,"isOffset":false,"isSlot":true,"src":"3486:10:11","suffix":"slot","valueSize":1}],"id":1435,"nodeType":"InlineAssembly","src":"3453:53:11"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"3204:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:11","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"store","nameLocation":"3348:5:11","nodeType":"VariableDeclaration","scope":1437,"src":"3333:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1428,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:11"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"r","nameLocation":"3397:1:11","nodeType":"VariableDeclaration","scope":1437,"src":"3378:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1368_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1432,"nodeType":"UserDefinedTypeName","pathNode":{"id":1431,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":1368,"src":"3378:10:11"},"referencedDeclaration":1368,"src":"3378:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1368_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:11"},"scope":1460,"src":"3310:202:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"3688:106:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:11","statements":[{"nodeType":"YulAssignment","src":"3764:14:11","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1444,"isOffset":false,"isSlot":true,"src":"3764:6:11","suffix":"slot","valueSize":1},{"declaration":1440,"isOffset":false,"isSlot":false,"src":"3774:4:11","valueSize":1}],"id":1446,"nodeType":"InlineAssembly","src":"3741:47:11"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"3518:85:11","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1448,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:11","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"slot","nameLocation":"3638:4:11","nodeType":"VariableDeclaration","scope":1448,"src":"3630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:11"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"r","nameLocation":"3685:1:11","nodeType":"VariableDeclaration","scope":1448,"src":"3667:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1371_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1443,"nodeType":"UserDefinedTypeName","pathNode":{"id":1442,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"3667:9:11"},"referencedDeclaration":1371,"src":"3667:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1371_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:11"},"scope":1460,"src":"3608:186:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1458,"nodeType":"Block","src":"3991:112:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:11","statements":[{"nodeType":"YulAssignment","src":"4067:20:11","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:11"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1455,"isOffset":false,"isSlot":true,"src":"4067:6:11","suffix":"slot","valueSize":1},{"declaration":1451,"isOffset":false,"isSlot":true,"src":"4077:10:11","suffix":"slot","valueSize":1}],"id":1457,"nodeType":"InlineAssembly","src":"4044:53:11"}]},"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"3800:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:11","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"store","nameLocation":"3940:5:11","nodeType":"VariableDeclaration","scope":1459,"src":"3926:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:11"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"r","nameLocation":"3988:1:11","nodeType":"VariableDeclaration","scope":1459,"src":"3970:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1371_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1454,"nodeType":"UserDefinedTypeName","pathNode":{"id":1453,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"3970:9:11"},"referencedDeclaration":1371,"src":"3970:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1371_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:11"},"scope":1460,"src":"3904:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1461,"src":"1420:2685:11","usedErrors":[]}],"src":"193:3913:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3125],"SignedMath":[3230],"Strings":[1689]},"id":1690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1462,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1690,"sourceUnit":3126,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1690,"sourceUnit":3231,"src":"152:31:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"185:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":1689,"linearizedBaseContracts":[1689],"name":"Strings","nameLocation":"228:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1468,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:12","nodeType":"VariableDeclaration","scope":1689,"src":"242:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1466,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1471,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:12","nodeType":"VariableDeclaration","scope":1689,"src":"302:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1469,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1518,"nodeType":"Block","src":"518:625:12","statements":[{"id":1517,"nodeType":"UncheckedBlock","src":"528:609:12","statements":[{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"mutability":"mutable","name":"length","nameLocation":"560:6:12","nodeType":"VariableDeclaration","scope":1517,"src":"552:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"580:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1481,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"569:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3125_$","typeString":"type(library Math)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"569:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:12"},{"assignments":[1489],"declarations":[{"constant":false,"id":1489,"mutability":"mutable","name":"buffer","nameLocation":"618:6:12","nodeType":"VariableDeclaration","scope":1517,"src":"604:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1488,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1494,"initialValue":{"arguments":[{"id":1492,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"638:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1490,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:12"},{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"ptr","nameLocation":"667:3:12","nodeType":"VariableDeclaration","scope":1517,"src":"659:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1497,"nodeType":"VariableDeclarationStatement","src":"659:11:12"},{"AST":{"nodeType":"YulBlock","src":"740:67:12","statements":[{"nodeType":"YulAssignment","src":"758:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:12"},"nodeType":"YulFunctionCall","src":"777:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:12"},"nodeType":"YulFunctionCall","src":"765:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1489,"isOffset":false,"isSlot":false,"src":"769:6:12","valueSize":1},{"declaration":1480,"isOffset":false,"isSlot":false,"src":"785:6:12","valueSize":1},{"declaration":1496,"isOffset":false,"isSlot":false,"src":"758:3:12","valueSize":1}],"id":1498,"nodeType":"InlineAssembly","src":"731:76:12"},{"body":{"id":1513,"nodeType":"Block","src":"833:267:12","statements":[{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:12","subExpression":{"id":1500,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ExpressionStatement","src":"851:5:12"},{"AST":{"nodeType":"YulBlock","src":"934:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:12"},"nodeType":"YulFunctionCall","src":"974:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:12"},"nodeType":"YulFunctionCall","src":"969:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:12"},"nodeType":"YulFunctionCall","src":"956:44:12"},"nodeType":"YulExpressionStatement","src":"956:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1468,"isOffset":false,"isSlot":false,"src":"990:8:12","valueSize":1},{"declaration":1496,"isOffset":false,"isSlot":false,"src":"964:3:12","valueSize":1},{"declaration":1474,"isOffset":false,"isSlot":false,"src":"978:5:12","valueSize":1}],"id":1503,"nodeType":"InlineAssembly","src":"925:93:12"},{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1035:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"1035:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1068:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1512,"nodeType":"IfStatement","src":"1064:21:12","trueBody":{"id":1511,"nodeType":"Break","src":"1080:5:12"}}]},"condition":{"hexValue":"74727565","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1514,"nodeType":"WhileStatement","src":"820:280:12"},{"expression":{"id":1515,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"1120:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1478,"id":1516,"nodeType":"Return","src":"1113:13:12"}]}]},"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"352:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1519,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:12","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"value","nameLocation":"473:5:12","nodeType":"VariableDeclaration","scope":1519,"src":"465:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:12"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"503:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:12"},"scope":1689,"src":"447:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1546,"nodeType":"Block","src":"1313:103:12","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1354:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:12","trueExpression":{"hexValue":"2d","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1400:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1538,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1385:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3230_$","typeString":"type(library SignedMath)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3229,"src":"1385:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1537,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1519,1547],"referencedDeclaration":1519,"src":"1376:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1527,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:12","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1526,"id":1545,"nodeType":"Return","src":"1323:86:12"}]},"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"1149:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:12","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"value","nameLocation":"1268:5:12","nodeType":"VariableDeclaration","scope":1547,"src":"1261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1521,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:12"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"1298:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1524,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:12"},"scope":1689,"src":"1243:173:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1566,"nodeType":"Block","src":"1595:100:12","statements":[{"id":1565,"nodeType":"UncheckedBlock","src":"1605:84:12","statements":[{"expression":{"arguments":[{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1648:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1667:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1557,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"1655:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3125_$","typeString":"type(library Math)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3085,"src":"1655:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1555,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1567,1643,1663],"referencedDeclaration":1643,"src":"1636:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1554,"id":1564,"nodeType":"Return","src":"1629:49:12"}]}]},"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"1422:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:12","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"value","nameLocation":"1550:5:12","nodeType":"VariableDeclaration","scope":1567,"src":"1542:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:12"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"1580:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1552,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:12"},"scope":1689,"src":"1521:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"1908:347:12","statements":[{"assignments":[1578],"declarations":[{"constant":false,"id":1578,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:12","nodeType":"VariableDeclaration","scope":1642,"src":"1918:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1577,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1587,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1582,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1954:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:12"},{"expression":{"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1588,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"1975:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1590,"indexExpression":{"hexValue":"30","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1593,"nodeType":"ExpressionStatement","src":"1975:15:12"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1594,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2000:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1596,"indexExpression":{"hexValue":"31","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1599,"nodeType":"ExpressionStatement","src":"2000:15:12"},{"body":{"id":1628,"nodeType":"Block","src":"2070:83:12","statements":[{"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1614,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2084:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1616,"indexExpression":{"id":1615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2091:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1617,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2096:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1621,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2105:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1623,"nodeType":"ExpressionStatement","src":"2084:33:12"},{"expression":{"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1627,"nodeType":"ExpressionStatement","src":"2131:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2058:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"initializationExpression":{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"i","nameLocation":"2038:1:12","nodeType":"VariableDeclaration","scope":1629,"src":"2030:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1607,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1603,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2046:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:12"},"loopExpression":{"expression":{"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:12","subExpression":{"id":1611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1613,"nodeType":"ExpressionStatement","src":"2065:3:12"},"nodeType":"ForStatement","src":"2025:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"ExpressionStatement","src":"2162:55:12"},{"expression":{"arguments":[{"id":1639,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2241:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1637,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:12","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1576,"id":1641,"nodeType":"Return","src":"2227:21:12"}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1701:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:12","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"value","nameLocation":"1847:5:12","nodeType":"VariableDeclaration","scope":1643,"src":"1839:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"length","nameLocation":"1862:6:12","nodeType":"VariableDeclaration","scope":1643,"src":"1854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"1893:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1574,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:12"},"scope":1689,"src":"1818:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"2480:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1656,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2525:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1654,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{}}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:12","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1659,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2533:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1651,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1567,1643,1663],"referencedDeclaration":1643,"src":"2497:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1650,"id":1661,"nodeType":"Return","src":"2490:59:12"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"2261:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:12","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"addr","nameLocation":"2436:4:12","nodeType":"VariableDeclaration","scope":1663,"src":"2428:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:12"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"2465:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1648,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:12"},"scope":1689,"src":"2407:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1687,"nodeType":"Block","src":"2711:66:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2744:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:12","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1673,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2767:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:12","typeDescriptions":{}}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1679,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1672,"id":1686,"nodeType":"Return","src":"2721:49:12"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"2562:66:12","text":" @dev Returns true if the two strings are equal."},"id":1688,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:12","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"a","nameLocation":"2662:1:12","nodeType":"VariableDeclaration","scope":1688,"src":"2648:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1665,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"b","nameLocation":"2679:1:12","nodeType":"VariableDeclaration","scope":1688,"src":"2665:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1667,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:12"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1688,"src":"2705:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1670,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:12"},"scope":1689,"src":"2633:144:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1690,"src":"220:2559:12","usedErrors":[]}],"src":"101:2679:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2055],"Math":[3125],"SignedMath":[3230],"Strings":[1689]},"id":2056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2056,"sourceUnit":1690,"src":"137:24:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"163:205:13","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2055,"linearizedBaseContracts":[2055],"name":"ECDSA","nameLocation":"377:5:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1699,"members":[{"id":1694,"name":"NoError","nameLocation":"417:7:13","nodeType":"EnumValue","src":"417:7:13"},{"id":1695,"name":"InvalidSignature","nameLocation":"434:16:13","nodeType":"EnumValue","src":"434:16:13"},{"id":1696,"name":"InvalidSignatureLength","nameLocation":"460:22:13","nodeType":"EnumValue","src":"460:22:13"},{"id":1697,"name":"InvalidSignatureS","nameLocation":"492:17:13","nodeType":"EnumValue","src":"492:17:13"},{"id":1698,"name":"InvalidSignatureV","nameLocation":"519:17:13","nodeType":"EnumValue","src":"519:17:13"}],"name":"RecoverError","nameLocation":"394:12:13","nodeType":"EnumDefinition","src":"389:175:13"},{"body":{"id":1742,"nodeType":"Block","src":"624:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"638:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1706,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"647:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1694,"src":"647:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"734:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1712,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"743:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"743:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"843:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1721,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"852:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"852:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"965:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1730,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"974:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"974:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"IfStatement","src":"961:114:13","trueBody":{"id":1737,"nodeType":"Block","src":"1006:69:13","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1733,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"1020:44:13"}]}},"id":1739,"nodeType":"IfStatement","src":"839:236:13","trueBody":{"id":1728,"nodeType":"Block","src":"889:66:13","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1724,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1727,"nodeType":"ExpressionStatement","src":"903:41:13"}]}},"id":1740,"nodeType":"IfStatement","src":"730:345:13","trueBody":{"id":1719,"nodeType":"Block","src":"774:59:13","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1715,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1718,"nodeType":"ExpressionStatement","src":"788:34:13"}]}},"id":1741,"nodeType":"IfStatement","src":"634:441:13","trueBody":{"id":1710,"nodeType":"Block","src":"669:55:13","statements":[{"functionReturnParameters":1704,"id":1709,"nodeType":"Return","src":"683:7:13"}]}}]},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:13","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"error","nameLocation":"604:5:13","nodeType":"VariableDeclaration","scope":1743,"src":"591:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1701,"nodeType":"UserDefinedTypeName","pathNode":{"id":1700,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"591:12:13"},"referencedDeclaration":1699,"src":"591:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:13"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"624:0:13"},"scope":2055,"src":"570:511:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1788,"nodeType":"Block","src":"2249:626:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1756,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2263:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1786,"nodeType":"Block","src":"2788:81:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:13","typeDescriptions":{}}},"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1782,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2822:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"2822:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"id":1784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1755,"id":1785,"nodeType":"Return","src":"2802:56:13"}]},"id":1787,"nodeType":"IfStatement","src":"2259:610:13","trueBody":{"id":1777,"nodeType":"Block","src":"2287:495:13","statements":[{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"r","nameLocation":"2309:1:13","nodeType":"VariableDeclaration","scope":1777,"src":"2301:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1762,"nodeType":"VariableDeclarationStatement","src":"2301:9:13"},{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"s","nameLocation":"2332:1:13","nodeType":"VariableDeclaration","scope":1777,"src":"2324:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1765,"nodeType":"VariableDeclarationStatement","src":"2324:9:13"},{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"v","nameLocation":"2353:1:13","nodeType":"VariableDeclaration","scope":1777,"src":"2347:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1766,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1768,"nodeType":"VariableDeclarationStatement","src":"2347:7:13"},{"AST":{"nodeType":"YulBlock","src":"2555:171:13","statements":[{"nodeType":"YulAssignment","src":"2573:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:13"},"nodeType":"YulFunctionCall","src":"2584:20:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:13"},"nodeType":"YulFunctionCall","src":"2578:27:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:13"}]},{"nodeType":"YulAssignment","src":"2622:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:13"},"nodeType":"YulFunctionCall","src":"2633:20:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:13"},"nodeType":"YulFunctionCall","src":"2627:27:13"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:13"}]},{"nodeType":"YulAssignment","src":"2671:41:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:13"},"nodeType":"YulFunctionCall","src":"2690:20:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:13"},"nodeType":"YulFunctionCall","src":"2684:27:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:13"},"nodeType":"YulFunctionCall","src":"2676:36:13"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1761,"isOffset":false,"isSlot":false,"src":"2573:1:13","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"2622:1:13","valueSize":1},{"declaration":1748,"isOffset":false,"isSlot":false,"src":"2588:9:13","valueSize":1},{"declaration":1748,"isOffset":false,"isSlot":false,"src":"2637:9:13","valueSize":1},{"declaration":1748,"isOffset":false,"isSlot":false,"src":"2694:9:13","valueSize":1},{"declaration":1767,"isOffset":false,"isSlot":false,"src":"2671:1:13","valueSize":1}],"id":1769,"nodeType":"InlineAssembly","src":"2546:180:13"},{"expression":{"arguments":[{"id":1771,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2757:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1772,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2763:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1773,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2766:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1774,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2769:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1770,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1789,1863,1957],"referencedDeclaration":1957,"src":"2746:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1755,"id":1776,"nodeType":"Return","src":"2739:32:13"}]}}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"1087:1053:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:13","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"hash","nameLocation":"2173:4:13","nodeType":"VariableDeclaration","scope":1789,"src":"2165:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"signature","nameLocation":"2192:9:13","nodeType":"VariableDeclaration","scope":1789,"src":"2179:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:13"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"2226:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"2235:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1753,"nodeType":"UserDefinedTypeName","pathNode":{"id":1752,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"2235:12:13"},"referencedDeclaration":1699,"src":"2235:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:13"},"scope":2055,"src":"2145:730:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"3748:140:13","statements":[{"assignments":[1800,1803],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:13","nodeType":"VariableDeclaration","scope":1815,"src":"3759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"error","nameLocation":"3791:5:13","nodeType":"VariableDeclaration","scope":1815,"src":"3778:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1802,"nodeType":"UserDefinedTypeName","pathNode":{"id":1801,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"3778:12:13"},"referencedDeclaration":1699,"src":"3778:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1808,"initialValue":{"arguments":[{"id":1805,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"3811:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1806,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3817:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1804,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1789,1863,1957],"referencedDeclaration":1789,"src":"3800:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:13"},{"expression":{"arguments":[{"id":1810,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"3849:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}],"id":1809,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3837:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1699_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"3837:18:13"},{"expression":{"id":1813,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3872:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1798,"id":1814,"nodeType":"Return","src":"3865:16:13"}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"2881:775:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:13","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"hash","nameLocation":"3686:4:13","nodeType":"VariableDeclaration","scope":1816,"src":"3678:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"signature","nameLocation":"3705:9:13","nodeType":"VariableDeclaration","scope":1816,"src":"3692:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1793,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:13"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"3739:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:13"},"scope":2055,"src":"3661:227:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1862,"nodeType":"Block","src":"4245:203:13","statements":[{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"s","nameLocation":"4263:1:13","nodeType":"VariableDeclaration","scope":1862,"src":"4255:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1839,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"4267:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:13","typeDescriptions":{}}},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:13"},{"assignments":[1841],"declarations":[{"constant":false,"id":1841,"mutability":"mutable","name":"v","nameLocation":"4363:1:13","nodeType":"VariableDeclaration","scope":1862,"src":"4357:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1840,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1854,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1846,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"4382:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:13","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4374:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1842,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:13","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:13"},{"expression":{"arguments":[{"id":1856,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4427:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1857,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"4433:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1858,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4436:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1859,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"4439:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1855,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1789,1863,1957],"referencedDeclaration":1957,"src":"4416:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4416:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1830,"id":1861,"nodeType":"Return","src":"4409:32:13"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"3894:243:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1863,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:13","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"hash","nameLocation":"4170:4:13","nodeType":"VariableDeclaration","scope":1863,"src":"4162:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"r","nameLocation":"4184:1:13","nodeType":"VariableDeclaration","scope":1863,"src":"4176:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"vs","nameLocation":"4195:2:13","nodeType":"VariableDeclaration","scope":1863,"src":"4187:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:13"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1863,"src":"4222:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1863,"src":"4231:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1828,"nodeType":"UserDefinedTypeName","pathNode":{"id":1827,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"4231:12:13"},"referencedDeclaration":1699,"src":"4231:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:13"},"scope":2055,"src":"4142:306:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"4699:136:13","statements":[{"assignments":[1876,1879],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:13","nodeType":"VariableDeclaration","scope":1892,"src":"4710:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"error","nameLocation":"4742:5:13","nodeType":"VariableDeclaration","scope":1892,"src":"4729:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1878,"nodeType":"UserDefinedTypeName","pathNode":{"id":1877,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"4729:12:13"},"referencedDeclaration":1699,"src":"4729:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1885,"initialValue":{"arguments":[{"id":1881,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"4762:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1882,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"4768:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1883,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"4771:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1880,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1789,1863,1957],"referencedDeclaration":1863,"src":"4751:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4751:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:13"},{"expression":{"arguments":[{"id":1887,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"4796:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}],"id":1886,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"4784:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1699_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1889,"nodeType":"ExpressionStatement","src":"4784:18:13"},{"expression":{"id":1890,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4819:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1874,"id":1891,"nodeType":"Return","src":"4812:16:13"}]},"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"4454:154:13","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:13","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"hash","nameLocation":"4638:4:13","nodeType":"VariableDeclaration","scope":1893,"src":"4630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"r","nameLocation":"4652:1:13","nodeType":"VariableDeclaration","scope":1893,"src":"4644:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"vs","nameLocation":"4663:2:13","nodeType":"VariableDeclaration","scope":1893,"src":"4655:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:13"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"4690:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:13"},"scope":2055,"src":"4613:222:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"5120:1345:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1912,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6016:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:13","typeDescriptions":{}}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6008:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1925,"nodeType":"IfStatement","src":"6004:161:13","trueBody":{"id":1924,"nodeType":"Block","src":"6089:76:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:13","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6111:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1920,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6123:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"6123:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"id":1922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1909,"id":1923,"nodeType":"Return","src":"6103:51:13"}]}},{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"signer","nameLocation":"6267:6:13","nodeType":"VariableDeclaration","scope":1956,"src":"6259:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[{"id":1929,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"6286:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1930,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"6292:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1931,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6295:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1932,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6298:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1928,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:13","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6276:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"6314:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:13","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6324:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"IfStatement","src":"6310:101:13","trueBody":{"id":1949,"nodeType":"Block","src":"6336:75:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:13","typeDescriptions":{}}},"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1945,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6370:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"6370:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"id":1947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1909,"id":1948,"nodeType":"Return","src":"6350:50:13"}]}},{"expression":{"components":[{"id":1951,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"6429:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1952,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6437:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1699_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1694,"src":"6437:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"id":1954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1909,"id":1955,"nodeType":"Return","src":"6421:37:13"}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"4841:163:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:13","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"hash","nameLocation":"5037:4:13","nodeType":"VariableDeclaration","scope":1957,"src":"5029:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"v","nameLocation":"5049:1:13","nodeType":"VariableDeclaration","scope":1957,"src":"5043:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1897,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"r","nameLocation":"5060:1:13","nodeType":"VariableDeclaration","scope":1957,"src":"5052:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"s","nameLocation":"5071:1:13","nodeType":"VariableDeclaration","scope":1957,"src":"5063:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:13"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"5097:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"5106:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1907,"nodeType":"UserDefinedTypeName","pathNode":{"id":1906,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"5106:12:13"},"referencedDeclaration":1699,"src":"5106:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:13"},"scope":2055,"src":"5009:1456:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1989,"nodeType":"Block","src":"6692:138:13","statements":[{"assignments":[1972,1975],"declarations":[{"constant":false,"id":1972,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:13","nodeType":"VariableDeclaration","scope":1989,"src":"6703:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"error","nameLocation":"6735:5:13","nodeType":"VariableDeclaration","scope":1989,"src":"6722:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1974,"nodeType":"UserDefinedTypeName","pathNode":{"id":1973,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"6722:12:13"},"referencedDeclaration":1699,"src":"6722:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1982,"initialValue":{"arguments":[{"id":1977,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"6755:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1978,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6761:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1979,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6764:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1980,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"6767:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1976,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1789,1863,1957],"referencedDeclaration":1957,"src":"6744:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6744:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1699_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:13"},{"expression":{"arguments":[{"id":1984,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6791:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1699","typeString":"enum ECDSA.RecoverError"}],"id":1983,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6779:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1699_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6779:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"6779:18:13"},{"expression":{"id":1987,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6814:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1970,"id":1988,"nodeType":"Return","src":"6807:16:13"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"6471:122:13","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1990,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:13","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"hash","nameLocation":"6623:4:13","nodeType":"VariableDeclaration","scope":1990,"src":"6615:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"v","nameLocation":"6635:1:13","nodeType":"VariableDeclaration","scope":1990,"src":"6629:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1961,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"r","nameLocation":"6646:1:13","nodeType":"VariableDeclaration","scope":1990,"src":"6638:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"s","nameLocation":"6657:1:13","nodeType":"VariableDeclaration","scope":1990,"src":"6649:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:13"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"6683:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:13"},"scope":2055,"src":"6598:232:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"7206:310:13","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:13","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:13","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:13"},"nodeType":"YulFunctionCall","src":"7376:48:13"},"nodeType":"YulExpressionStatement","src":"7376:48:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:13","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:13"},"nodeType":"YulFunctionCall","src":"7437:18:13"},"nodeType":"YulExpressionStatement","src":"7437:18:13"},{"nodeType":"YulAssignment","src":"7468:32:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:13","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:13"},"nodeType":"YulFunctionCall","src":"7479:21:13"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1993,"isOffset":false,"isSlot":false,"src":"7450:4:13","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"7468:7:13","valueSize":1}],"id":1998,"nodeType":"InlineAssembly","src":"7353:157:13"}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"6836:279:13","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:13","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"hash","nameLocation":"7160:4:13","nodeType":"VariableDeclaration","scope":2000,"src":"7152:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:13"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"message","nameLocation":"7197:7:13","nodeType":"VariableDeclaration","scope":2000,"src":"7189:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:13"},"scope":2055,"src":"7120:396:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"7881:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2014,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"7976:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7976:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2012,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"7959:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1689_$","typeString":"type(library Strings)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1519,"src":"7959:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2017,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"7987:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2009,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2008,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:92:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2007,"id":2020,"nodeType":"Return","src":"7891:99:13"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"7522:274:13","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:13","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"s","nameLocation":"7846:1:13","nodeType":"VariableDeclaration","scope":2022,"src":"7833:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:13"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"7872:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:13"},"scope":2055,"src":"7801:196:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2033,"nodeType":"Block","src":"8443:290:13","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:13"},"nodeType":"YulFunctionCall","src":"8530:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:13"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:13","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:13"},"nodeType":"YulFunctionCall","src":"8554:23:13"},"nodeType":"YulExpressionStatement","src":"8554:23:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:13","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:13"},"nodeType":"YulFunctionCall","src":"8597:14:13"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:13"},"nodeType":"YulFunctionCall","src":"8590:39:13"},"nodeType":"YulExpressionStatement","src":"8590:39:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:13"},"nodeType":"YulFunctionCall","src":"8649:14:13"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:13"},"nodeType":"YulFunctionCall","src":"8642:34:13"},"nodeType":"YulExpressionStatement","src":"8642:34:13"},{"nodeType":"YulAssignment","src":"8689:28:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:13","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:13"},"nodeType":"YulFunctionCall","src":"8697:20:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2030,"isOffset":false,"isSlot":false,"src":"8689:4:13","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"8613:15:13","valueSize":1},{"declaration":2027,"isOffset":false,"isSlot":false,"src":"8665:10:13","valueSize":1}],"id":2032,"nodeType":"InlineAssembly","src":"8496:231:13"}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"8003:328:13","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:13","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:13","nodeType":"VariableDeclaration","scope":2034,"src":"8361:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:13","nodeType":"VariableDeclaration","scope":2034,"src":"8386:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:13"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"data","nameLocation":"8437:4:13","nodeType":"VariableDeclaration","scope":2034,"src":"8429:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:13"},"scope":2055,"src":"8336:397:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2053,"nodeType":"Block","src":"9048:80:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2048,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9104:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2049,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9115:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2045,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9075:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2044,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9065:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2043,"id":2052,"nodeType":"Return","src":"9058:63:13"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"8739:193:13","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2054,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:13","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"validator","nameLocation":"8986:9:13","nodeType":"VariableDeclaration","scope":2054,"src":"8978:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"data","nameLocation":"9010:4:13","nodeType":"VariableDeclaration","scope":2054,"src":"8997:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:13"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"9039:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:13"},"scope":2055,"src":"8937:191:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2056,"src":"369:8761:13","usedErrors":[]}],"src":"112:9019:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[2055],"EIP712":[2259],"IERC5267":[137],"Math":[3125],"ShortString":[1139],"ShortStrings":[1350],"SignedMath":[3230],"StorageSlot":[1460],"Strings":[1689]},"id":2260,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2057,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2260,"sourceUnit":2056,"src":"138:21:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2260,"sourceUnit":1351,"src":"160:29:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2260,"sourceUnit":138,"src":"190:39:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2062,"name":"IERC5267","nodeType":"IdentifierPath","referencedDeclaration":137,"src":"1837:8:14"},"id":2063,"nodeType":"InheritanceSpecifier","src":"1837:8:14"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"231:1577:14","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":2259,"linearizedBaseContracts":[2259,137],"name":"EIP712","nameLocation":"1827:6:14","nodeType":"ContractDefinition","nodes":[{"id":2065,"libraryName":{"id":2064,"name":"ShortStrings","nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"1858:12:14"},"nodeType":"UsingForDirective","src":"1852:25:14"},{"constant":true,"id":2070,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:14","nodeType":"VariableDeclaration","scope":2259,"src":"1883:141:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2067,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2072,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:14","nodeType":"VariableDeclaration","scope":2259,"src":"2223:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2074,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:14","nodeType":"VariableDeclaration","scope":2259,"src":"2277:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2076,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:14","nodeType":"VariableDeclaration","scope":2259,"src":"2323:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2078,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:14","nodeType":"VariableDeclaration","scope":2259,"src":"2367:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2080,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:14","nodeType":"VariableDeclaration","scope":2259,"src":"2410:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2083,"mutability":"immutable","name":"_name","nameLocation":"2487:5:14","nodeType":"VariableDeclaration","scope":2259,"src":"2457:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":2082,"nodeType":"UserDefinedTypeName","pathNode":{"id":2081,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"2457:11:14"},"referencedDeclaration":1139,"src":"2457:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2086,"mutability":"immutable","name":"_version","nameLocation":"2528:8:14","nodeType":"VariableDeclaration","scope":2259,"src":"2498:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"},"typeName":{"id":2085,"nodeType":"UserDefinedTypeName","pathNode":{"id":2084,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"2498:11:14"},"referencedDeclaration":1139,"src":"2498:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2088,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:14","nodeType":"VariableDeclaration","scope":2259,"src":"2542:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2090,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:14","nodeType":"VariableDeclaration","scope":2259,"src":"2576:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2089,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2147,"nodeType":"Block","src":"3233:376:14","statements":[{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2098,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"3243:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2101,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"3282:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2099,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"3251:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1291,"src":"3251:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1139_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"src":"3243:53:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"id":2104,"nodeType":"ExpressionStatement","src":"3243:53:14"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"3306:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2108,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"3351:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2106,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"3317:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1291,"src":"3317:33:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1139_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3317:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"src":"3306:62:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"id":2111,"nodeType":"ExpressionStatement","src":"3306:62:14"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2112,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"3378:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2116,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"3408:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2114,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:14","typeDescriptions":{}}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3402:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2113,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3392:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2120,"nodeType":"ExpressionStatement","src":"3378:36:14"},{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2121,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"3424:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2125,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"3457:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:14","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3451:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2122,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3441:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2129,"nodeType":"ExpressionStatement","src":"3424:42:14"},{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"3477:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2131,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"3477:30:14"},{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2135,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3517:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2136,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"3542:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3542:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2139,"nodeType":"ExpressionStatement","src":"3517:48:14"},{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3575:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2143,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:14","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3589:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2146,"nodeType":"ExpressionStatement","src":"3575:27:14"}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"2614:559:14","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2148,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"name","nameLocation":"3204:4:14","nodeType":"VariableDeclaration","scope":2148,"src":"3190:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"version","nameLocation":"3224:7:14","nodeType":"VariableDeclaration","scope":2148,"src":"3210:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2094,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:14"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3233:0:14"},"scope":2259,"src":"3178:431:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"3757:200:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2156,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:14","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3771:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2158,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3788:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2160,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2162,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"3820:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2171,"nodeType":"Block","src":"3896:55:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2168,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"3917:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3917:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2153,"id":2170,"nodeType":"Return","src":"3910:30:14"}]},"id":2172,"nodeType":"IfStatement","src":"3767:184:14","trueBody":{"id":2167,"nodeType":"Block","src":"3836:54:14","statements":[{"expression":{"id":2165,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3857:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2153,"id":2166,"nodeType":"Return","src":"3850:29:14"}]}}]},"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"3615:75:14","text":" @dev Returns the domain separator for the current chain."},"id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:14","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[],"src":"3722:2:14"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"3748:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:14"},"scope":2259,"src":"3695:262:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2194,"nodeType":"Block","src":"4027:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2182,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"4065:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2183,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4077:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2184,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4090:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2189,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}],"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:14","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4121:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2180,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4054:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4054:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2179,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4044:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2178,"id":2193,"nodeType":"Return","src":"4037:99:14"}]},"id":2195,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:14","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[],"src":"3993:2:14"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2195,"src":"4018:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:14"},"scope":2259,"src":"3963:180:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2210,"nodeType":"Block","src":"4854:79:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2205,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"4893:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4893:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2207,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4915:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2203,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4871:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2055_$","typeString":"type(library ECDSA)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"4871:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4871:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2202,"id":2209,"nodeType":"Return","src":"4864:62:14"}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"4149:614:14","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:14","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:14","nodeType":"VariableDeclaration","scope":2211,"src":"4794:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"4845:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:14"},"scope":2259,"src":"4768:165:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[136],"body":{"id":2257,"nodeType":"Block","src":"5366:288:14","statements":[{"expression":{"components":[{"hexValue":"0f","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":2234,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5454:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2232,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"5427:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"5427:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1139_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5427:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2238,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"5512:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2236,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"5482:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1139","typeString":"ShortString"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"5482:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1139_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$1139_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5482:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2240,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2244,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2259","typeString":"contract EIP712"}],"id":2243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:14","typeDescriptions":{}}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5570:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:14","typeDescriptions":{}}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5597:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ArrayTypeName","src":"5625:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5621:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2230,"id":2256,"nodeType":"Return","src":"5376:271:14"}]},"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"4939:77:14","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:14","nodeType":"FunctionDefinition","overrides":{"id":2214,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:14"},"parameters":{"id":2213,"nodeType":"ParameterList","parameters":[],"src":"5042:2:14"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"fields","nameLocation":"5143:6:14","nodeType":"VariableDeclaration","scope":2258,"src":"5136:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2215,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"name","nameLocation":"5177:4:14","nodeType":"VariableDeclaration","scope":2258,"src":"5163:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2217,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"version","nameLocation":"5209:7:14","nodeType":"VariableDeclaration","scope":2258,"src":"5195:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2219,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:14","nodeType":"VariableDeclaration","scope":2258,"src":"5230:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:14","nodeType":"VariableDeclaration","scope":2258,"src":"5259:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"salt","nameLocation":"5306:4:14","nodeType":"VariableDeclaration","scope":2258,"src":"5298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:14","nodeType":"VariableDeclaration","scope":2258,"src":"5324:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2228,"nodeType":"ArrayTypeName","src":"5324:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:14"},"scope":2259,"src":"5021:633:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2260,"src":"1809:3847:14","usedErrors":[1147,1149]}],"src":"113:5544:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3125]},"id":3126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2261,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"128:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3125,"linearizedBaseContracts":[3125],"name":"Math","nameLocation":"210:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2266,"members":[{"id":2263,"name":"Down","nameLocation":"245:4:15","nodeType":"EnumValue","src":"245:4:15"},{"id":2264,"name":"Up","nameLocation":"287:2:15","nodeType":"EnumValue","src":"287:2:15"},{"id":2265,"name":"Zero","nameLocation":"318:4:15","nodeType":"EnumValue","src":"318:4:15"}],"name":"Rounding","nameLocation":"226:8:15","nodeType":"EnumDefinition","src":"221:122:15"},{"body":{"id":2283,"nodeType":"Block","src":"480:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"497:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"501:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"509:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:15","trueExpression":{"id":2279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"505:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2275,"id":2282,"nodeType":"Return","src":"490:20:15"}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"349:59:15","text":" @dev Returns the largest of two numbers."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:15","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"a","nameLocation":"434:1:15","nodeType":"VariableDeclaration","scope":2284,"src":"426:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"b","nameLocation":"445:1:15","nodeType":"VariableDeclaration","scope":2284,"src":"437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:15"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"471:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:15"},"scope":3125,"src":"413:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2301,"nodeType":"Block","src":"655:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"672:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"684:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:15","trueExpression":{"id":2297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"680:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2293,"id":2300,"nodeType":"Return","src":"665:20:15"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"523:60:15","text":" @dev Returns the smallest of two numbers."},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:15","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"a","nameLocation":"609:1:15","nodeType":"VariableDeclaration","scope":2302,"src":"601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"b","nameLocation":"620:1:15","nodeType":"VariableDeclaration","scope":2302,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:15"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"646:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:15"},"scope":3125,"src":"588:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2324,"nodeType":"Block","src":"876:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2313,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"935:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"941:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2317,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2311,"id":2323,"nodeType":"Return","src":"923:28:15"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"698:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:15","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"a","nameLocation":"830:1:15","nodeType":"VariableDeclaration","scope":2325,"src":"822:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"b","nameLocation":"841:1:15","nodeType":"VariableDeclaration","scope":2325,"src":"833:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:15"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"867:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:15"},"scope":3125,"src":"805:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"1228:123:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1339:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:15","trueExpression":{"hexValue":"30","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2334,"id":2348,"nodeType":"Return","src":"1309:35:15"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"964:188:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:15","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"a","nameLocation":"1182:1:15","nodeType":"VariableDeclaration","scope":2350,"src":"1174:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"b","nameLocation":"1193:1:15","nodeType":"VariableDeclaration","scope":2350,"src":"1185:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:15"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2350,"src":"1219:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:15"},"scope":3125,"src":"1157:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2472,"nodeType":"Block","src":"1765:4115:15","statements":[{"id":2471,"nodeType":"UncheckedBlock","src":"1775:4099:15","statements":[{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:15","nodeType":"VariableDeclaration","scope":2471,"src":"2096:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"nodeType":"VariableDeclarationStatement","src":"2096:13:15"},{"assignments":[2366],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:15","nodeType":"VariableDeclaration","scope":2471,"src":"2168:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2367,"nodeType":"VariableDeclarationStatement","src":"2168:13:15"},{"AST":{"nodeType":"YulBlock","src":"2248:157:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:15"},"nodeType":"YulFunctionCall","src":"2289:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:15"},"nodeType":"YulFunctionCall","src":"2276:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:15","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:15"},"nodeType":"YulFunctionCall","src":"2322:9:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:15"}]},{"nodeType":"YulAssignment","src":"2348:43:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:15"},"nodeType":"YulFunctionCall","src":"2361:14:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:15"},"nodeType":"YulFunctionCall","src":"2377:13:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:15"},"nodeType":"YulFunctionCall","src":"2357:34:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2363,"isOffset":false,"isSlot":false,"src":"2313:5:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"2369:5:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"2384:5:15","valueSize":1},{"declaration":2366,"isOffset":false,"isSlot":false,"src":"2348:5:15","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"2283:1:15","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"2326:1:15","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"2286:1:15","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"2329:1:15","valueSize":1}],"id":2368,"nodeType":"InlineAssembly","src":"2239:166:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2486:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"IfStatement","src":"2482:368:15","trueBody":{"id":2376,"nodeType":"Block","src":"2498:352:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"2816:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"2824:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2361,"id":2375,"nodeType":"Return","src":"2809:26:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"2960:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2380,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2974:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2384,"nodeType":"ExpressionStatement","src":"2952:53:15"},{"assignments":[2386],"declarations":[{"constant":false,"id":2386,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:15","nodeType":"VariableDeclaration","scope":2471,"src":"3261:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"nodeType":"VariableDeclarationStatement","src":"3261:17:15"},{"AST":{"nodeType":"YulBlock","src":"3301:291:15","statements":[{"nodeType":"YulAssignment","src":"3370:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:15"},"nodeType":"YulFunctionCall","src":"3383:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:15"}]},{"nodeType":"YulAssignment","src":"3490:41:15","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:15"},"nodeType":"YulFunctionCall","src":"3510:20:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:15"},"nodeType":"YulFunctionCall","src":"3499:32:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:15"}]},{"nodeType":"YulAssignment","src":"3548:30:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:15"},"nodeType":"YulFunctionCall","src":"3557:21:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2357,"isOffset":false,"isSlot":false,"src":"3396:11:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"3524:5:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"3548:5:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"3561:5:15","valueSize":1},{"declaration":2366,"isOffset":false,"isSlot":false,"src":"3490:5:15","valueSize":1},{"declaration":2366,"isOffset":false,"isSlot":false,"src":"3503:5:15","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"3370:9:15","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"3513:9:15","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"3568:9:15","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"3390:1:15","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"3393:1:15","valueSize":1}],"id":2388,"nodeType":"InlineAssembly","src":"3292:300:15"},{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"twos","nameLocation":"3907:4:15","nodeType":"VariableDeclaration","scope":2471,"src":"3899:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3914:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:15","subExpression":{"id":2392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3930:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:15"},{"AST":{"nodeType":"YulBlock","src":"3969:362:15","statements":[{"nodeType":"YulAssignment","src":"4034:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:15"},"nodeType":"YulFunctionCall","src":"4049:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:15"}]},{"nodeType":"YulAssignment","src":"4138:25:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:15"},"nodeType":"YulFunctionCall","src":"4147:16:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:15"}]},{"nodeType":"YulAssignment","src":"4278:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:15"},"nodeType":"YulFunctionCall","src":"4294:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:15"},"nodeType":"YulFunctionCall","src":"4290:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:15"},"nodeType":"YulFunctionCall","src":"4286:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:15"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2357,"isOffset":false,"isSlot":false,"src":"4034:11:15","valueSize":1},{"declaration":2357,"isOffset":false,"isSlot":false,"src":"4053:11:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"4138:5:15","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"4151:5:15","valueSize":1},{"declaration":2390,"isOffset":false,"isSlot":false,"src":"4066:4:15","valueSize":1},{"declaration":2390,"isOffset":false,"isSlot":false,"src":"4158:4:15","valueSize":1},{"declaration":2390,"isOffset":false,"isSlot":false,"src":"4278:4:15","valueSize":1},{"declaration":2390,"isOffset":false,"isSlot":false,"src":"4301:4:15","valueSize":1},{"declaration":2390,"isOffset":false,"isSlot":false,"src":"4308:4:15","valueSize":1}],"id":2399,"nodeType":"InlineAssembly","src":"3960:371:15"},{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2401,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"4406:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2402,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"4414:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"4397:21:15"},{"assignments":[2407],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:15","nodeType":"VariableDeclaration","scope":2471,"src":"4736:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2409,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"4759:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:15"},{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5007:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2418,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5021:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ExpressionStatement","src":"4992:36:15"},{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2423,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5076:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2426,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ExpressionStatement","src":"5061:36:15"},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2431,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5131:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5146:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2438,"nodeType":"ExpressionStatement","src":"5131:36:15"},{"expression":{"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2439,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5201:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5216:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2442,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2446,"nodeType":"ExpressionStatement","src":"5201:36:15"},{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2447,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5286:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2450,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5300:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"5271:36:15"},{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2455,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5357:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2458,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ExpressionStatement","src":"5342:36:15"},{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"5812:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2464,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"5821:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2465,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"5812:24:15"},{"expression":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"5857:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2361,"id":2470,"nodeType":"Return","src":"5850:13:15"}]}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"1357:305:15","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:15","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"x","nameLocation":"1691:1:15","nodeType":"VariableDeclaration","scope":2473,"src":"1683:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"y","nameLocation":"1702:1:15","nodeType":"VariableDeclaration","scope":2473,"src":"1694:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:15","nodeType":"VariableDeclaration","scope":2473,"src":"1705:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:15"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"result","nameLocation":"1757:6:15","nodeType":"VariableDeclaration","scope":2473,"src":"1749:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:15"},"scope":3125,"src":"1667:4213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2516,"nodeType":"Block","src":"6122:189:15","statements":[{"assignments":[2489],"declarations":[{"constant":false,"id":2489,"mutability":"mutable","name":"result","nameLocation":"6140:6:15","nodeType":"VariableDeclaration","scope":2516,"src":"6132:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2495,"initialValue":{"arguments":[{"id":2491,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"6156:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2492,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"6159:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6162:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2490,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2473,2517],"referencedDeclaration":2473,"src":"6149:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6188:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2497,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"6200:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2266_$","typeString":"type(enum Math.Rounding)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2264,"src":"6200:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"src":"6188:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2501,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"6222:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2502,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"6225:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2503,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6228:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2500,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"6184:98:15","trueBody":{"id":2512,"nodeType":"Block","src":"6246:36:15","statements":[{"expression":{"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"6260:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2511,"nodeType":"ExpressionStatement","src":"6260:11:15"}]}},{"expression":{"id":2514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"6298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2487,"id":2515,"nodeType":"Return","src":"6291:13:15"}]},"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"5886:121:15","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:15","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"x","nameLocation":"6036:1:15","nodeType":"VariableDeclaration","scope":2517,"src":"6028:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"y","nameLocation":"6047:1:15","nodeType":"VariableDeclaration","scope":2517,"src":"6039:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:15","nodeType":"VariableDeclaration","scope":2517,"src":"6050:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:15","nodeType":"VariableDeclaration","scope":2517,"src":"6071:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2266,"src":"6071:8:15"},"referencedDeclaration":2266,"src":"6071:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:15"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"6113:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:15"},"scope":3125,"src":"6012:299:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"6587:1585:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"6601:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2531,"nodeType":"IfStatement","src":"6597:45:15","trueBody":{"id":2530,"nodeType":"Block","src":"6609:33:15","statements":[{"expression":{"hexValue":"30","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2524,"id":2529,"nodeType":"Return","src":"6623:8:15"}]}},{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"result","nameLocation":"7329:6:15","nodeType":"VariableDeclaration","scope":2628,"src":"7321:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2542,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7349:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2535,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2797,2833],"referencedDeclaration":2797,"src":"7344:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:15"},{"id":2627,"nodeType":"UncheckedBlock","src":"7758:408:15","statements":[{"expression":{"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7792:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7801:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7805:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2553,"nodeType":"ExpressionStatement","src":"7782:35:15"},{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7831:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7841:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7850:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7854:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ExpressionStatement","src":"7831:35:15"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7890:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7899:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7903:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"7880:35:15"},{"expression":{"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7929:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7939:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7948:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7952:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2586,"nodeType":"ExpressionStatement","src":"7929:35:15"},{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7978:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"7988:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7997:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8001:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ExpressionStatement","src":"7978:35:15"},{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8027:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8037:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"8046:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8050:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"8027:35:15"},{"expression":{"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8076:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8086:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"8095:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8099:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ExpressionStatement","src":"8076:35:15"},{"expression":{"arguments":[{"id":2621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8136:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"8144:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8148:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2620,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"8132:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2524,"id":2626,"nodeType":"Return","src":"8125:30:15"}]}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"6317:208:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:15","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"a","nameLocation":"6552:1:15","nodeType":"VariableDeclaration","scope":2629,"src":"6544:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:15"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"6578:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:15"},"scope":3125,"src":"6530:1642:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"8348:161:15","statements":[{"id":2663,"nodeType":"UncheckedBlock","src":"8358:145:15","statements":[{"assignments":[2641],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"result","nameLocation":"8390:6:15","nodeType":"VariableDeclaration","scope":2663,"src":"8382:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2645,"initialValue":{"arguments":[{"id":2643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"8404:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2642,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2629,2665],"referencedDeclaration":2629,"src":"8399:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8427:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8437:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2648,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"8449:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2266_$","typeString":"type(enum Math.Rounding)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2264,"src":"8449:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"src":"8437:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8464:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8473:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"8482:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:15","trueExpression":{"hexValue":"31","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2639,"id":2662,"nodeType":"Return","src":"8420:72:15"}]}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"8178:89:15","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:15","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"a","nameLocation":"8294:1:15","nodeType":"VariableDeclaration","scope":2665,"src":"8286:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:15","nodeType":"VariableDeclaration","scope":2665,"src":"8297:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"typeName":{"id":2634,"nodeType":"UserDefinedTypeName","pathNode":{"id":2633,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2266,"src":"8297:8:15"},"referencedDeclaration":2266,"src":"8297:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:15"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"8339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:15"},"scope":3125,"src":"8272:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"8694:922:15","statements":[{"assignments":[2674],"declarations":[{"constant":false,"id":2674,"mutability":"mutable","name":"result","nameLocation":"8712:6:15","nodeType":"VariableDeclaration","scope":2796,"src":"8704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2676,"initialValue":{"hexValue":"30","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:15"},{"id":2793,"nodeType":"UncheckedBlock","src":"8732:855:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8760:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2691,"nodeType":"IfStatement","src":"8756:99:15","trueBody":{"id":2690,"nodeType":"Block","src":"8778:77:15","statements":[{"expression":{"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8796:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2685,"nodeType":"ExpressionStatement","src":"8796:13:15"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"8827:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"8827:13:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8872:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2706,"nodeType":"IfStatement","src":"8868:96:15","trueBody":{"id":2705,"nodeType":"Block","src":"8889:75:15","statements":[{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8907:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ExpressionStatement","src":"8907:12:15"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"8937:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"8937:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"8981:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2721,"nodeType":"IfStatement","src":"8977:96:15","trueBody":{"id":2720,"nodeType":"Block","src":"8998:75:15","statements":[{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9016:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2715,"nodeType":"ExpressionStatement","src":"9016:12:15"},{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2719,"nodeType":"ExpressionStatement","src":"9046:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9090:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"IfStatement","src":"9086:96:15","trueBody":{"id":2735,"nodeType":"Block","src":"9107:75:15","statements":[{"expression":{"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9125:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2730,"nodeType":"ExpressionStatement","src":"9125:12:15"},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9155:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"9155:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9199:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"9195:93:15","trueBody":{"id":2750,"nodeType":"Block","src":"9215:73:15","statements":[{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9233:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2745,"nodeType":"ExpressionStatement","src":"9233:11:15"},{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9262:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"nodeType":"ExpressionStatement","src":"9262:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9305:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2766,"nodeType":"IfStatement","src":"9301:93:15","trueBody":{"id":2765,"nodeType":"Block","src":"9321:73:15","statements":[{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9339:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2760,"nodeType":"ExpressionStatement","src":"9339:11:15"},{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9368:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2764,"nodeType":"ExpressionStatement","src":"9368:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9411:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2781,"nodeType":"IfStatement","src":"9407:93:15","trueBody":{"id":2780,"nodeType":"Block","src":"9427:73:15","statements":[{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9445:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2775,"nodeType":"ExpressionStatement","src":"9445:11:15"},{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9474:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"9474:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9517:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2792,"nodeType":"IfStatement","src":"9513:64:15","trueBody":{"id":2791,"nodeType":"Block","src":"9533:44:15","statements":[{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9551:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"9551:11:15"}]}}]},{"expression":{"id":2794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9603:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2672,"id":2795,"nodeType":"Return","src":"9596:13:15"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"8515:113:15","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:15","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"value","nameLocation":"8655:5:15","nodeType":"VariableDeclaration","scope":2797,"src":"8647:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:15"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"8685:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:15"},"scope":3125,"src":"8633:983:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"9849:165:15","statements":[{"id":2831,"nodeType":"UncheckedBlock","src":"9859:149:15","statements":[{"assignments":[2809],"declarations":[{"constant":false,"id":2809,"mutability":"mutable","name":"result","nameLocation":"9891:6:15","nodeType":"VariableDeclaration","scope":2831,"src":"9883:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2813,"initialValue":{"arguments":[{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"9905:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2810,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2797,2833],"referencedDeclaration":2797,"src":"9900:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9932:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"9942:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2816,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"9954:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2266_$","typeString":"type(enum Math.Rounding)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2264,"src":"9954:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"src":"9942:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9974:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"9983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:15","trueExpression":{"hexValue":"31","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2807,"id":2830,"nodeType":"Return","src":"9925:72:15"}]}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"9622:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:15","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"value","nameLocation":"9791:5:15","nodeType":"VariableDeclaration","scope":2833,"src":"9783:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:15","nodeType":"VariableDeclaration","scope":2833,"src":"9798:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"typeName":{"id":2802,"nodeType":"UserDefinedTypeName","pathNode":{"id":2801,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2266,"src":"9798:8:15"},"referencedDeclaration":2266,"src":"9798:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:15"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"9840:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:15"},"scope":3125,"src":"9769:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2961,"nodeType":"Block","src":"10201:854:15","statements":[{"assignments":[2842],"declarations":[{"constant":false,"id":2842,"mutability":"mutable","name":"result","nameLocation":"10219:6:15","nodeType":"VariableDeclaration","scope":2961,"src":"10211:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2844,"initialValue":{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:15"},{"id":2958,"nodeType":"UncheckedBlock","src":"10239:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10267:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2861,"nodeType":"IfStatement","src":"10263:103:15","trueBody":{"id":2860,"nodeType":"Block","src":"10286:80:15","statements":[{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10304:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2855,"nodeType":"ExpressionStatement","src":"10304:17:15"},{"expression":{"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10339:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2859,"nodeType":"ExpressionStatement","src":"10339:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2878,"nodeType":"IfStatement","src":"10379:103:15","trueBody":{"id":2877,"nodeType":"Block","src":"10402:80:15","statements":[{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10420:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"10420:17:15"},{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10455:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"10455:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10499:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2895,"nodeType":"IfStatement","src":"10495:103:15","trueBody":{"id":2894,"nodeType":"Block","src":"10518:80:15","statements":[{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10536:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"10536:17:15"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10571:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"10571:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10615:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"nodeType":"IfStatement","src":"10611:100:15","trueBody":{"id":2911,"nodeType":"Block","src":"10633:78:15","statements":[{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10651:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2906,"nodeType":"ExpressionStatement","src":"10651:16:15"},{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10685:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2910,"nodeType":"ExpressionStatement","src":"10685:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10728:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"nodeType":"IfStatement","src":"10724:100:15","trueBody":{"id":2928,"nodeType":"Block","src":"10746:78:15","statements":[{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10764:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2923,"nodeType":"ExpressionStatement","src":"10764:16:15"},{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10798:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"10798:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10841:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"IfStatement","src":"10837:100:15","trueBody":{"id":2945,"nodeType":"Block","src":"10859:78:15","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10877:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"10877:16:15"},{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10911:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"10911:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10954:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"IfStatement","src":"10950:66:15","trueBody":{"id":2956,"nodeType":"Block","src":"10972:44:15","statements":[{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10990:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"10990:11:15"}]}}]},{"expression":{"id":2959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"11042:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2840,"id":2960,"nodeType":"Return","src":"11035:13:15"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"10020:114:15","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:15","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"value","nameLocation":"10162:5:15","nodeType":"VariableDeclaration","scope":2962,"src":"10154:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:15"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"10192:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:15"},"scope":3125,"src":"10139:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2997,"nodeType":"Block","src":"11290:167:15","statements":[{"id":2996,"nodeType":"UncheckedBlock","src":"11300:151:15","statements":[{"assignments":[2974],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"result","nameLocation":"11332:6:15","nodeType":"VariableDeclaration","scope":2996,"src":"11324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2978,"initialValue":{"arguments":[{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"11347:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2975,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2962,2998],"referencedDeclaration":2962,"src":"11341:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"11374:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"11384:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2981,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"11396:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2266_$","typeString":"type(enum Math.Rounding)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2264,"src":"11396:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"src":"11384:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"11417:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"11426:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:15","trueExpression":{"hexValue":"31","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2972,"id":2995,"nodeType":"Return","src":"11367:73:15"}]}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"11061:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:15","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"value","nameLocation":"11232:5:15","nodeType":"VariableDeclaration","scope":2998,"src":"11224:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:15","nodeType":"VariableDeclaration","scope":2998,"src":"11239:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"typeName":{"id":2967,"nodeType":"UserDefinedTypeName","pathNode":{"id":2966,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2266,"src":"11239:8:15"},"referencedDeclaration":2266,"src":"11239:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:15"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"11281:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:15"},"scope":3125,"src":"11209:248:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"11771:600:15","statements":[{"assignments":[3007],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"result","nameLocation":"11789:6:15","nodeType":"VariableDeclaration","scope":3084,"src":"11781:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3009,"initialValue":{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:15"},{"id":3081,"nodeType":"UncheckedBlock","src":"11809:533:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11837:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3024,"nodeType":"IfStatement","src":"11833:98:15","trueBody":{"id":3023,"nodeType":"Block","src":"11855:76:15","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11873:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"nodeType":"ExpressionStatement","src":"11873:13:15"},{"expression":{"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"11904:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"nodeType":"ExpressionStatement","src":"11904:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3039,"nodeType":"IfStatement","src":"11944:95:15","trueBody":{"id":3038,"nodeType":"Block","src":"11965:74:15","statements":[{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"nodeType":"ExpressionStatement","src":"11983:12:15"},{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12013:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ExpressionStatement","src":"12013:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12056:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"IfStatement","src":"12052:95:15","trueBody":{"id":3053,"nodeType":"Block","src":"12073:74:15","statements":[{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12091:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"12091:12:15"},{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12121:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"nodeType":"ExpressionStatement","src":"12121:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"nodeType":"IfStatement","src":"12160:95:15","trueBody":{"id":3068,"nodeType":"Block","src":"12181:74:15","statements":[{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12199:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"12199:12:15"},{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12229:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"nodeType":"ExpressionStatement","src":"12229:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"12272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"12268:64:15","trueBody":{"id":3079,"nodeType":"Block","src":"12288:44:15","statements":[{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12306:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3078,"nodeType":"ExpressionStatement","src":"12306:11:15"}]}}]},{"expression":{"id":3082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12358:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3005,"id":3083,"nodeType":"Return","src":"12351:13:15"}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"11463:240:15","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:15","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"value","nameLocation":"11732:5:15","nodeType":"VariableDeclaration","scope":3085,"src":"11724:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:15"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"11762:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:15"},"scope":3125,"src":"11708:663:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"12608:174:15","statements":[{"id":3122,"nodeType":"UncheckedBlock","src":"12618:158:15","statements":[{"assignments":[3097],"declarations":[{"constant":false,"id":3097,"mutability":"mutable","name":"result","nameLocation":"12650:6:15","nodeType":"VariableDeclaration","scope":3122,"src":"12642:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3101,"initialValue":{"arguments":[{"id":3099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"12666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3098,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3085,3124],"referencedDeclaration":3085,"src":"12659:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"12693:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"12703:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3104,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"12715:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2266_$","typeString":"type(enum Math.Rounding)"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2264,"src":"12715:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"src":"12703:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"12736:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"12751:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:15","trueExpression":{"hexValue":"31","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3095,"id":3121,"nodeType":"Return","src":"12686:79:15"}]}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"12377:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:15","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"value","nameLocation":"12550:5:15","nodeType":"VariableDeclaration","scope":3124,"src":"12542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:15","nodeType":"VariableDeclaration","scope":3124,"src":"12557:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"},"typeName":{"id":3090,"nodeType":"UserDefinedTypeName","pathNode":{"id":3089,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2266,"src":"12557:8:15"},"referencedDeclaration":2266,"src":"12557:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2266","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:15"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"12599:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:15"},"scope":3125,"src":"12526:256:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3126,"src":"202:12582:15","usedErrors":[]}],"src":"103:12682:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3230]},"id":3231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3127,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"134:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3230,"linearizedBaseContracts":[3230],"name":"SignedMath","nameLocation":"223:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3145,"nodeType":"Block","src":"375:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"392:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"396:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"404:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:16","trueExpression":{"id":3141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"400:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3137,"id":3144,"nodeType":"Return","src":"385:20:16"}]},"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"240:66:16","text":" @dev Returns the largest of two signed numbers."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:16","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"a","nameLocation":"331:1:16","nodeType":"VariableDeclaration","scope":3146,"src":"324:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3130,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"b","nameLocation":"341:1:16","nodeType":"VariableDeclaration","scope":3146,"src":"334:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3132,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:16"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"367:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3135,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:16"},"scope":3230,"src":"311:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"554:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"571:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"575:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"583:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:16","trueExpression":{"id":3159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"579:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3155,"id":3162,"nodeType":"Return","src":"564:20:16"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"418:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:16","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"a","nameLocation":"510:1:16","nodeType":"VariableDeclaration","scope":3164,"src":"503:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3148,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"b","nameLocation":"520:1:16","nodeType":"VariableDeclaration","scope":3164,"src":"513:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3150,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:16"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"546:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3153,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:16"},"scope":3230,"src":"490:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"796:162:16","statements":[{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"x","nameLocation":"865:1:16","nodeType":"VariableDeclaration","scope":3207,"src":"858:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3174,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3188,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"870:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"874:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"881:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"885:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"910:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3194,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"930:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:16","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3190,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:16","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"944:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"948:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3173,"id":3206,"nodeType":"Return","src":"903:48:16"}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"597:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:16","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"a","nameLocation":"752:1:16","nodeType":"VariableDeclaration","scope":3208,"src":"745:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3166,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"b","nameLocation":"762:1:16","nodeType":"VariableDeclaration","scope":3208,"src":"755:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3168,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:16"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3208,"src":"788:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3171,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:16"},"scope":3230,"src":"728:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3228,"nodeType":"Block","src":"1102:158:16","statements":[{"id":3227,"nodeType":"UncheckedBlock","src":"1112:142:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"1227:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:16","subExpression":{"id":3222,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"1241:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:16","trueExpression":{"id":3221,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"1236:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{}}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3215,"id":3226,"nodeType":"Return","src":"1212:31:16"}]}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"964:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:16","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"n","nameLocation":"1067:1:16","nodeType":"VariableDeclaration","scope":3229,"src":"1060:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3210,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:16"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3229,"src":"1093:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:16"},"scope":3230,"src":"1047:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3231,"src":"215:1047:16","usedErrors":[]}],"src":"109:1154:16"},"id":16},"contracts/ERC20TokenUSDC.sol":{"ast":{"absolutePath":"contracts/ERC20TokenUSDC.sol","exportedSymbols":{"Context":[1060],"Counters":[1134],"ECDSA":[2055],"EIP712":[2259],"ERC20":[724],"ERC20Permit":[974],"ERC20TokenUSDC":[3268],"IERC20":[802],"IERC20Metadata":[999],"IERC20Permit":[1035],"IERC5267":[137],"Math":[3125],"Ownable":[112],"ShortString":[1139],"ShortStrings":[1350],"SignedMath":[3230],"StorageSlot":[1460],"Strings":[1689]},"id":3269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3232,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3269,"sourceUnit":725,"src":"60:55:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3269,"sourceUnit":113,"src":"117:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":3235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3269,"sourceUnit":1039,"src":"171:78:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3236,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":724,"src":"280:5:17"},"id":3237,"nodeType":"InheritanceSpecifier","src":"280:5:17"},{"baseName":{"id":3238,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"287:7:17"},"id":3239,"nodeType":"InheritanceSpecifier","src":"287:7:17"},{"baseName":{"id":3240,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":974,"src":"296:11:17"},"id":3241,"nodeType":"InheritanceSpecifier","src":"296:11:17"}],"canonicalName":"ERC20TokenUSDC","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3268,"linearizedBaseContracts":[3268,974,2259,137,1035,112,724,999,802,1060],"name":"ERC20TokenUSDC","nameLocation":"262:14:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3251,"nodeType":"Block","src":"392:2:17","statements":[]},"id":3252,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4552433230546f6b656e55534443","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"335:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_23b0f330af4246872dfdd8af4084ada231e73c19fa49138056fdf6dacbab8ba0","typeString":"literal_string \"ERC20TokenUSDC\""},"value":"ERC20TokenUSDC"},{"hexValue":"5455534443","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"353:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71e23f2e7d4b62de5f28ee784b04b7e1cfaff423b2983ebcc46b750f66527dce","typeString":"literal_string \"TUSDC\""},"value":"TUSDC"}],"id":3246,"kind":"baseConstructorSpecifier","modifierName":{"id":3243,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":724,"src":"329:5:17"},"nodeType":"ModifierInvocation","src":"329:32:17"},{"arguments":[{"hexValue":"4552433230546f6b656e55534443","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"374:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_23b0f330af4246872dfdd8af4084ada231e73c19fa49138056fdf6dacbab8ba0","typeString":"literal_string \"ERC20TokenUSDC\""},"value":"ERC20TokenUSDC"}],"id":3249,"kind":"baseConstructorSpecifier","modifierName":{"id":3247,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":974,"src":"362:11:17"},"nodeType":"ModifierInvocation","src":"362:29:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[],"src":"326:2:17"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[],"src":"392:0:17"},"scope":3268,"src":"315:79:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3266,"nodeType":"Block","src":"461:36:17","statements":[{"expression":{"arguments":[{"id":3262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"478:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3263,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"482:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3261,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"472:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"472:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3265,"nodeType":"ExpressionStatement","src":"472:17:17"}]},"functionSelector":"40c10f19","id":3267,"implemented":true,"kind":"function","modifiers":[{"id":3259,"kind":"modifierInvocation","modifierName":{"id":3258,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"451:9:17"},"nodeType":"ModifierInvocation","src":"451:9:17"}],"name":"mint","nameLocation":"411:4:17","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"to","nameLocation":"424:2:17","nodeType":"VariableDeclaration","scope":3267,"src":"416:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"amount","nameLocation":"436:6:17","nodeType":"VariableDeclaration","scope":3267,"src":"428:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:28:17"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[],"src":"461:0:17"},"scope":3268,"src":"402:95:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3269,"src":"253:247:17","usedErrors":[1147,1149]}],"src":"33:469:17"},"id":17}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_182":{"entryPoint":null,"id":182,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"423:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:18"},"nodeType":"YulFunctionCall","src":"433:12:18"},"nodeType":"YulExpressionStatement","src":"433:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:18"},{"body":{"nodeType":"YulBlock","src":"546:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:18"},"nodeType":"YulFunctionCall","src":"556:12:18"},"nodeType":"YulExpressionStatement","src":"556:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:18"},{"body":{"nodeType":"YulBlock","src":"628:54:18","statements":[{"nodeType":"YulAssignment","src":"638:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:18"},"nodeType":"YulFunctionCall","src":"652:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:18"},"nodeType":"YulFunctionCall","src":"668:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:18"},"nodeType":"YulFunctionCall","src":"648:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:18","type":""}],"src":"580:102:18"},{"body":{"nodeType":"YulBlock","src":"716:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:18"},"nodeType":"YulFunctionCall","src":"726:88:18"},"nodeType":"YulExpressionStatement","src":"726:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:18"},"nodeType":"YulFunctionCall","src":"823:15:18"},"nodeType":"YulExpressionStatement","src":"823:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:18"},"nodeType":"YulFunctionCall","src":"847:15:18"},"nodeType":"YulExpressionStatement","src":"847:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:18"},{"body":{"nodeType":"YulBlock","src":"917:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:18"},"nodeType":"YulFunctionCall","src":"957:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:18"},"nodeType":"YulFunctionCall","src":"945:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:18"},"nodeType":"YulFunctionCall","src":"1098:18:18"},"nodeType":"YulExpressionStatement","src":"1098:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:18"},"nodeType":"YulFunctionCall","src":"1036:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:18"},"nodeType":"YulFunctionCall","src":"1072:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:18"},"nodeType":"YulFunctionCall","src":"1033:62:18"},"nodeType":"YulIf","src":"1030:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:18"},"nodeType":"YulFunctionCall","src":"1127:22:18"},"nodeType":"YulExpressionStatement","src":"1127:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:18","type":""}],"src":"874:281:18"},{"body":{"nodeType":"YulBlock","src":"1202:88:18","statements":[{"nodeType":"YulAssignment","src":"1212:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:18"},"nodeType":"YulFunctionCall","src":"1222:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:18"},"nodeType":"YulFunctionCall","src":"1251:33:18"},"nodeType":"YulExpressionStatement","src":"1251:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:18","type":""}],"src":"1161:129:18"},{"body":{"nodeType":"YulBlock","src":"1363:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:18"},"nodeType":"YulFunctionCall","src":"1470:18:18"},"nodeType":"YulExpressionStatement","src":"1470:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:18"},"nodeType":"YulFunctionCall","src":"1437:30:18"},"nodeType":"YulIf","src":"1434:56:18"},{"nodeType":"YulAssignment","src":"1500:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:18"},"nodeType":"YulFunctionCall","src":"1508:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:18"}]},{"nodeType":"YulAssignment","src":"1574:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:18"},"nodeType":"YulFunctionCall","src":"1582:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:18","type":""}],"src":"1296:308:18"},{"body":{"nodeType":"YulBlock","src":"1659:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:18"},"nodeType":"YulFunctionCall","src":"1759:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:18"},"nodeType":"YulFunctionCall","src":"1778:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:18"},"nodeType":"YulFunctionCall","src":"1772:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:18"},"nodeType":"YulFunctionCall","src":"1752:39:18"},"nodeType":"YulExpressionStatement","src":"1752:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:18"},"nodeType":"YulFunctionCall","src":"1696:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:18","statements":[{"nodeType":"YulAssignment","src":"1712:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:18"},"nodeType":"YulFunctionCall","src":"1717:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:18","statements":[]},"src":"1688:113:18"},{"body":{"nodeType":"YulBlock","src":"1835:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:18"},"nodeType":"YulFunctionCall","src":"1881:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:18"},"nodeType":"YulFunctionCall","src":"1874:27:18"},"nodeType":"YulExpressionStatement","src":"1874:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:18"},"nodeType":"YulFunctionCall","src":"1813:13:18"},"nodeType":"YulIf","src":"1810:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:18","type":""}],"src":"1610:307:18"},{"body":{"nodeType":"YulBlock","src":"2018:326:18","statements":[{"nodeType":"YulAssignment","src":"2028:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:18"},"nodeType":"YulFunctionCall","src":"2053:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:18"},"nodeType":"YulFunctionCall","src":"2037:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:18"},"nodeType":"YulFunctionCall","src":"2112:21:18"},"nodeType":"YulExpressionStatement","src":"2112:21:18"},{"nodeType":"YulVariableDeclaration","src":"2142:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:18"},"nodeType":"YulFunctionCall","src":"2153:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:18"},"nodeType":"YulFunctionCall","src":"2209:79:18"},"nodeType":"YulExpressionStatement","src":"2209:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:18"},"nodeType":"YulFunctionCall","src":"2184:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:18"},"nodeType":"YulFunctionCall","src":"2181:25:18"},"nodeType":"YulIf","src":"2178:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:18"},"nodeType":"YulFunctionCall","src":"2299:39:18"},"nodeType":"YulExpressionStatement","src":"2299:39:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:18","type":""}],"src":"1923:421:18"},{"body":{"nodeType":"YulBlock","src":"2437:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:18"},"nodeType":"YulFunctionCall","src":"2488:79:18"},"nodeType":"YulExpressionStatement","src":"2488:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:18"},"nodeType":"YulFunctionCall","src":"2461:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:18"},"nodeType":"YulFunctionCall","src":"2457:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:18"},"nodeType":"YulFunctionCall","src":"2450:35:18"},"nodeType":"YulIf","src":"2447:122:18"},{"nodeType":"YulVariableDeclaration","src":"2578:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:18"},"nodeType":"YulFunctionCall","src":"2592:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:18"},"nodeType":"YulFunctionCall","src":"2682:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:18"},"nodeType":"YulFunctionCall","src":"2623:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:18","type":""}],"src":"2364:355:18"},{"body":{"nodeType":"YulBlock","src":"2839:739:18","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:18"},"nodeType":"YulFunctionCall","src":"2887:79:18"},"nodeType":"YulExpressionStatement","src":"2887:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:18"},"nodeType":"YulFunctionCall","src":"2856:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:18"},"nodeType":"YulFunctionCall","src":"2852:32:18"},"nodeType":"YulIf","src":"2849:119:18"},{"nodeType":"YulBlock","src":"2978:291:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:18"},"nodeType":"YulFunctionCall","src":"3013:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:18"},"nodeType":"YulFunctionCall","src":"3007:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:18"},"nodeType":"YulFunctionCall","src":"3080:79:18"},"nodeType":"YulExpressionStatement","src":"3080:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:18"},"nodeType":"YulFunctionCall","src":"3047:30:18"},"nodeType":"YulIf","src":"3044:117:18"},{"nodeType":"YulAssignment","src":"3175:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:18"},"nodeType":"YulFunctionCall","src":"3227:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:18"},"nodeType":"YulFunctionCall","src":"3185:74:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:18"}]}]},{"nodeType":"YulBlock","src":"3279:292:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:18"},"nodeType":"YulFunctionCall","src":"3314:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:18"},"nodeType":"YulFunctionCall","src":"3308:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:18"},"nodeType":"YulFunctionCall","src":"3382:79:18"},"nodeType":"YulExpressionStatement","src":"3382:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:18"},"nodeType":"YulFunctionCall","src":"3349:30:18"},"nodeType":"YulIf","src":"3346:117:18"},{"nodeType":"YulAssignment","src":"3477:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:18"},"nodeType":"YulFunctionCall","src":"3529:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:18"},"nodeType":"YulFunctionCall","src":"3487:74:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:18","type":""}],"src":"2725:853:18"},{"body":{"nodeType":"YulBlock","src":"3612:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:18"},"nodeType":"YulFunctionCall","src":"3622:88:18"},"nodeType":"YulExpressionStatement","src":"3622:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:18"},"nodeType":"YulFunctionCall","src":"3719:15:18"},"nodeType":"YulExpressionStatement","src":"3719:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:18"},"nodeType":"YulFunctionCall","src":"3743:15:18"},"nodeType":"YulExpressionStatement","src":"3743:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:18"},{"body":{"nodeType":"YulBlock","src":"3821:269:18","statements":[{"nodeType":"YulAssignment","src":"3831:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:18"},"nodeType":"YulFunctionCall","src":"3841:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:18"},"nodeType":"YulFunctionCall","src":"3888:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:18","statements":[{"nodeType":"YulAssignment","src":"3953:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:18"},"nodeType":"YulFunctionCall","src":"3963:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:18"},"nodeType":"YulFunctionCall","src":"3912:26:18"},"nodeType":"YulIf","src":"3909:81:18"},{"body":{"nodeType":"YulBlock","src":"4042:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:18"},"nodeType":"YulFunctionCall","src":"4056:18:18"},"nodeType":"YulExpressionStatement","src":"4056:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:18"},"nodeType":"YulFunctionCall","src":"4026:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:18"},"nodeType":"YulFunctionCall","src":"4003:38:18"},"nodeType":"YulIf","src":"4000:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:18","type":""}],"src":"3770:320:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001617380380620016178339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220a511f60d9e36c99da79c85cf2a7737063a8652019b09662bab921325d9036a3264736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 GT 0xF6 0xD SWAP15 CALLDATASIZE 0xC9 SWAP14 0xA7 SWAP13 DUP6 0xCF 0x2A PUSH24 0x37063A8652019B09662BAB921325D9036A3264736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1532:11312:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_723":{"entryPoint":2683,"id":723,"parameterSlots":3,"returnSlots":0},"@_approve_658":{"entryPoint":1447,"id":658,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_712":{"entryPoint":2678,"id":712,"parameterSlots":3,"returnSlots":0},"@_msgSender_1050":{"entryPoint":1439,"id":1050,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_701":{"entryPoint":1906,"id":701,"parameterSlots":3,"returnSlots":0},"@_transfer_484":{"entryPoint":2046,"id":484,"parameterSlots":3,"returnSlots":0},"@allowance_279":{"entryPoint":1304,"id":279,"parameterSlots":2,"returnSlots":1},"@approve_304":{"entryPoint":776,"id":304,"parameterSlots":2,"returnSlots":1},"@balanceOf_236":{"entryPoint":932,"id":236,"parameterSlots":1,"returnSlots":1},"@decimals_212":{"entryPoint":868,"id":212,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_407":{"entryPoint":1150,"id":407,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_366":{"entryPoint":877,"id":366,"parameterSlots":2,"returnSlots":1},"@name_192":{"entryPoint":630,"id":192,"parameterSlots":0,"returnSlots":1},"@symbol_202":{"entryPoint":1004,"id":202,"parameterSlots":0,"returnSlots":1},"@totalSupply_222":{"entryPoint":811,"id":222,"parameterSlots":0,"returnSlots":1},"@transferFrom_337":{"entryPoint":821,"id":337,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":1269,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3371,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3028,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4582,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3299,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3579,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2912,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2974,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2716,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3482,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3532,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2767,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3957,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4103,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4503,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3811,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:18","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:18","statements":[{"nodeType":"YulAssignment","src":"77:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:18"},"nodeType":"YulFunctionCall","src":"87:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:18","type":""}],"src":"7:99:18"},{"body":{"nodeType":"YulBlock","src":"208:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:18"},"nodeType":"YulFunctionCall","src":"218:19:18"},"nodeType":"YulExpressionStatement","src":"218:19:18"},{"nodeType":"YulAssignment","src":"246:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:18"},"nodeType":"YulFunctionCall","src":"261:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:18","type":""}],"src":"112:169:18"},{"body":{"nodeType":"YulBlock","src":"336:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:18"},"nodeType":"YulFunctionCall","src":"436:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:18"},"nodeType":"YulFunctionCall","src":"455:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:18"},"nodeType":"YulFunctionCall","src":"449:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:18"},"nodeType":"YulFunctionCall","src":"429:39:18"},"nodeType":"YulExpressionStatement","src":"429:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:18"},"nodeType":"YulFunctionCall","src":"373:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:18","statements":[{"nodeType":"YulAssignment","src":"389:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:18"},"nodeType":"YulFunctionCall","src":"394:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:18","statements":[]},"src":"365:113:18"},{"body":{"nodeType":"YulBlock","src":"512:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:18"},"nodeType":"YulFunctionCall","src":"558:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:18"},"nodeType":"YulFunctionCall","src":"551:27:18"},"nodeType":"YulExpressionStatement","src":"551:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:18"},"nodeType":"YulFunctionCall","src":"490:13:18"},"nodeType":"YulIf","src":"487:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:18","type":""}],"src":"287:307:18"},{"body":{"nodeType":"YulBlock","src":"648:54:18","statements":[{"nodeType":"YulAssignment","src":"658:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:18"},"nodeType":"YulFunctionCall","src":"672:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:18"},"nodeType":"YulFunctionCall","src":"688:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:18"},"nodeType":"YulFunctionCall","src":"668:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:18","type":""}],"src":"600:102:18"},{"body":{"nodeType":"YulBlock","src":"800:272:18","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:18"},"nodeType":"YulFunctionCall","src":"824:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:18","type":""}]},{"nodeType":"YulAssignment","src":"872:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:18"},"nodeType":"YulFunctionCall","src":"879:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:18"},"nodeType":"YulFunctionCall","src":"981:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:18"},"nodeType":"YulFunctionCall","src":"959:52:18"},"nodeType":"YulExpressionStatement","src":"959:52:18"},{"nodeType":"YulAssignment","src":"1020:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:18"},"nodeType":"YulFunctionCall","src":"1036:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:18"},"nodeType":"YulFunctionCall","src":"1027:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:18","type":""}],"src":"708:364:18"},{"body":{"nodeType":"YulBlock","src":"1196:195:18","statements":[{"nodeType":"YulAssignment","src":"1206:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:18"},"nodeType":"YulFunctionCall","src":"1214:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:18"},"nodeType":"YulFunctionCall","src":"1249:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:18"},"nodeType":"YulFunctionCall","src":"1268:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:18"},"nodeType":"YulFunctionCall","src":"1242:47:18"},"nodeType":"YulExpressionStatement","src":"1242:47:18"},{"nodeType":"YulAssignment","src":"1298:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:18"},"nodeType":"YulFunctionCall","src":"1306:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:18","type":""}],"src":"1078:313:18"},{"body":{"nodeType":"YulBlock","src":"1437:35:18","statements":[{"nodeType":"YulAssignment","src":"1447:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:18"},"nodeType":"YulFunctionCall","src":"1457:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:18","type":""}],"src":"1397:75:18"},{"body":{"nodeType":"YulBlock","src":"1567:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:18"},"nodeType":"YulFunctionCall","src":"1577:12:18"},"nodeType":"YulExpressionStatement","src":"1577:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:18"},{"body":{"nodeType":"YulBlock","src":"1690:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:18"},"nodeType":"YulFunctionCall","src":"1700:12:18"},"nodeType":"YulExpressionStatement","src":"1700:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:18"},{"body":{"nodeType":"YulBlock","src":"1769:81:18","statements":[{"nodeType":"YulAssignment","src":"1779:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:18"},"nodeType":"YulFunctionCall","src":"1790:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:18","type":""}],"src":"1724:126:18"},{"body":{"nodeType":"YulBlock","src":"1901:51:18","statements":[{"nodeType":"YulAssignment","src":"1911:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:18"},"nodeType":"YulFunctionCall","src":"1922:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:18","type":""}],"src":"1856:96:18"},{"body":{"nodeType":"YulBlock","src":"2001:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:18"},"nodeType":"YulFunctionCall","src":"2060:12:18"},"nodeType":"YulExpressionStatement","src":"2060:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:18"},"nodeType":"YulFunctionCall","src":"2031:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:18"},"nodeType":"YulFunctionCall","src":"2021:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:18"},"nodeType":"YulFunctionCall","src":"2014:43:18"},"nodeType":"YulIf","src":"2011:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:18","type":""}],"src":"1958:122:18"},{"body":{"nodeType":"YulBlock","src":"2138:87:18","statements":[{"nodeType":"YulAssignment","src":"2148:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:18"},"nodeType":"YulFunctionCall","src":"2157:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:18"},"nodeType":"YulFunctionCall","src":"2186:33:18"},"nodeType":"YulExpressionStatement","src":"2186:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:18","type":""}],"src":"2086:139:18"},{"body":{"nodeType":"YulBlock","src":"2276:32:18","statements":[{"nodeType":"YulAssignment","src":"2286:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:18","type":""}],"src":"2231:77:18"},{"body":{"nodeType":"YulBlock","src":"2357:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:18"},"nodeType":"YulFunctionCall","src":"2416:12:18"},"nodeType":"YulExpressionStatement","src":"2416:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:18"},"nodeType":"YulFunctionCall","src":"2387:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:18"},"nodeType":"YulFunctionCall","src":"2377:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:18"},"nodeType":"YulFunctionCall","src":"2370:43:18"},"nodeType":"YulIf","src":"2367:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:18","type":""}],"src":"2314:122:18"},{"body":{"nodeType":"YulBlock","src":"2494:87:18","statements":[{"nodeType":"YulAssignment","src":"2504:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:18"},"nodeType":"YulFunctionCall","src":"2513:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:18"},"nodeType":"YulFunctionCall","src":"2542:33:18"},"nodeType":"YulExpressionStatement","src":"2542:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:18","type":""}],"src":"2442:139:18"},{"body":{"nodeType":"YulBlock","src":"2670:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:18"},"nodeType":"YulFunctionCall","src":"2718:79:18"},"nodeType":"YulExpressionStatement","src":"2718:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:18"},"nodeType":"YulFunctionCall","src":"2687:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:18"},"nodeType":"YulFunctionCall","src":"2683:32:18"},"nodeType":"YulIf","src":"2680:119:18"},{"nodeType":"YulBlock","src":"2809:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:18"},"nodeType":"YulFunctionCall","src":"2884:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:18"},"nodeType":"YulFunctionCall","src":"2863:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:18"}]}]},{"nodeType":"YulBlock","src":"2936:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:18"},"nodeType":"YulFunctionCall","src":"3012:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:18"},"nodeType":"YulFunctionCall","src":"2991:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:18","type":""}],"src":"2587:474:18"},{"body":{"nodeType":"YulBlock","src":"3109:48:18","statements":[{"nodeType":"YulAssignment","src":"3119:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:18"},"nodeType":"YulFunctionCall","src":"3137:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:18"},"nodeType":"YulFunctionCall","src":"3130:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:18","type":""}],"src":"3067:90:18"},{"body":{"nodeType":"YulBlock","src":"3222:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:18"},"nodeType":"YulFunctionCall","src":"3244:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:18"},"nodeType":"YulFunctionCall","src":"3232:34:18"},"nodeType":"YulExpressionStatement","src":"3232:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:18","type":""}],"src":"3163:109:18"},{"body":{"nodeType":"YulBlock","src":"3370:118:18","statements":[{"nodeType":"YulAssignment","src":"3380:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:18"},"nodeType":"YulFunctionCall","src":"3388:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:18"},"nodeType":"YulFunctionCall","src":"3463:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:18"},"nodeType":"YulFunctionCall","src":"3416:65:18"},"nodeType":"YulExpressionStatement","src":"3416:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:18","type":""}],"src":"3278:210:18"},{"body":{"nodeType":"YulBlock","src":"3559:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:18"},"nodeType":"YulFunctionCall","src":"3581:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:18"},"nodeType":"YulFunctionCall","src":"3569:37:18"},"nodeType":"YulExpressionStatement","src":"3569:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:18","type":""}],"src":"3494:118:18"},{"body":{"nodeType":"YulBlock","src":"3716:124:18","statements":[{"nodeType":"YulAssignment","src":"3726:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:18"},"nodeType":"YulFunctionCall","src":"3734:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:18"},"nodeType":"YulFunctionCall","src":"3815:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:18"},"nodeType":"YulFunctionCall","src":"3762:71:18"},"nodeType":"YulExpressionStatement","src":"3762:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:18","type":""}],"src":"3618:222:18"},{"body":{"nodeType":"YulBlock","src":"3946:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:18"},"nodeType":"YulFunctionCall","src":"3994:79:18"},"nodeType":"YulExpressionStatement","src":"3994:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:18"},"nodeType":"YulFunctionCall","src":"3963:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:18"},"nodeType":"YulFunctionCall","src":"3959:32:18"},"nodeType":"YulIf","src":"3956:119:18"},{"nodeType":"YulBlock","src":"4085:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:18"},"nodeType":"YulFunctionCall","src":"4160:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:18"},"nodeType":"YulFunctionCall","src":"4139:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:18"}]}]},{"nodeType":"YulBlock","src":"4212:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:18"},"nodeType":"YulFunctionCall","src":"4288:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:18"},"nodeType":"YulFunctionCall","src":"4267:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:18"}]}]},{"nodeType":"YulBlock","src":"4340:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:18"},"nodeType":"YulFunctionCall","src":"4416:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:18"},"nodeType":"YulFunctionCall","src":"4395:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:18","type":""}],"src":"3846:619:18"},{"body":{"nodeType":"YulBlock","src":"4514:43:18","statements":[{"nodeType":"YulAssignment","src":"4524:27:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:18"},"nodeType":"YulFunctionCall","src":"4535:16:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:18"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:18","type":""}],"src":"4471:86:18"},{"body":{"nodeType":"YulBlock","src":"4624:51:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:18"},"nodeType":"YulFunctionCall","src":"4646:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:18"},"nodeType":"YulFunctionCall","src":"4634:35:18"},"nodeType":"YulExpressionStatement","src":"4634:35:18"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:18","type":""}],"src":"4563:112:18"},{"body":{"nodeType":"YulBlock","src":"4775:120:18","statements":[{"nodeType":"YulAssignment","src":"4785:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:18"},"nodeType":"YulFunctionCall","src":"4793:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:18"},"nodeType":"YulFunctionCall","src":"4870:17:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:18"},"nodeType":"YulFunctionCall","src":"4821:67:18"},"nodeType":"YulExpressionStatement","src":"4821:67:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:18","type":""}],"src":"4681:214:18"},{"body":{"nodeType":"YulBlock","src":"4967:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:18"},"nodeType":"YulFunctionCall","src":"5015:79:18"},"nodeType":"YulExpressionStatement","src":"5015:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:18"},"nodeType":"YulFunctionCall","src":"4984:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:18"},"nodeType":"YulFunctionCall","src":"4980:32:18"},"nodeType":"YulIf","src":"4977:119:18"},{"nodeType":"YulBlock","src":"5106:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:18"},"nodeType":"YulFunctionCall","src":"5181:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:18"},"nodeType":"YulFunctionCall","src":"5160:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:18","type":""}],"src":"4901:329:18"},{"body":{"nodeType":"YulBlock","src":"5319:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:18"},"nodeType":"YulFunctionCall","src":"5367:79:18"},"nodeType":"YulExpressionStatement","src":"5367:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:18"},"nodeType":"YulFunctionCall","src":"5336:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:18"},"nodeType":"YulFunctionCall","src":"5332:32:18"},"nodeType":"YulIf","src":"5329:119:18"},{"nodeType":"YulBlock","src":"5458:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:18"},"nodeType":"YulFunctionCall","src":"5533:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:18"},"nodeType":"YulFunctionCall","src":"5512:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:18"}]}]},{"nodeType":"YulBlock","src":"5585:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:18"},"nodeType":"YulFunctionCall","src":"5661:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:18"},"nodeType":"YulFunctionCall","src":"5640:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:18","type":""}],"src":"5236:474:18"},{"body":{"nodeType":"YulBlock","src":"5744:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:18"},"nodeType":"YulFunctionCall","src":"5754:88:18"},"nodeType":"YulExpressionStatement","src":"5754:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:18"},"nodeType":"YulFunctionCall","src":"5851:15:18"},"nodeType":"YulExpressionStatement","src":"5851:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:18"},"nodeType":"YulFunctionCall","src":"5875:15:18"},"nodeType":"YulExpressionStatement","src":"5875:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:18"},{"body":{"nodeType":"YulBlock","src":"5953:269:18","statements":[{"nodeType":"YulAssignment","src":"5963:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:18"},"nodeType":"YulFunctionCall","src":"5973:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:18"},"nodeType":"YulFunctionCall","src":"6020:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:18","statements":[{"nodeType":"YulAssignment","src":"6085:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:18"},"nodeType":"YulFunctionCall","src":"6095:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:18"},"nodeType":"YulFunctionCall","src":"6044:26:18"},"nodeType":"YulIf","src":"6041:81:18"},{"body":{"nodeType":"YulBlock","src":"6174:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:18"},"nodeType":"YulFunctionCall","src":"6188:18:18"},"nodeType":"YulExpressionStatement","src":"6188:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:18"},"nodeType":"YulFunctionCall","src":"6158:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:18"},"nodeType":"YulFunctionCall","src":"6135:38:18"},"nodeType":"YulIf","src":"6132:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:18","type":""}],"src":"5902:320:18"},{"body":{"nodeType":"YulBlock","src":"6256:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:18"},"nodeType":"YulFunctionCall","src":"6266:88:18"},"nodeType":"YulExpressionStatement","src":"6266:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:18"},"nodeType":"YulFunctionCall","src":"6363:15:18"},"nodeType":"YulExpressionStatement","src":"6363:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:18"},"nodeType":"YulFunctionCall","src":"6387:15:18"},"nodeType":"YulExpressionStatement","src":"6387:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:18"},{"body":{"nodeType":"YulBlock","src":"6458:261:18","statements":[{"nodeType":"YulAssignment","src":"6468:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:18"},"nodeType":"YulFunctionCall","src":"6473:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:18"}]},{"nodeType":"YulAssignment","src":"6502:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:18"},"nodeType":"YulFunctionCall","src":"6507:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:18"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:18"},"nodeType":"YulFunctionCall","src":"6667:18:18"},"nodeType":"YulExpressionStatement","src":"6667:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:18"},"nodeType":"YulFunctionCall","src":"6589:74:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:18"},"nodeType":"YulFunctionCall","src":"6583:81:18"},"nodeType":"YulIf","src":"6580:107:18"},{"nodeType":"YulAssignment","src":"6697:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:18"},"nodeType":"YulFunctionCall","src":"6704:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:18","type":""}],"src":"6414:305:18"},{"body":{"nodeType":"YulBlock","src":"6831:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:18"},"nodeType":"YulFunctionCall","src":"6849:14:18"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:18","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:18"},"nodeType":"YulFunctionCall","src":"6842:58:18"},"nodeType":"YulExpressionStatement","src":"6842:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:18"},"nodeType":"YulFunctionCall","src":"6917:15:18"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:18","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:18"},"nodeType":"YulFunctionCall","src":"6910:32:18"},"nodeType":"YulExpressionStatement","src":"6910:32:18"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:18","type":""}],"src":"6725:224:18"},{"body":{"nodeType":"YulBlock","src":"7101:220:18","statements":[{"nodeType":"YulAssignment","src":"7111:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:18"},"nodeType":"YulFunctionCall","src":"7118:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:18"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:18"},"nodeType":"YulFunctionCall","src":"7194:93:18"},"nodeType":"YulExpressionStatement","src":"7194:93:18"},{"nodeType":"YulAssignment","src":"7296:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:18"},"nodeType":"YulFunctionCall","src":"7303:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:18"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:18","type":""}],"src":"6955:366:18"},{"body":{"nodeType":"YulBlock","src":"7498:248:18","statements":[{"nodeType":"YulAssignment","src":"7508:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:18"},"nodeType":"YulFunctionCall","src":"7516:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:18"},"nodeType":"YulFunctionCall","src":"7551:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:18"},"nodeType":"YulFunctionCall","src":"7570:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:18"},"nodeType":"YulFunctionCall","src":"7544:47:18"},"nodeType":"YulExpressionStatement","src":"7544:47:18"},{"nodeType":"YulAssignment","src":"7600:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:18"},"nodeType":"YulFunctionCall","src":"7608:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:18","type":""}],"src":"7327:419:18"},{"body":{"nodeType":"YulBlock","src":"7858:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:18"},"nodeType":"YulFunctionCall","src":"7876:14:18"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:18","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:18"},"nodeType":"YulFunctionCall","src":"7869:58:18"},"nodeType":"YulExpressionStatement","src":"7869:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:18"},"nodeType":"YulFunctionCall","src":"7944:15:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:18"},"nodeType":"YulFunctionCall","src":"7937:31:18"},"nodeType":"YulExpressionStatement","src":"7937:31:18"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:18","type":""}],"src":"7752:223:18"},{"body":{"nodeType":"YulBlock","src":"8127:220:18","statements":[{"nodeType":"YulAssignment","src":"8137:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:18"},"nodeType":"YulFunctionCall","src":"8144:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:18"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:18"},"nodeType":"YulFunctionCall","src":"8220:93:18"},"nodeType":"YulExpressionStatement","src":"8220:93:18"},{"nodeType":"YulAssignment","src":"8322:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:18"},"nodeType":"YulFunctionCall","src":"8329:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:18"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:18","type":""}],"src":"7981:366:18"},{"body":{"nodeType":"YulBlock","src":"8524:248:18","statements":[{"nodeType":"YulAssignment","src":"8534:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:18"},"nodeType":"YulFunctionCall","src":"8542:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:18"},"nodeType":"YulFunctionCall","src":"8577:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:18"},"nodeType":"YulFunctionCall","src":"8596:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:18"},"nodeType":"YulFunctionCall","src":"8570:47:18"},"nodeType":"YulExpressionStatement","src":"8570:47:18"},{"nodeType":"YulAssignment","src":"8626:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:18"},"nodeType":"YulFunctionCall","src":"8634:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:18","type":""}],"src":"8353:419:18"},{"body":{"nodeType":"YulBlock","src":"8884:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:18"},"nodeType":"YulFunctionCall","src":"8902:14:18"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:18","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:18"},"nodeType":"YulFunctionCall","src":"8895:58:18"},"nodeType":"YulExpressionStatement","src":"8895:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:18"},"nodeType":"YulFunctionCall","src":"8970:15:18"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:18","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:18"},"nodeType":"YulFunctionCall","src":"8963:29:18"},"nodeType":"YulExpressionStatement","src":"8963:29:18"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:18","type":""}],"src":"8778:221:18"},{"body":{"nodeType":"YulBlock","src":"9151:220:18","statements":[{"nodeType":"YulAssignment","src":"9161:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:18","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:18"},"nodeType":"YulFunctionCall","src":"9168:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:18"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:18"},"nodeType":"YulFunctionCall","src":"9244:93:18"},"nodeType":"YulExpressionStatement","src":"9244:93:18"},{"nodeType":"YulAssignment","src":"9346:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:18"},"nodeType":"YulFunctionCall","src":"9353:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:18"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:18","type":""}],"src":"9005:366:18"},{"body":{"nodeType":"YulBlock","src":"9548:248:18","statements":[{"nodeType":"YulAssignment","src":"9558:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:18"},"nodeType":"YulFunctionCall","src":"9566:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:18"},"nodeType":"YulFunctionCall","src":"9601:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:18"},"nodeType":"YulFunctionCall","src":"9620:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:18"},"nodeType":"YulFunctionCall","src":"9594:47:18"},"nodeType":"YulExpressionStatement","src":"9594:47:18"},{"nodeType":"YulAssignment","src":"9650:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:18"},"nodeType":"YulFunctionCall","src":"9658:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:18","type":""}],"src":"9377:419:18"},{"body":{"nodeType":"YulBlock","src":"9908:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:18"},"nodeType":"YulFunctionCall","src":"9926:14:18"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:18","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:18"},"nodeType":"YulFunctionCall","src":"9919:55:18"},"nodeType":"YulExpressionStatement","src":"9919:55:18"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:18","type":""}],"src":"9802:179:18"},{"body":{"nodeType":"YulBlock","src":"10133:220:18","statements":[{"nodeType":"YulAssignment","src":"10143:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:18","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:18"},"nodeType":"YulFunctionCall","src":"10150:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:18"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:18"},"nodeType":"YulFunctionCall","src":"10226:93:18"},"nodeType":"YulExpressionStatement","src":"10226:93:18"},{"nodeType":"YulAssignment","src":"10328:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:18"},"nodeType":"YulFunctionCall","src":"10335:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:18"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:18","type":""}],"src":"9987:366:18"},{"body":{"nodeType":"YulBlock","src":"10530:248:18","statements":[{"nodeType":"YulAssignment","src":"10540:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:18"},"nodeType":"YulFunctionCall","src":"10548:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:18"},"nodeType":"YulFunctionCall","src":"10583:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:18"},"nodeType":"YulFunctionCall","src":"10602:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:18"},"nodeType":"YulFunctionCall","src":"10576:47:18"},"nodeType":"YulExpressionStatement","src":"10576:47:18"},{"nodeType":"YulAssignment","src":"10632:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:18"},"nodeType":"YulFunctionCall","src":"10640:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:18","type":""}],"src":"10359:419:18"},{"body":{"nodeType":"YulBlock","src":"10890:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:18"},"nodeType":"YulFunctionCall","src":"10908:14:18"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:18","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:18"},"nodeType":"YulFunctionCall","src":"10901:58:18"},"nodeType":"YulExpressionStatement","src":"10901:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:18"},"nodeType":"YulFunctionCall","src":"10976:15:18"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:18","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:18"},"nodeType":"YulFunctionCall","src":"10969:32:18"},"nodeType":"YulExpressionStatement","src":"10969:32:18"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:18","type":""}],"src":"10784:224:18"},{"body":{"nodeType":"YulBlock","src":"11160:220:18","statements":[{"nodeType":"YulAssignment","src":"11170:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:18"},"nodeType":"YulFunctionCall","src":"11177:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:18"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:18"},"nodeType":"YulFunctionCall","src":"11253:93:18"},"nodeType":"YulExpressionStatement","src":"11253:93:18"},{"nodeType":"YulAssignment","src":"11355:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:18"},"nodeType":"YulFunctionCall","src":"11362:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:18"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:18","type":""}],"src":"11014:366:18"},{"body":{"nodeType":"YulBlock","src":"11557:248:18","statements":[{"nodeType":"YulAssignment","src":"11567:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:18"},"nodeType":"YulFunctionCall","src":"11575:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:18"},"nodeType":"YulFunctionCall","src":"11610:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:18"},"nodeType":"YulFunctionCall","src":"11629:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:18"},"nodeType":"YulFunctionCall","src":"11603:47:18"},"nodeType":"YulExpressionStatement","src":"11603:47:18"},{"nodeType":"YulAssignment","src":"11659:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:18"},"nodeType":"YulFunctionCall","src":"11667:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:18","type":""}],"src":"11386:419:18"},{"body":{"nodeType":"YulBlock","src":"11917:116:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:18"},"nodeType":"YulFunctionCall","src":"11935:14:18"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:18","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:18"},"nodeType":"YulFunctionCall","src":"11928:58:18"},"nodeType":"YulExpressionStatement","src":"11928:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:18"},"nodeType":"YulFunctionCall","src":"12003:15:18"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:18","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:18"},"nodeType":"YulFunctionCall","src":"11996:30:18"},"nodeType":"YulExpressionStatement","src":"11996:30:18"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:18","type":""}],"src":"11811:222:18"},{"body":{"nodeType":"YulBlock","src":"12185:220:18","statements":[{"nodeType":"YulAssignment","src":"12195:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:18","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:18"},"nodeType":"YulFunctionCall","src":"12202:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:18"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:18"},"nodeType":"YulFunctionCall","src":"12278:93:18"},"nodeType":"YulExpressionStatement","src":"12278:93:18"},{"nodeType":"YulAssignment","src":"12380:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:18"},"nodeType":"YulFunctionCall","src":"12387:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:18"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:18","type":""}],"src":"12039:366:18"},{"body":{"nodeType":"YulBlock","src":"12582:248:18","statements":[{"nodeType":"YulAssignment","src":"12592:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:18"},"nodeType":"YulFunctionCall","src":"12600:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:18"},"nodeType":"YulFunctionCall","src":"12635:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:18"},"nodeType":"YulFunctionCall","src":"12654:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:18"},"nodeType":"YulFunctionCall","src":"12628:47:18"},"nodeType":"YulExpressionStatement","src":"12628:47:18"},{"nodeType":"YulAssignment","src":"12684:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:18"},"nodeType":"YulFunctionCall","src":"12692:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:18","type":""}],"src":"12411:419:18"},{"body":{"nodeType":"YulBlock","src":"12942:119:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:18"},"nodeType":"YulFunctionCall","src":"12960:14:18"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:18","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:18"},"nodeType":"YulFunctionCall","src":"12953:58:18"},"nodeType":"YulExpressionStatement","src":"12953:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:18"},"nodeType":"YulFunctionCall","src":"13028:15:18"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:18","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:18"},"nodeType":"YulFunctionCall","src":"13021:33:18"},"nodeType":"YulExpressionStatement","src":"13021:33:18"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:18","type":""}],"src":"12836:225:18"},{"body":{"nodeType":"YulBlock","src":"13213:220:18","statements":[{"nodeType":"YulAssignment","src":"13223:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:18","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:18"},"nodeType":"YulFunctionCall","src":"13230:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:18"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:18"},"nodeType":"YulFunctionCall","src":"13306:93:18"},"nodeType":"YulExpressionStatement","src":"13306:93:18"},{"nodeType":"YulAssignment","src":"13408:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:18"},"nodeType":"YulFunctionCall","src":"13415:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:18"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:18","type":""}],"src":"13067:366:18"},{"body":{"nodeType":"YulBlock","src":"13610:248:18","statements":[{"nodeType":"YulAssignment","src":"13620:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:18"},"nodeType":"YulFunctionCall","src":"13628:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:18"},"nodeType":"YulFunctionCall","src":"13663:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:18"},"nodeType":"YulFunctionCall","src":"13682:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:18"},"nodeType":"YulFunctionCall","src":"13656:47:18"},"nodeType":"YulExpressionStatement","src":"13656:47:18"},{"nodeType":"YulAssignment","src":"13712:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:18"},"nodeType":"YulFunctionCall","src":"13720:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:18","type":""}],"src":"13439:419:18"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220a511f60d9e36c99da79c85cf2a7737063a8652019b09662bab921325d9036a3264736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 GT 0xF6 0xD SWAP15 CALLDATASIZE 0xC9 SWAP14 0xA7 SWAP13 DUP6 0xCF 0x2A PUSH24 0x37063A8652019B09662BAB921325D9036A3264736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:18:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1c31e7b962abcf83f83118011fe94b3f162b24dd0e3a485631d28652e7e89264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1C31E7B962ABCF83F8311801 0x1F 0xE9 0x4B EXTCODEHASH AND 0x2B 0x24 0xDD 0xE GASPRICE BASEFEE JUMP BALANCE 0xD2 DUP7 MSTORE 0xE7 0xE8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1c31e7b962abcf83f83118011fe94b3f162b24dd0e3a485631d28652e7e89264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1C31E7B962ABCF83F8311801 0x1F 0xE9 0x4B EXTCODEHASH AND 0x2B 0x24 0xDD 0xE GASPRICE BASEFEE JUMP BALANCE 0xD2 DUP7 MSTORE 0xE7 0xE8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc8338488ee443069466e5d474ef6f3afbf97e3e3d98a124ddf8d56c72a7c83864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC DUP4 CODESIZE BASEFEE DUP15 0xE4 NUMBER MOD SWAP5 PUSH7 0xE5D474EF6F3AFB 0xF9 PUSH31 0x3E3D98A124DDF8D56C72A7C83864736F6C6343000809003300000000000000 ","sourceMap":"1235:3050:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc8338488ee443069466e5d474ef6f3afbf97e3e3d98a124ddf8d56c72a7c83864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC DUP4 CODESIZE BASEFEE DUP15 0xE4 NUMBER MOD SWAP5 PUSH7 0xE5D474EF6F3AFB 0xF9 PUSH31 0x3E3D98A124DDF8D56C72A7C83864736F6C6343000809003300000000000000 ","sourceMap":"1235:3050:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022b133692ffd973c495df371107b4fca81ada380b204602855d4ce5af18a904664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xB1 CALLER PUSH10 0x2FFD973C495DF371107B 0x4F 0xCA DUP2 0xAD LOG3 DUP1 0xB2 DIV PUSH1 0x28 SSTORE 0xD4 0xCE GAS CALL DUP11 SWAP1 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1420:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022b133692ffd973c495df371107b4fca81ada380b204602855d4ce5af18a904664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xB1 CALLER PUSH10 0x2FFD973C495DF371107B 0x4F 0xCA DUP2 0xAD LOG3 DUP1 0xB2 DIV PUSH1 0x28 SSTORE 0xD4 0xCE GAS CALL DUP11 SWAP1 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1420:2685:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087ee219e74d90fb0e6e6d425a54bfb43cac29defce07582754fd9bd81bdc666d64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xEE 0x21 SWAP15 PUSH21 0xD90FB0E6E6D425A54BFB43CAC29DEFCE07582754FD SWAP12 0xD8 SHL 0xDC PUSH7 0x6D64736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"220:2559:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087ee219e74d90fb0e6e6d425a54bfb43cac29defce07582754fd9bd81bdc666d64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xEE 0x21 SWAP15 PUSH21 0xD90FB0E6E6D425A54BFB43CAC29DEFCE07582754FD SWAP12 0xD8 SHL 0xDC PUSH7 0x6D64736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"220:2559:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac14333f1d2ebbda107f6bed5cb4d790350eced22227fc859a3971444bfd534b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC EQ CALLER EXTCODEHASH SAR 0x2E 0xBB 0xDA LT PUSH32 0x6BED5CB4D790350ECED22227FC859A3971444BFD534B64736F6C634300080900 CALLER ","sourceMap":"369:8761:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac14333f1d2ebbda107f6bed5cb4d790350eced22227fc859a3971444bfd534b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC EQ CALLER EXTCODEHASH SAR 0x2E 0xBB 0xDA LT PUSH32 0x6BED5CB4D790350ECED22227FC859A3971444BFD534B64736F6C634300080900 CALLER ","sourceMap":"369:8761:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207270277252594001a6ca9dd5c1c2c4b745d6504f1bbe4946ca447068097a175f64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x70277252594001A6CA9DD5C1C2C4B745D6504F SHL 0xBE 0x49 CHAINID 0xCA DIFFICULTY PUSH17 0x68097A175F64736F6C6343000809003300 ","sourceMap":"202:12582:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207270277252594001a6ca9dd5c1c2c4b745d6504f1bbe4946ca447068097a175f64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x70277252594001A6CA9DD5C1C2C4B745D6504F SHL 0xBE 0x49 CHAINID 0xCA DIFFICULTY PUSH17 0x68097A175F64736F6C6343000809003300 ","sourceMap":"202:12582:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d8f3e751e5a52b2eb8dacaafbcbeb0c6c33b315fe31edefda279ce9e31f98c364736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x8F3E751E5A52B2EB8DACAAFBCBEB 0xC PUSH13 0x33B315FE31EDEFDA279CE9E31F SWAP9 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d8f3e751e5a52b2eb8dacaafbcbeb0c6c33b315fe31edefda279ce9e31f98c364736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x8F3E751E5A52B2EB8DACAAFBCBEB 0xC PUSH13 0x33B315FE31EDEFDA279CE9E31F SWAP9 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/ERC20TokenUSDC.sol":{"ERC20TokenUSDC":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_182":{"entryPoint":null,"id":182,"parameterSlots":2,"returnSlots":0},"@_2148":{"entryPoint":null,"id":2148,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_3252":{"entryPoint":null,"id":3252,"parameterSlots":0,"returnSlots":0},"@_844":{"entryPoint":null,"id":844,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2195":{"entryPoint":819,"id":2195,"parameterSlots":0,"returnSlots":1},"@_msgSender_1050":{"entryPoint":513,"id":1050,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":521,"id":111,"parameterSlots":1,"returnSlots":0},"@getStringSlot_1437":{"entryPoint":1021,"id":1437,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1291":{"entryPoint":719,"id":1291,"parameterSlots":2,"returnSlots":1},"@toShortString_1193":{"entryPoint":912,"id":1193,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1217,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1244,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1330,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1587,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":1634,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1623,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1423,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1293,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1207,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1234,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1686,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1451,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1845,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":1798,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes32":{"entryPoint":1650,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":1505,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1673,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4447:18","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:18","statements":[{"nodeType":"YulAssignment","src":"62:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:18","type":""}],"src":"7:77:18"},{"body":{"nodeType":"YulBlock","src":"155:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"177:17:18"},"nodeType":"YulFunctionCall","src":"177:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:18"},"nodeType":"YulFunctionCall","src":"165:37:18"},"nodeType":"YulExpressionStatement","src":"165:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:18","type":""}],"src":"90:118:18"},{"body":{"nodeType":"YulBlock","src":"259:32:18","statements":[{"nodeType":"YulAssignment","src":"269:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"280:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"269:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"241:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"251:7:18","type":""}],"src":"214:77:18"},{"body":{"nodeType":"YulBlock","src":"362:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"379:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"402:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"384:17:18"},"nodeType":"YulFunctionCall","src":"384:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"372:6:18"},"nodeType":"YulFunctionCall","src":"372:37:18"},"nodeType":"YulExpressionStatement","src":"372:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"350:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"357:3:18","type":""}],"src":"297:118:18"},{"body":{"nodeType":"YulBlock","src":"466:81:18","statements":[{"nodeType":"YulAssignment","src":"476:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"491:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"498:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"487:3:18"},"nodeType":"YulFunctionCall","src":"487:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"476:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"448:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"458:7:18","type":""}],"src":"421:126:18"},{"body":{"nodeType":"YulBlock","src":"598:51:18","statements":[{"nodeType":"YulAssignment","src":"608:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"637:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"619:17:18"},"nodeType":"YulFunctionCall","src":"619:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"608:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"580:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"590:7:18","type":""}],"src":"553:96:18"},{"body":{"nodeType":"YulBlock","src":"720:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"737:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"742:17:18"},"nodeType":"YulFunctionCall","src":"742:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"730:6:18"},"nodeType":"YulFunctionCall","src":"730:37:18"},"nodeType":"YulExpressionStatement","src":"730:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"708:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"715:3:18","type":""}],"src":"655:118:18"},{"body":{"nodeType":"YulBlock","src":"989:454:18","statements":[{"nodeType":"YulAssignment","src":"999:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1011:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1022:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1007:3:18"},"nodeType":"YulFunctionCall","src":"1007:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"999:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1080:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1093:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1104:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1089:3:18"},"nodeType":"YulFunctionCall","src":"1089:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"1036:43:18"},"nodeType":"YulFunctionCall","src":"1036:71:18"},"nodeType":"YulExpressionStatement","src":"1036:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1161:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:18"},"nodeType":"YulFunctionCall","src":"1170:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"1117:43:18"},"nodeType":"YulFunctionCall","src":"1117:72:18"},"nodeType":"YulExpressionStatement","src":"1117:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1243:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1256:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1267:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1252:3:18"},"nodeType":"YulFunctionCall","src":"1252:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"1199:43:18"},"nodeType":"YulFunctionCall","src":"1199:72:18"},"nodeType":"YulExpressionStatement","src":"1199:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1325:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1338:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1349:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1334:3:18"},"nodeType":"YulFunctionCall","src":"1334:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1281:43:18"},"nodeType":"YulFunctionCall","src":"1281:72:18"},"nodeType":"YulExpressionStatement","src":"1281:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1407:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1431:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:18"},"nodeType":"YulFunctionCall","src":"1416:19:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1363:43:18"},"nodeType":"YulFunctionCall","src":"1363:73:18"},"nodeType":"YulExpressionStatement","src":"1363:73:18"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"929:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"941:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"949:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"957:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"965:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"973:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"984:4:18","type":""}],"src":"779:664:18"},{"body":{"nodeType":"YulBlock","src":"1508:40:18","statements":[{"nodeType":"YulAssignment","src":"1519:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1535:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1529:5:18"},"nodeType":"YulFunctionCall","src":"1529:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1519:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1491:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1501:6:18","type":""}],"src":"1449:99:18"},{"body":{"nodeType":"YulBlock","src":"1650:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1667:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1672:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1660:6:18"},"nodeType":"YulFunctionCall","src":"1660:19:18"},"nodeType":"YulExpressionStatement","src":"1660:19:18"},{"nodeType":"YulAssignment","src":"1688:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1707:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1712:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1703:3:18"},"nodeType":"YulFunctionCall","src":"1703:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1688:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1622:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1627:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1638:11:18","type":""}],"src":"1554:169:18"},{"body":{"nodeType":"YulBlock","src":"1778:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1788:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1797:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1792:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1857:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1882:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1887:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:18"},"nodeType":"YulFunctionCall","src":"1878:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1901:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1906:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1897:3:18"},"nodeType":"YulFunctionCall","src":"1897:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:18"},"nodeType":"YulFunctionCall","src":"1891:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1871:6:18"},"nodeType":"YulFunctionCall","src":"1871:39:18"},"nodeType":"YulExpressionStatement","src":"1871:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1818:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1821:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1815:2:18"},"nodeType":"YulFunctionCall","src":"1815:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1829:19:18","statements":[{"nodeType":"YulAssignment","src":"1831:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1840:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1843:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1836:3:18"},"nodeType":"YulFunctionCall","src":"1836:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1831:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1811:3:18","statements":[]},"src":"1807:113:18"},{"body":{"nodeType":"YulBlock","src":"1954:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2004:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2009:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2000:3:18"},"nodeType":"YulFunctionCall","src":"2000:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"2018:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1993:6:18"},"nodeType":"YulFunctionCall","src":"1993:27:18"},"nodeType":"YulExpressionStatement","src":"1993:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1935:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1938:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1932:2:18"},"nodeType":"YulFunctionCall","src":"1932:13:18"},"nodeType":"YulIf","src":"1929:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1760:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1765:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1770:6:18","type":""}],"src":"1729:307:18"},{"body":{"nodeType":"YulBlock","src":"2090:54:18","statements":[{"nodeType":"YulAssignment","src":"2100:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2118:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2125:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2114:3:18"},"nodeType":"YulFunctionCall","src":"2114:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2134:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2130:3:18"},"nodeType":"YulFunctionCall","src":"2130:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2110:3:18"},"nodeType":"YulFunctionCall","src":"2110:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2100:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2073:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2083:6:18","type":""}],"src":"2042:102:18"},{"body":{"nodeType":"YulBlock","src":"2242:272:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2252:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2299:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2266:32:18"},"nodeType":"YulFunctionCall","src":"2266:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2256:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2314:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2380:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2385:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2321:58:18"},"nodeType":"YulFunctionCall","src":"2321:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2314:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2427:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2434:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2423:3:18"},"nodeType":"YulFunctionCall","src":"2423:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"2441:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2446:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2401:21:18"},"nodeType":"YulFunctionCall","src":"2401:52:18"},"nodeType":"YulExpressionStatement","src":"2401:52:18"},{"nodeType":"YulAssignment","src":"2462:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2473:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2500:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2478:21:18"},"nodeType":"YulFunctionCall","src":"2478:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:18"},"nodeType":"YulFunctionCall","src":"2469:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2462:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2223:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2230:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2238:3:18","type":""}],"src":"2150:364:18"},{"body":{"nodeType":"YulBlock","src":"2638:195:18","statements":[{"nodeType":"YulAssignment","src":"2648:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2660:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:18"},"nodeType":"YulFunctionCall","src":"2656:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2648:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2695:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2706:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:18"},"nodeType":"YulFunctionCall","src":"2691:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2714:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2720:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2710:3:18"},"nodeType":"YulFunctionCall","src":"2710:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2684:6:18"},"nodeType":"YulFunctionCall","src":"2684:47:18"},"nodeType":"YulExpressionStatement","src":"2684:47:18"},{"nodeType":"YulAssignment","src":"2740:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2812:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"2821:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2748:63:18"},"nodeType":"YulFunctionCall","src":"2748:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2740:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2610:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2622:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2633:4:18","type":""}],"src":"2520:313:18"},{"body":{"nodeType":"YulBlock","src":"2897:40:18","statements":[{"nodeType":"YulAssignment","src":"2908:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2924:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2918:5:18"},"nodeType":"YulFunctionCall","src":"2918:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2908:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2880:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2890:6:18","type":""}],"src":"2839:98:18"},{"body":{"nodeType":"YulBlock","src":"2999:60:18","statements":[{"nodeType":"YulAssignment","src":"3009:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3017:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3009:4:18"}]},{"nodeType":"YulAssignment","src":"3030:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3042:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3047:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3038:3:18"},"nodeType":"YulFunctionCall","src":"3038:14:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3030:4:18"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2986:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2994:4:18","type":""}],"src":"2943:116:18"},{"body":{"nodeType":"YulBlock","src":"3120:99:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3131:42:18","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3168:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3162:5:18"},"nodeType":"YulFunctionCall","src":"3162:10:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3144:17:18"},"nodeType":"YulFunctionCall","src":"3144:29:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3135:5:18","type":""}]},{"nodeType":"YulAssignment","src":"3183:29:18","value":{"name":"value","nodeType":"YulIdentifier","src":"3207:5:18"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"3183:11:18"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3100:3:18","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"3108:11:18","type":""}],"src":"3065:154:18"},{"body":{"nodeType":"YulBlock","src":"3278:54:18","statements":[{"nodeType":"YulAssignment","src":"3288:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3313:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"3319:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3309:3:18"},"nodeType":"YulFunctionCall","src":"3309:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3288:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3253:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"3259:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3269:8:18","type":""}],"src":"3225:107:18"},{"body":{"nodeType":"YulBlock","src":"3428:504:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3439:52:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3485:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3453:31:18"},"nodeType":"YulFunctionCall","src":"3453:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3443:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3500:21:18","value":{"name":"array","nodeType":"YulIdentifier","src":"3516:5:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3504:8:18","type":""}]},{"nodeType":"YulAssignment","src":"3531:52:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3577:5:18"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3543:33:18"},"nodeType":"YulFunctionCall","src":"3543:40:18"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3531:8:18"}]},{"nodeType":"YulAssignment","src":"3593:44:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3628:8:18"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"3602:25:18"},"nodeType":"YulFunctionCall","src":"3602:35:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3593:5:18"}]},{"body":{"nodeType":"YulBlock","src":"3665:260:18","statements":[{"nodeType":"YulAssignment","src":"3679:236:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3709:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3776:1:18","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"3787:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3779:3:18"},"nodeType":"YulFunctionCall","src":"3779:15:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3772:3:18"},"nodeType":"YulFunctionCall","src":"3772:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3817:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3732:18:18"},"nodeType":"YulFunctionCall","src":"3732:169:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3688:3:18"},"nodeType":"YulFunctionCall","src":"3688:227:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3679:5:18"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3653:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3661:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3650:2:18"},"nodeType":"YulFunctionCall","src":"3650:14:18"},"nodeType":"YulIf","src":"3647:278:18"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3412:5:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3422:5:18","type":""}],"src":"3338:594:18"},{"body":{"nodeType":"YulBlock","src":"3966:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3983:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3986:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3976:6:18"},"nodeType":"YulFunctionCall","src":"3976:88:18"},"nodeType":"YulExpressionStatement","src":"3976:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4083:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4073:6:18"},"nodeType":"YulFunctionCall","src":"4073:15:18"},"nodeType":"YulExpressionStatement","src":"4073:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4104:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4107:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4097:6:18"},"nodeType":"YulFunctionCall","src":"4097:15:18"},"nodeType":"YulExpressionStatement","src":"4097:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3938:180:18"},{"body":{"nodeType":"YulBlock","src":"4175:269:18","statements":[{"nodeType":"YulAssignment","src":"4185:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4199:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4205:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4195:3:18"},"nodeType":"YulFunctionCall","src":"4195:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4185:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"4216:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4246:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4252:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4242:3:18"},"nodeType":"YulFunctionCall","src":"4242:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4220:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4293:51:18","statements":[{"nodeType":"YulAssignment","src":"4307:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4329:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4317:3:18"},"nodeType":"YulFunctionCall","src":"4317:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4307:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4273:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4266:6:18"},"nodeType":"YulFunctionCall","src":"4266:26:18"},"nodeType":"YulIf","src":"4263:81:18"},{"body":{"nodeType":"YulBlock","src":"4396:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4410:16:18"},"nodeType":"YulFunctionCall","src":"4410:18:18"},"nodeType":"YulExpressionStatement","src":"4410:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4360:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4383:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4391:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4380:2:18"},"nodeType":"YulFunctionCall","src":"4380:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4357:2:18"},"nodeType":"YulFunctionCall","src":"4357:38:18"},"nodeType":"YulIf","src":"4354:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4159:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4168:6:18","type":""}],"src":"4124:320:18"}]},"contents":"{\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552433230546F6B656E55534443000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552433230546F6B656E55534443000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5455534443000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x104 SWAP3 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x11D SWAP3 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP POP POP PUSH3 0x140 PUSH3 0x134 PUSH3 0x201 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x209 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x15B PUSH1 0x6 DUP4 PUSH3 0x2CF PUSH1 0x20 SHL PUSH3 0xA80 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x17E PUSH1 0x7 DUP3 PUSH3 0x2CF PUSH1 0x20 SHL PUSH3 0xA80 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1BD PUSH3 0x333 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x76B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x2F5 JUMPI PUSH3 0x2ED DUP4 PUSH3 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x32D JUMP JUMPDEST DUP3 PUSH3 0x30C DUP4 PUSH3 0x3FD PUSH1 0x20 SHL PUSH3 0xACB OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x324 SWAP3 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x375 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3E0 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3D7 SWAP2 SWAP1 PUSH3 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3EE SWAP1 PUSH3 0x696 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x415 SWAP1 PUSH3 0x735 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x439 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x485 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x454 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x485 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x485 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x484 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x467 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x494 SWAP2 SWAP1 PUSH3 0x498 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x499 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4CC DUP2 PUSH3 0x4B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4E7 DUP2 PUSH3 0x4D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x51A DUP3 PUSH3 0x4ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x52C DUP2 PUSH3 0x50D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x549 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x4C1 JUMP JUMPDEST PUSH3 0x558 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x4C1 JUMP JUMPDEST PUSH3 0x567 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x4C1 JUMP JUMPDEST PUSH3 0x576 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x4DC JUMP JUMPDEST PUSH3 0x585 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x521 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5AE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5DB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FF DUP3 PUSH3 0x58F JUMP JUMPDEST PUSH3 0x60B DUP2 DUP6 PUSH3 0x59A JUMP JUMPDEST SWAP4 POP PUSH3 0x61D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x5AB JUMP JUMPDEST PUSH3 0x628 DUP2 PUSH3 0x5E1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x64F DUP2 DUP5 PUSH3 0x5F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x680 DUP3 MLOAD PUSH3 0x4B7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A3 DUP3 PUSH3 0x657 JUMP JUMPDEST DUP3 PUSH3 0x6AF DUP5 PUSH3 0x662 JUMP JUMPDEST SWAP1 POP PUSH3 0x6BC DUP2 PUSH3 0x672 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x6FF JUMPI PUSH3 0x6FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x689 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x74E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x765 JUMPI PUSH3 0x764 PUSH3 0x706 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x29D1 PUSH3 0x7C6 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x622 ADD MSTORE PUSH1 0x0 PUSH2 0x5EE ADD MSTORE PUSH1 0x0 PUSH2 0x1517 ADD MSTORE PUSH1 0x0 PUSH2 0x14F6 ADD MSTORE PUSH1 0x0 PUSH2 0xFB0 ADD MSTORE PUSH1 0x0 PUSH2 0x1006 ADD MSTORE PUSH1 0x0 PUSH2 0x102F ADD MSTORE PUSH2 0x29D1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F6 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EB SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x417 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x464 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x439 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x464 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x447 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x479 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x486 DUP2 DUP6 DUP6 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A6 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B3 DUP6 DUP3 DUP6 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x4BE DUP6 DUP6 DUP6 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4ED PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x4FF DUP6 DUP10 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x52B DUP3 DUP3 PUSH2 0x10E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x589 PUSH1 0x0 PUSH2 0x1238 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x61B PUSH1 0x6 PUSH32 0x0 PUSH2 0x130C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x64F PUSH1 0x7 PUSH32 0x0 PUSH2 0x130C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x201C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x69E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x716 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x764 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A4 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B2 DUP3 DUP7 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x804 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81B PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x828 DUP2 DUP6 DUP6 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP1 PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x8A5 DUP13 PUSH2 0x13BC JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8BB SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x8DE DUP3 PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8EE DUP3 DUP8 DUP8 DUP8 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x969 DUP11 DUP11 DUP11 PUSH2 0xADD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA04 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6B SWAP1 PUSH2 0x2288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0x1238 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA95 DUP4 PUSH2 0x145F JUMP JUMPDEST SWAP1 POP PUSH2 0xAC5 JUMP JUMPDEST DUP3 PUSH2 0xAA6 DUP4 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xABC SWAP3 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP1 PUSH2 0x231A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB4 DUP5 DUP5 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD2E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD17 SWAP1 PUSH2 0x2418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2D DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xADD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP1 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE1F DUP4 DUP4 DUP4 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9C SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFA6 DUP5 DUP5 DUP5 PUSH2 0x14CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1028 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1055 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x105D PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x106B PUSH2 0xAD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1089 PUSH2 0x6DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D6 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1148 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115D PUSH1 0x0 DUP4 DUP4 PUSH2 0x14C7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1234 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1329 JUMPI PUSH2 0x1322 DUP4 PUSH2 0x1567 JUMP JUMPDEST SWAP1 POP PUSH2 0x13B6 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1335 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1361 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1383 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1391 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1409 DUP2 PUSH2 0x12FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 DUP2 PUSH2 0x15DB JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142D PUSH2 0x1427 PUSH2 0xFAC JUMP JUMPDEST DUP4 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1445 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1632 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1452 DUP2 PUSH2 0x1715 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x14AC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A3 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x14B8 SWAP1 PUSH2 0x2703 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x154C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1574 DUP4 PUSH2 0x1883 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1593 JUMPI PUSH2 0x1592 PUSH2 0x201C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x170C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1692 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x170C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1729 JUMPI PUSH2 0x1728 PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1747 JUMPI PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x176E JUMPI PUSH2 0x176D PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A6 SWAP1 PUSH2 0x287D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP1 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182B JUMPI PUSH2 0x182A PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x187F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1876 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x18DF SWAP1 PUSH2 0x1F65 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1901 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1948 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x191A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1948 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1948 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1947 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x192C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1972 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x195A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1995 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x19EB DUP2 DUP6 PUSH2 0x1981 JUMP JUMPDEST SWAP4 POP PUSH2 0x19FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1992 JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x19C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A29 DUP2 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A71 DUP2 PUSH2 0x1A56 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8E DUP2 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA7 DUP2 PUSH2 0x1A94 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC4 DUP2 PUSH2 0x1A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP6 DUP3 DUP7 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP6 DUP3 DUP7 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x1B0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B49 DUP2 PUSH2 0x1A94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH2 0x1B82 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BA2 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD3 DUP2 PUSH2 0x1BBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C07 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP5 DUP3 DUP6 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8A DUP2 PUSH2 0x1C55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C99 DUP2 PUSH2 0x1A56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD4 DUP2 PUSH2 0x1A94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE6 DUP4 DUP4 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0A DUP3 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x1D14 DUP2 DUP6 PUSH2 0x1CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x1D1F DUP4 PUSH2 0x1CBB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D50 JUMPI DUP2 MLOAD PUSH2 0x1D37 DUP9 DUP3 PUSH2 0x1CDA JUMP JUMPDEST SWAP8 POP PUSH2 0x1D42 DUP4 PUSH2 0x1CF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D23 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1D72 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1C81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D84 DUP2 DUP10 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1D98 DUP2 DUP9 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DA7 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x1DB4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x1DC1 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BFE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1DD3 DUP2 DUP5 PUSH2 0x1CFF JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x1BBD JUMP JUMPDEST DUP2 EQ PUSH2 0x1E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E22 DUP2 PUSH2 0x1DFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E31 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E4E DUP2 PUSH2 0x1E28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E81 DUP11 DUP3 DUP12 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1E92 DUP11 DUP3 DUP12 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1EA3 DUP11 DUP3 DUP12 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1EB4 DUP11 DUP3 DUP12 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1EC5 DUP11 DUP3 DUP12 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1ED6 DUP11 DUP3 DUP12 ADD PUSH2 0x1E3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1EE7 DUP11 DUP3 DUP12 ADD PUSH2 0x1E3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1B DUP6 DUP3 DUP7 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F2C DUP6 DUP3 DUP7 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F7D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD1 DUP3 PUSH2 0x1A94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDC DUP4 PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1F97 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A7 PUSH1 0x25 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B2 DUP3 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D6 DUP2 PUSH2 0x209A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2113 PUSH1 0x1D DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x211E DUP3 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2142 DUP2 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x215E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x216B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x2178 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x2185 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x2192 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x219F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E0 PUSH1 0x1E DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EB DUP3 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220F DUP2 PUSH2 0x21D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2272 PUSH1 0x26 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x227D DUP3 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22A1 DUP2 PUSH2 0x2265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2304 PUSH1 0x24 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x230F DUP3 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2333 DUP2 PUSH2 0x22F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2396 PUSH1 0x22 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A1 DUP3 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C5 DUP2 PUSH2 0x2389 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2402 PUSH1 0x1D DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x240D DUP3 PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2431 DUP2 PUSH2 0x23F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2494 PUSH1 0x25 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x249F DUP3 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C3 DUP2 PUSH2 0x2487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 PUSH1 0x23 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP3 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x2519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x26 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E7 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 PUSH1 0x20 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2653 DUP2 PUSH2 0x2617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2690 PUSH1 0x1F DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x269B DUP3 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26BF DUP2 PUSH2 0x2683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26ED DUP3 MLOAD PUSH2 0x1BF4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270E DUP3 PUSH2 0x26C6 JUMP JUMPDEST DUP3 PUSH2 0x2718 DUP5 PUSH2 0x26D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2723 DUP2 PUSH2 0x26E1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x2763 JUMPI PUSH2 0x275E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x26F6 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x277F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x278C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x2799 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x27A6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x27B3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1C90 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27D2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x27EC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x27F9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BFE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2867 PUSH1 0x18 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x2872 DUP3 PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2896 DUP2 PUSH2 0x285A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D3 PUSH1 0x1F DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x28DE DUP3 PUSH2 0x289D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 PUSH2 0x28C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2965 PUSH1 0x22 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x2970 DUP3 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2994 DUP2 PUSH2 0x2958 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP12 0xE0 0xAA 0xEE EXTCODEHASH 0xFB CODESIZE SWAP9 0xDA 0x5E MLOAD BALANCE 0xBE DUP1 RETURN 0xDC 0xD0 CALLCODE PUSH20 0x92142F43C15E788A243032B664736F6C63430008 MULMOD STOP CALLER ","sourceMap":"253:247:17:-:0;;;315:79;;;;;;;;;;1817:52:4;;;;;;;;;;;;;;;;;1856:4;3178:431:14;;;;;;;;;;;;;;;;;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3251:45:14;3282:13;3251:4;:30;;;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;1817:52:4;253:247:17;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;2895:341:10:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;;;:32;;:::i;:::-;:38;;:46;;;;;;;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:14:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;1689:286:10:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:11:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;253:247:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:18:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:77::-;251:7;280:5;269:16;;214:77;;;:::o;297:118::-;384:24;402:5;384:24;:::i;:::-;379:3;372:37;297:118;;:::o;421:126::-;458:7;498:42;491:5;487:54;476:65;;421:126;;;:::o;553:96::-;590:7;619:24;637:5;619:24;:::i;:::-;608:35;;553:96;;;:::o;655:118::-;742:24;760:5;742:24;:::i;:::-;737:3;730:37;655:118;;:::o;779:664::-;984:4;1022:3;1011:9;1007:19;999:27;;1036:71;1104:1;1093:9;1089:17;1080:6;1036:71;:::i;:::-;1117:72;1185:2;1174:9;1170:18;1161:6;1117:72;:::i;:::-;1199;1267:2;1256:9;1252:18;1243:6;1199:72;:::i;:::-;1281;1349:2;1338:9;1334:18;1325:6;1281:72;:::i;:::-;1363:73;1431:3;1420:9;1416:19;1407:6;1363:73;:::i;:::-;779:664;;;;;;;;:::o;1449:99::-;1501:6;1535:5;1529:12;1519:22;;1449:99;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:307::-;1797:1;1807:113;1821:6;1818:1;1815:13;1807:113;;;1906:1;1901:3;1897:11;1891:18;1887:1;1882:3;1878:11;1871:39;1843:2;1840:1;1836:10;1831:15;;1807:113;;;1938:6;1935:1;1932:13;1929:101;;;2018:1;2009:6;2004:3;2000:16;1993:27;1929:101;1778:258;1729:307;;;:::o;2042:102::-;2083:6;2134:2;2130:7;2125:2;2118:5;2114:14;2110:28;2100:38;;2042:102;;;:::o;2150:364::-;2238:3;2266:39;2299:5;2266:39;:::i;:::-;2321:71;2385:6;2380:3;2321:71;:::i;:::-;2314:78;;2401:52;2446:6;2441:3;2434:4;2427:5;2423:16;2401:52;:::i;:::-;2478:29;2500:6;2478:29;:::i;:::-;2473:3;2469:39;2462:46;;2242:272;2150:364;;;;:::o;2520:313::-;2633:4;2671:2;2660:9;2656:18;2648:26;;2720:9;2714:4;2710:20;2706:1;2695:9;2691:17;2684:47;2748:78;2821:4;2812:6;2748:78;:::i;:::-;2740:86;;2520:313;;;;:::o;2839:98::-;2890:6;2924:5;2918:12;2908:22;;2839:98;;;:::o;2943:116::-;2994:4;3017:3;3009:11;;3047:4;3042:3;3038:14;3030:22;;2943:116;;;:::o;3065:154::-;3108:11;3144:29;3168:3;3162:10;3144:29;:::i;:::-;3207:5;3183:29;;3120:99;3065:154;;;:::o;3225:107::-;3269:8;3319:5;3313:4;3309:16;3288:37;;3225:107;;;;:::o;3338:594::-;3422:5;3453:38;3485:5;3453:38;:::i;:::-;3516:5;3543:40;3577:5;3543:40;:::i;:::-;3531:52;;3602:35;3628:8;3602:35;:::i;:::-;3593:44;;3661:2;3653:6;3650:14;3647:278;;;3732:169;3817:66;3787:6;3783:2;3779:15;3776:1;3772:23;3732:169;:::i;:::-;3709:5;3688:227;3679:236;;3647:278;3428:504;;3338:594;;;:::o;3938:180::-;3986:77;3983:1;3976:88;4083:4;4080:1;4073:15;4107:4;4104:1;4097:15;4124:320;4168:6;4205:1;4199:4;4195:12;4185:22;;4252:1;4246:4;4242:12;4273:18;4263:81;;4329:4;4321:6;4317:17;4307:27;;4263:81;4391:2;4383:6;4380:14;4360:18;4357:38;4354:84;;;4410:18;;:::i;:::-;4354:84;4175:269;4124:320;;;:::o;253:247:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_944":{"entryPoint":1235,"id":944,"parameterSlots":0,"returnSlots":1},"@_afterTokenTransfer_723":{"entryPoint":5324,"id":723,"parameterSlots":3,"returnSlots":0},"@_approve_658":{"entryPoint":2781,"id":658,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_712":{"entryPoint":5319,"id":712,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2195":{"entryPoint":5329,"id":2195,"parameterSlots":0,"returnSlots":1},"@_checkOwner_54":{"entryPoint":4195,"id":54,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2174":{"entryPoint":4012,"id":2174,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2211":{"entryPoint":5146,"id":2211,"parameterSlots":1,"returnSlots":1},"@_mint_541":{"entryPoint":4321,"id":541,"parameterSlots":2,"returnSlots":0},"@_msgSender_1050":{"entryPoint":2773,"id":1050,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_701":{"entryPoint":3240,"id":701,"parameterSlots":3,"returnSlots":0},"@_throwError_1743":{"entryPoint":5909,"id":1743,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":4664,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_484":{"entryPoint":3380,"id":484,"parameterSlots":3,"returnSlots":0},"@_useNonce_973":{"entryPoint":5052,"id":973,"parameterSlots":1,"returnSlots":1},"@allowance_279":{"entryPoint":2421,"id":279,"parameterSlots":2,"returnSlots":1},"@approve_304":{"entryPoint":1134,"id":304,"parameterSlots":2,"returnSlots":1},"@balanceOf_236":{"entryPoint":1327,"id":236,"parameterSlots":1,"returnSlots":1},"@byteLength_1251":{"entryPoint":6275,"id":1251,"parameterSlots":1,"returnSlots":1},"@current_1078":{"entryPoint":4862,"id":1078,"parameterSlots":1,"returnSlots":1},"@decimals_212":{"entryPoint":1226,"id":212,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_407":{"entryPoint":1945,"id":407,"parameterSlots":2,"returnSlots":1},"@eip712Domain_2258":{"entryPoint":1499,"id":2258,"parameterSlots":0,"returnSlots":7},"@getStringSlot_1437":{"entryPoint":2763,"id":1437,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_366":{"entryPoint":1250,"id":366,"parameterSlots":2,"returnSlots":1},"@increment_1092":{"entryPoint":5595,"id":1092,"parameterSlots":1,"returnSlots":0},"@mint_3267":{"entryPoint":1305,"id":3267,"parameterSlots":2,"returnSlots":0},"@name_192":{"entryPoint":988,"id":192,"parameterSlots":0,"returnSlots":1},"@nonces_933":{"entryPoint":1419,"id":933,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":1757,"id":40,"parameterSlots":0,"returnSlots":1},"@permit_917":{"entryPoint":2099,"id":917,"parameterSlots":7,"returnSlots":0},"@recover_1990":{"entryPoint":5172,"id":1990,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":1399,"id":68,"parameterSlots":0,"returnSlots":0},"@symbol_202":{"entryPoint":1799,"id":202,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_1291":{"entryPoint":2688,"id":1291,"parameterSlots":2,"returnSlots":1},"@toShortString_1193":{"entryPoint":5215,"id":1193,"parameterSlots":1,"returnSlots":1},"@toStringWithFallback_1318":{"entryPoint":4876,"id":1318,"parameterSlots":2,"returnSlots":1},"@toString_1219":{"entryPoint":5479,"id":1219,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2034":{"entryPoint":5617,"id":2034,"parameterSlots":2,"returnSlots":1},"@totalSupply_222":{"entryPoint":1169,"id":222,"parameterSlots":0,"returnSlots":1},"@transferFrom_337":{"entryPoint":1179,"id":337,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":2556,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_261":{"entryPoint":2064,"id":261,"parameterSlots":2,"returnSlots":1},"@tryRecover_1957":{"entryPoint":5682,"id":1957,"parameterSlots":4,"returnSlots":2},"abi_decode_t_address":{"entryPoint":6783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7926,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7018,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7764,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6858,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7312,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6934,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":7297,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7166,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":10330,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":9497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":10438,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":8805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":9097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":9205,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":8454,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":9643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":10584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":8659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":9751,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":9351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":8951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":8346,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":9859,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7371,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6976,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7114,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7517,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8521,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":10090,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":10173,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9532,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10473,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9132,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8489,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9386,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8381,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9894,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":7129,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7355,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":9937,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7327,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9926,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6518,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7410,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7338,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6529,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8134,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6742,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6922,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":7253,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7156,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6710,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6804,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7101,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":9987,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":6546,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8037,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8087,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10242,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7990,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8220,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes32":{"entryPoint":9953,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6705,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6597,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9974,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":10289,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":9418,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":10397,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":8726,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":9018,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":9164,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":8413,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":9564,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":10505,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":8618,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":9710,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":9272,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":8872,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":8267,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":9818,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6760,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7720,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6814,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7676,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30942:18","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:18","statements":[{"nodeType":"YulAssignment","src":"77:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:18"},"nodeType":"YulFunctionCall","src":"87:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:18","type":""}],"src":"7:99:18"},{"body":{"nodeType":"YulBlock","src":"208:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:18"},"nodeType":"YulFunctionCall","src":"218:19:18"},"nodeType":"YulExpressionStatement","src":"218:19:18"},{"nodeType":"YulAssignment","src":"246:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:18"},"nodeType":"YulFunctionCall","src":"261:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:18","type":""}],"src":"112:169:18"},{"body":{"nodeType":"YulBlock","src":"336:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:18"},"nodeType":"YulFunctionCall","src":"436:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:18"},"nodeType":"YulFunctionCall","src":"455:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:18"},"nodeType":"YulFunctionCall","src":"449:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:18"},"nodeType":"YulFunctionCall","src":"429:39:18"},"nodeType":"YulExpressionStatement","src":"429:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:18"},"nodeType":"YulFunctionCall","src":"373:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:18","statements":[{"nodeType":"YulAssignment","src":"389:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:18"},"nodeType":"YulFunctionCall","src":"394:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:18","statements":[]},"src":"365:113:18"},{"body":{"nodeType":"YulBlock","src":"512:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:18"},"nodeType":"YulFunctionCall","src":"558:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:18"},"nodeType":"YulFunctionCall","src":"551:27:18"},"nodeType":"YulExpressionStatement","src":"551:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:18"},"nodeType":"YulFunctionCall","src":"490:13:18"},"nodeType":"YulIf","src":"487:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:18","type":""}],"src":"287:307:18"},{"body":{"nodeType":"YulBlock","src":"648:54:18","statements":[{"nodeType":"YulAssignment","src":"658:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:18"},"nodeType":"YulFunctionCall","src":"672:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:18"},"nodeType":"YulFunctionCall","src":"688:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:18"},"nodeType":"YulFunctionCall","src":"668:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:18","type":""}],"src":"600:102:18"},{"body":{"nodeType":"YulBlock","src":"800:272:18","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:18"},"nodeType":"YulFunctionCall","src":"824:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:18","type":""}]},{"nodeType":"YulAssignment","src":"872:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:18"},"nodeType":"YulFunctionCall","src":"879:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:18"},"nodeType":"YulFunctionCall","src":"981:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:18"},"nodeType":"YulFunctionCall","src":"959:52:18"},"nodeType":"YulExpressionStatement","src":"959:52:18"},{"nodeType":"YulAssignment","src":"1020:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:18"},"nodeType":"YulFunctionCall","src":"1036:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:18"},"nodeType":"YulFunctionCall","src":"1027:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:18","type":""}],"src":"708:364:18"},{"body":{"nodeType":"YulBlock","src":"1196:195:18","statements":[{"nodeType":"YulAssignment","src":"1206:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:18"},"nodeType":"YulFunctionCall","src":"1214:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:18"},"nodeType":"YulFunctionCall","src":"1249:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:18"},"nodeType":"YulFunctionCall","src":"1268:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:18"},"nodeType":"YulFunctionCall","src":"1242:47:18"},"nodeType":"YulExpressionStatement","src":"1242:47:18"},{"nodeType":"YulAssignment","src":"1298:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:18"},"nodeType":"YulFunctionCall","src":"1306:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:18","type":""}],"src":"1078:313:18"},{"body":{"nodeType":"YulBlock","src":"1437:35:18","statements":[{"nodeType":"YulAssignment","src":"1447:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:18"},"nodeType":"YulFunctionCall","src":"1457:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:18","type":""}],"src":"1397:75:18"},{"body":{"nodeType":"YulBlock","src":"1567:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:18"},"nodeType":"YulFunctionCall","src":"1577:12:18"},"nodeType":"YulExpressionStatement","src":"1577:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:18"},{"body":{"nodeType":"YulBlock","src":"1690:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:18"},"nodeType":"YulFunctionCall","src":"1700:12:18"},"nodeType":"YulExpressionStatement","src":"1700:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:18"},{"body":{"nodeType":"YulBlock","src":"1769:81:18","statements":[{"nodeType":"YulAssignment","src":"1779:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:18"},"nodeType":"YulFunctionCall","src":"1790:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:18","type":""}],"src":"1724:126:18"},{"body":{"nodeType":"YulBlock","src":"1901:51:18","statements":[{"nodeType":"YulAssignment","src":"1911:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:18"},"nodeType":"YulFunctionCall","src":"1922:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:18","type":""}],"src":"1856:96:18"},{"body":{"nodeType":"YulBlock","src":"2001:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:18"},"nodeType":"YulFunctionCall","src":"2060:12:18"},"nodeType":"YulExpressionStatement","src":"2060:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:18"},"nodeType":"YulFunctionCall","src":"2031:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:18"},"nodeType":"YulFunctionCall","src":"2021:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:18"},"nodeType":"YulFunctionCall","src":"2014:43:18"},"nodeType":"YulIf","src":"2011:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:18","type":""}],"src":"1958:122:18"},{"body":{"nodeType":"YulBlock","src":"2138:87:18","statements":[{"nodeType":"YulAssignment","src":"2148:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:18"},"nodeType":"YulFunctionCall","src":"2157:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:18"},"nodeType":"YulFunctionCall","src":"2186:33:18"},"nodeType":"YulExpressionStatement","src":"2186:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:18","type":""}],"src":"2086:139:18"},{"body":{"nodeType":"YulBlock","src":"2276:32:18","statements":[{"nodeType":"YulAssignment","src":"2286:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:18","type":""}],"src":"2231:77:18"},{"body":{"nodeType":"YulBlock","src":"2357:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:18"},"nodeType":"YulFunctionCall","src":"2416:12:18"},"nodeType":"YulExpressionStatement","src":"2416:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:18"},"nodeType":"YulFunctionCall","src":"2387:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:18"},"nodeType":"YulFunctionCall","src":"2377:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:18"},"nodeType":"YulFunctionCall","src":"2370:43:18"},"nodeType":"YulIf","src":"2367:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:18","type":""}],"src":"2314:122:18"},{"body":{"nodeType":"YulBlock","src":"2494:87:18","statements":[{"nodeType":"YulAssignment","src":"2504:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:18"},"nodeType":"YulFunctionCall","src":"2513:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:18"},"nodeType":"YulFunctionCall","src":"2542:33:18"},"nodeType":"YulExpressionStatement","src":"2542:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:18","type":""}],"src":"2442:139:18"},{"body":{"nodeType":"YulBlock","src":"2670:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:18"},"nodeType":"YulFunctionCall","src":"2718:79:18"},"nodeType":"YulExpressionStatement","src":"2718:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:18"},"nodeType":"YulFunctionCall","src":"2687:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:18"},"nodeType":"YulFunctionCall","src":"2683:32:18"},"nodeType":"YulIf","src":"2680:119:18"},{"nodeType":"YulBlock","src":"2809:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:18"},"nodeType":"YulFunctionCall","src":"2884:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:18"},"nodeType":"YulFunctionCall","src":"2863:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:18"}]}]},{"nodeType":"YulBlock","src":"2936:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:18"},"nodeType":"YulFunctionCall","src":"3012:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:18"},"nodeType":"YulFunctionCall","src":"2991:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:18","type":""}],"src":"2587:474:18"},{"body":{"nodeType":"YulBlock","src":"3109:48:18","statements":[{"nodeType":"YulAssignment","src":"3119:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:18"},"nodeType":"YulFunctionCall","src":"3137:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:18"},"nodeType":"YulFunctionCall","src":"3130:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:18","type":""}],"src":"3067:90:18"},{"body":{"nodeType":"YulBlock","src":"3222:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:18"},"nodeType":"YulFunctionCall","src":"3244:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:18"},"nodeType":"YulFunctionCall","src":"3232:34:18"},"nodeType":"YulExpressionStatement","src":"3232:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:18","type":""}],"src":"3163:109:18"},{"body":{"nodeType":"YulBlock","src":"3370:118:18","statements":[{"nodeType":"YulAssignment","src":"3380:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:18"},"nodeType":"YulFunctionCall","src":"3388:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:18"},"nodeType":"YulFunctionCall","src":"3463:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:18"},"nodeType":"YulFunctionCall","src":"3416:65:18"},"nodeType":"YulExpressionStatement","src":"3416:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:18","type":""}],"src":"3278:210:18"},{"body":{"nodeType":"YulBlock","src":"3559:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:18"},"nodeType":"YulFunctionCall","src":"3581:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:18"},"nodeType":"YulFunctionCall","src":"3569:37:18"},"nodeType":"YulExpressionStatement","src":"3569:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:18","type":""}],"src":"3494:118:18"},{"body":{"nodeType":"YulBlock","src":"3716:124:18","statements":[{"nodeType":"YulAssignment","src":"3726:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:18"},"nodeType":"YulFunctionCall","src":"3734:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:18"},"nodeType":"YulFunctionCall","src":"3815:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:18"},"nodeType":"YulFunctionCall","src":"3762:71:18"},"nodeType":"YulExpressionStatement","src":"3762:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:18","type":""}],"src":"3618:222:18"},{"body":{"nodeType":"YulBlock","src":"3946:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:18"},"nodeType":"YulFunctionCall","src":"3994:79:18"},"nodeType":"YulExpressionStatement","src":"3994:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:18"},"nodeType":"YulFunctionCall","src":"3963:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:18"},"nodeType":"YulFunctionCall","src":"3959:32:18"},"nodeType":"YulIf","src":"3956:119:18"},{"nodeType":"YulBlock","src":"4085:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:18"},"nodeType":"YulFunctionCall","src":"4160:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:18"},"nodeType":"YulFunctionCall","src":"4139:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:18"}]}]},{"nodeType":"YulBlock","src":"4212:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:18"},"nodeType":"YulFunctionCall","src":"4288:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:18"},"nodeType":"YulFunctionCall","src":"4267:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:18"}]}]},{"nodeType":"YulBlock","src":"4340:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:18"},"nodeType":"YulFunctionCall","src":"4416:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:18"},"nodeType":"YulFunctionCall","src":"4395:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:18","type":""}],"src":"3846:619:18"},{"body":{"nodeType":"YulBlock","src":"4514:43:18","statements":[{"nodeType":"YulAssignment","src":"4524:27:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:18"},"nodeType":"YulFunctionCall","src":"4535:16:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:18"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:18","type":""}],"src":"4471:86:18"},{"body":{"nodeType":"YulBlock","src":"4624:51:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:18"},"nodeType":"YulFunctionCall","src":"4646:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:18"},"nodeType":"YulFunctionCall","src":"4634:35:18"},"nodeType":"YulExpressionStatement","src":"4634:35:18"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:18","type":""}],"src":"4563:112:18"},{"body":{"nodeType":"YulBlock","src":"4775:120:18","statements":[{"nodeType":"YulAssignment","src":"4785:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:18"},"nodeType":"YulFunctionCall","src":"4793:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:18"},"nodeType":"YulFunctionCall","src":"4870:17:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:18"},"nodeType":"YulFunctionCall","src":"4821:67:18"},"nodeType":"YulExpressionStatement","src":"4821:67:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:18","type":""}],"src":"4681:214:18"},{"body":{"nodeType":"YulBlock","src":"4946:32:18","statements":[{"nodeType":"YulAssignment","src":"4956:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4967:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4956:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4938:7:18","type":""}],"src":"4901:77:18"},{"body":{"nodeType":"YulBlock","src":"5049:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5066:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5071:17:18"},"nodeType":"YulFunctionCall","src":"5071:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5059:6:18"},"nodeType":"YulFunctionCall","src":"5059:37:18"},"nodeType":"YulExpressionStatement","src":"5059:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5037:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5044:3:18","type":""}],"src":"4984:118:18"},{"body":{"nodeType":"YulBlock","src":"5206:124:18","statements":[{"nodeType":"YulAssignment","src":"5216:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5228:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5224:3:18"},"nodeType":"YulFunctionCall","src":"5224:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5216:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5296:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:18"},"nodeType":"YulFunctionCall","src":"5305:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5252:43:18"},"nodeType":"YulFunctionCall","src":"5252:71:18"},"nodeType":"YulExpressionStatement","src":"5252:71:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5178:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5190:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5201:4:18","type":""}],"src":"5108:222:18"},{"body":{"nodeType":"YulBlock","src":"5402:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"5448:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5450:77:18"},"nodeType":"YulFunctionCall","src":"5450:79:18"},"nodeType":"YulExpressionStatement","src":"5450:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5423:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5419:3:18"},"nodeType":"YulFunctionCall","src":"5419:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5444:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5415:3:18"},"nodeType":"YulFunctionCall","src":"5415:32:18"},"nodeType":"YulIf","src":"5412:119:18"},{"nodeType":"YulBlock","src":"5541:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5556:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5570:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5560:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5585:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5631:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:18"},"nodeType":"YulFunctionCall","src":"5616:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5595:20:18"},"nodeType":"YulFunctionCall","src":"5595:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5372:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5383:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5395:6:18","type":""}],"src":"5336:329:18"},{"body":{"nodeType":"YulBlock","src":"5715:105:18","statements":[{"nodeType":"YulAssignment","src":"5725:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5740:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5747:66:18","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5736:3:18"},"nodeType":"YulFunctionCall","src":"5736:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5725:7:18"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5697:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5707:7:18","type":""}],"src":"5671:149:18"},{"body":{"nodeType":"YulBlock","src":"5889:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5906:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5928:5:18"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"5911:16:18"},"nodeType":"YulFunctionCall","src":"5911:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5899:6:18"},"nodeType":"YulFunctionCall","src":"5899:36:18"},"nodeType":"YulExpressionStatement","src":"5899:36:18"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5877:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5884:3:18","type":""}],"src":"5826:115:18"},{"body":{"nodeType":"YulBlock","src":"6012:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6029:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6052:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6034:17:18"},"nodeType":"YulFunctionCall","src":"6034:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6022:6:18"},"nodeType":"YulFunctionCall","src":"6022:37:18"},"nodeType":"YulExpressionStatement","src":"6022:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6000:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6007:3:18","type":""}],"src":"5947:118:18"},{"body":{"nodeType":"YulBlock","src":"6145:40:18","statements":[{"nodeType":"YulAssignment","src":"6156:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6172:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6166:5:18"},"nodeType":"YulFunctionCall","src":"6166:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6156:6:18"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6128:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6138:6:18","type":""}],"src":"6071:114:18"},{"body":{"nodeType":"YulBlock","src":"6302:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6319:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"6324:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6312:6:18"},"nodeType":"YulFunctionCall","src":"6312:19:18"},"nodeType":"YulExpressionStatement","src":"6312:19:18"},{"nodeType":"YulAssignment","src":"6340:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6359:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6364:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6355:3:18"},"nodeType":"YulFunctionCall","src":"6355:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6340:11:18"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6274:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"6279:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6290:11:18","type":""}],"src":"6191:184:18"},{"body":{"nodeType":"YulBlock","src":"6453:60:18","statements":[{"nodeType":"YulAssignment","src":"6463:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6471:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6463:4:18"}]},{"nodeType":"YulAssignment","src":"6484:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6496:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6501:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:18"},"nodeType":"YulFunctionCall","src":"6492:14:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6484:4:18"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6440:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6448:4:18","type":""}],"src":"6381:132:18"},{"body":{"nodeType":"YulBlock","src":"6574:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6591:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6614:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6596:17:18"},"nodeType":"YulFunctionCall","src":"6596:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6584:6:18"},"nodeType":"YulFunctionCall","src":"6584:37:18"},"nodeType":"YulExpressionStatement","src":"6584:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6562:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6569:3:18","type":""}],"src":"6519:108:18"},{"body":{"nodeType":"YulBlock","src":"6713:99:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6757:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"6765:3:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6723:33:18"},"nodeType":"YulFunctionCall","src":"6723:46:18"},"nodeType":"YulExpressionStatement","src":"6723:46:18"},{"nodeType":"YulAssignment","src":"6778:28:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6796:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6801:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:18"},"nodeType":"YulFunctionCall","src":"6792:14:18"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6778:10:18"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6686:6:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6694:3:18","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6702:10:18","type":""}],"src":"6633:179:18"},{"body":{"nodeType":"YulBlock","src":"6893:38:18","statements":[{"nodeType":"YulAssignment","src":"6903:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6915:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6920:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6911:3:18"},"nodeType":"YulFunctionCall","src":"6911:14:18"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6903:4:18"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6880:3:18","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6888:4:18","type":""}],"src":"6818:113:18"},{"body":{"nodeType":"YulBlock","src":"7091:608:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7101:68:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7163:5:18"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7115:47:18"},"nodeType":"YulFunctionCall","src":"7115:54:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7105:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7178:93:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7259:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7264:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7185:73:18"},"nodeType":"YulFunctionCall","src":"7185:86:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7178:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"7280:71:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7345:5:18"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7295:49:18"},"nodeType":"YulFunctionCall","src":"7295:56:18"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7284:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7360:21:18","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7374:7:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7364:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7450:224:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7464:34:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7491:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7485:5:18"},"nodeType":"YulFunctionCall","src":"7485:13:18"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7468:13:18","type":""}]},{"nodeType":"YulAssignment","src":"7511:70:18","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7562:13:18"},{"name":"pos","nodeType":"YulIdentifier","src":"7577:3:18"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7518:43:18"},"nodeType":"YulFunctionCall","src":"7518:63:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7511:3:18"}]},{"nodeType":"YulAssignment","src":"7594:70:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7657:6:18"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7604:52:18"},"nodeType":"YulFunctionCall","src":"7604:60:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7594:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7412:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7415:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7409:2:18"},"nodeType":"YulFunctionCall","src":"7409:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7423:18:18","statements":[{"nodeType":"YulAssignment","src":"7425:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7434:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7437:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7430:3:18"},"nodeType":"YulFunctionCall","src":"7430:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7425:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7394:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7396:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7405:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7400:1:18","type":""}]}]},"src":"7390:284:18"},{"nodeType":"YulAssignment","src":"7683:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"7690:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7683:3:18"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7070:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7077:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7086:3:18","type":""}],"src":"6967:732:18"},{"body":{"nodeType":"YulBlock","src":"8059:861:18","statements":[{"nodeType":"YulAssignment","src":"8069:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8081:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8092:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:18"},"nodeType":"YulFunctionCall","src":"8077:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8069:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8148:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8161:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8172:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8157:3:18"},"nodeType":"YulFunctionCall","src":"8157:17:18"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8106:41:18"},"nodeType":"YulFunctionCall","src":"8106:69:18"},"nodeType":"YulExpressionStatement","src":"8106:69:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8196:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8207:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8192:3:18"},"nodeType":"YulFunctionCall","src":"8192:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8216:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8222:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8212:3:18"},"nodeType":"YulFunctionCall","src":"8212:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8185:6:18"},"nodeType":"YulFunctionCall","src":"8185:48:18"},"nodeType":"YulExpressionStatement","src":"8185:48:18"},{"nodeType":"YulAssignment","src":"8242:86:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8314:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"8323:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8250:63:18"},"nodeType":"YulFunctionCall","src":"8250:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8242:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8349:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8360:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8345:3:18"},"nodeType":"YulFunctionCall","src":"8345:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8369:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8375:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8365:3:18"},"nodeType":"YulFunctionCall","src":"8365:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8338:6:18"},"nodeType":"YulFunctionCall","src":"8338:48:18"},"nodeType":"YulExpressionStatement","src":"8338:48:18"},{"nodeType":"YulAssignment","src":"8395:86:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8467:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"8476:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8403:63:18"},"nodeType":"YulFunctionCall","src":"8403:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8395:4:18"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8535:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8548:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8559:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8544:3:18"},"nodeType":"YulFunctionCall","src":"8544:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8491:43:18"},"nodeType":"YulFunctionCall","src":"8491:72:18"},"nodeType":"YulExpressionStatement","src":"8491:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8617:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8630:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8641:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:18"},"nodeType":"YulFunctionCall","src":"8626:19:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8573:43:18"},"nodeType":"YulFunctionCall","src":"8573:73:18"},"nodeType":"YulExpressionStatement","src":"8573:73:18"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"8700:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8713:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8724:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8709:3:18"},"nodeType":"YulFunctionCall","src":"8709:19:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8656:43:18"},"nodeType":"YulFunctionCall","src":"8656:73:18"},"nodeType":"YulExpressionStatement","src":"8656:73:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8750:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8761:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8746:3:18"},"nodeType":"YulFunctionCall","src":"8746:19:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8771:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8777:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8767:3:18"},"nodeType":"YulFunctionCall","src":"8767:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:18"},"nodeType":"YulFunctionCall","src":"8739:49:18"},"nodeType":"YulExpressionStatement","src":"8739:49:18"},{"nodeType":"YulAssignment","src":"8797:116:18","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"8899:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"8908:4:18"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8805:93:18"},"nodeType":"YulFunctionCall","src":"8805:108:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8797:4:18"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7983:9:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7995:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8003:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8011:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8019:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8027:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8035:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8043:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8054:4:18","type":""}],"src":"7705:1215:18"},{"body":{"nodeType":"YulBlock","src":"9024:124:18","statements":[{"nodeType":"YulAssignment","src":"9034:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9046:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9057:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:18"},"nodeType":"YulFunctionCall","src":"9042:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9034:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9114:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9127:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9138:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9123:3:18"},"nodeType":"YulFunctionCall","src":"9123:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9070:43:18"},"nodeType":"YulFunctionCall","src":"9070:71:18"},"nodeType":"YulExpressionStatement","src":"9070:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8996:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9008:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9019:4:18","type":""}],"src":"8926:222:18"},{"body":{"nodeType":"YulBlock","src":"9195:77:18","statements":[{"body":{"nodeType":"YulBlock","src":"9250:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9259:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9262:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9252:6:18"},"nodeType":"YulFunctionCall","src":"9252:12:18"},"nodeType":"YulExpressionStatement","src":"9252:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9218:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9241:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"9225:15:18"},"nodeType":"YulFunctionCall","src":"9225:22:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9215:2:18"},"nodeType":"YulFunctionCall","src":"9215:33:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9208:6:18"},"nodeType":"YulFunctionCall","src":"9208:41:18"},"nodeType":"YulIf","src":"9205:61:18"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9188:5:18","type":""}],"src":"9154:118:18"},{"body":{"nodeType":"YulBlock","src":"9328:85:18","statements":[{"nodeType":"YulAssignment","src":"9338:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9360:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9347:12:18"},"nodeType":"YulFunctionCall","src":"9347:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9338:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9401:5:18"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"9376:24:18"},"nodeType":"YulFunctionCall","src":"9376:31:18"},"nodeType":"YulExpressionStatement","src":"9376:31:18"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9306:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"9314:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9322:5:18","type":""}],"src":"9278:135:18"},{"body":{"nodeType":"YulBlock","src":"9462:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"9519:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9528:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9531:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9521:6:18"},"nodeType":"YulFunctionCall","src":"9521:12:18"},"nodeType":"YulExpressionStatement","src":"9521:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9485:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9510:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9492:17:18"},"nodeType":"YulFunctionCall","src":"9492:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9482:2:18"},"nodeType":"YulFunctionCall","src":"9482:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9475:6:18"},"nodeType":"YulFunctionCall","src":"9475:43:18"},"nodeType":"YulIf","src":"9472:63:18"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9455:5:18","type":""}],"src":"9419:122:18"},{"body":{"nodeType":"YulBlock","src":"9599:87:18","statements":[{"nodeType":"YulAssignment","src":"9609:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9631:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9618:12:18"},"nodeType":"YulFunctionCall","src":"9618:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9609:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9674:5:18"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9647:26:18"},"nodeType":"YulFunctionCall","src":"9647:33:18"},"nodeType":"YulExpressionStatement","src":"9647:33:18"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9577:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"9585:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9593:5:18","type":""}],"src":"9547:139:18"},{"body":{"nodeType":"YulBlock","src":"9858:1033:18","statements":[{"body":{"nodeType":"YulBlock","src":"9905:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9907:77:18"},"nodeType":"YulFunctionCall","src":"9907:79:18"},"nodeType":"YulExpressionStatement","src":"9907:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9879:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9888:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9875:3:18"},"nodeType":"YulFunctionCall","src":"9875:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9900:3:18","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9871:3:18"},"nodeType":"YulFunctionCall","src":"9871:33:18"},"nodeType":"YulIf","src":"9868:120:18"},{"nodeType":"YulBlock","src":"9998:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10013:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10027:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10017:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10042:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10077:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10088:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10073:3:18"},"nodeType":"YulFunctionCall","src":"10073:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10097:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10052:20:18"},"nodeType":"YulFunctionCall","src":"10052:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10042:6:18"}]}]},{"nodeType":"YulBlock","src":"10125:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10140:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10154:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10144:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10170:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10205:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10216:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10201:3:18"},"nodeType":"YulFunctionCall","src":"10201:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10225:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10180:20:18"},"nodeType":"YulFunctionCall","src":"10180:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10170:6:18"}]}]},{"nodeType":"YulBlock","src":"10253:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10268:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10282:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10272:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10298:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10333:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10344:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10329:3:18"},"nodeType":"YulFunctionCall","src":"10329:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10353:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10308:20:18"},"nodeType":"YulFunctionCall","src":"10308:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10298:6:18"}]}]},{"nodeType":"YulBlock","src":"10381:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10396:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10410:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10400:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10426:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10461:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10472:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10457:3:18"},"nodeType":"YulFunctionCall","src":"10457:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10481:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10436:20:18"},"nodeType":"YulFunctionCall","src":"10436:53:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10426:6:18"}]}]},{"nodeType":"YulBlock","src":"10509:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10524:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10538:3:18","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10528:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10555:61:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10588:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10599:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10584:3:18"},"nodeType":"YulFunctionCall","src":"10584:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10608:7:18"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10565:18:18"},"nodeType":"YulFunctionCall","src":"10565:51:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10555:6:18"}]}]},{"nodeType":"YulBlock","src":"10636:119:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10651:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10665:3:18","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10655:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10682:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10717:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10728:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10713:3:18"},"nodeType":"YulFunctionCall","src":"10713:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10737:7:18"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10692:20:18"},"nodeType":"YulFunctionCall","src":"10692:53:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10682:6:18"}]}]},{"nodeType":"YulBlock","src":"10765:119:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10780:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10794:3:18","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10784:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10811:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10846:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10857:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10842:3:18"},"nodeType":"YulFunctionCall","src":"10842:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10866:7:18"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10821:20:18"},"nodeType":"YulFunctionCall","src":"10821:53:18"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"10811:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9780:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9791:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9803:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9811:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9819:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9827:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9835:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9843:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9851:6:18","type":""}],"src":"9692:1199:18"},{"body":{"nodeType":"YulBlock","src":"10980:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"11026:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11028:77:18"},"nodeType":"YulFunctionCall","src":"11028:79:18"},"nodeType":"YulExpressionStatement","src":"11028:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11001:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11010:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10997:3:18"},"nodeType":"YulFunctionCall","src":"10997:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"11022:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10993:3:18"},"nodeType":"YulFunctionCall","src":"10993:32:18"},"nodeType":"YulIf","src":"10990:119:18"},{"nodeType":"YulBlock","src":"11119:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11134:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11148:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11138:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11163:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11198:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11209:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11194:3:18"},"nodeType":"YulFunctionCall","src":"11194:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11218:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11173:20:18"},"nodeType":"YulFunctionCall","src":"11173:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11163:6:18"}]}]},{"nodeType":"YulBlock","src":"11246:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11261:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11275:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11265:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11291:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11326:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11337:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:18"},"nodeType":"YulFunctionCall","src":"11322:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11346:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11301:20:18"},"nodeType":"YulFunctionCall","src":"11301:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11291:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10942:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10953:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10965:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10973:6:18","type":""}],"src":"10897:474:18"},{"body":{"nodeType":"YulBlock","src":"11405:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11422:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11425:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11415:6:18"},"nodeType":"YulFunctionCall","src":"11415:88:18"},"nodeType":"YulExpressionStatement","src":"11415:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11519:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11522:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11512:6:18"},"nodeType":"YulFunctionCall","src":"11512:15:18"},"nodeType":"YulExpressionStatement","src":"11512:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11543:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11546:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11536:6:18"},"nodeType":"YulFunctionCall","src":"11536:15:18"},"nodeType":"YulExpressionStatement","src":"11536:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11377:180:18"},{"body":{"nodeType":"YulBlock","src":"11614:269:18","statements":[{"nodeType":"YulAssignment","src":"11624:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11638:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"11644:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11634:3:18"},"nodeType":"YulFunctionCall","src":"11634:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11624:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"11655:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11685:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"11691:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11681:3:18"},"nodeType":"YulFunctionCall","src":"11681:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11659:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11732:51:18","statements":[{"nodeType":"YulAssignment","src":"11746:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11760:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11768:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11756:3:18"},"nodeType":"YulFunctionCall","src":"11756:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11746:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11712:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11705:6:18"},"nodeType":"YulFunctionCall","src":"11705:26:18"},"nodeType":"YulIf","src":"11702:81:18"},{"body":{"nodeType":"YulBlock","src":"11835:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11849:16:18"},"nodeType":"YulFunctionCall","src":"11849:18:18"},"nodeType":"YulExpressionStatement","src":"11849:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11799:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11822:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11830:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11819:2:18"},"nodeType":"YulFunctionCall","src":"11819:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11796:2:18"},"nodeType":"YulFunctionCall","src":"11796:38:18"},"nodeType":"YulIf","src":"11793:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11598:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11607:6:18","type":""}],"src":"11563:320:18"},{"body":{"nodeType":"YulBlock","src":"11917:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11934:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11937:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11927:6:18"},"nodeType":"YulFunctionCall","src":"11927:88:18"},"nodeType":"YulExpressionStatement","src":"11927:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12031:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12034:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12024:6:18"},"nodeType":"YulFunctionCall","src":"12024:15:18"},"nodeType":"YulExpressionStatement","src":"12024:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12055:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12058:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12048:6:18"},"nodeType":"YulFunctionCall","src":"12048:15:18"},"nodeType":"YulExpressionStatement","src":"12048:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11889:180:18"},{"body":{"nodeType":"YulBlock","src":"12119:261:18","statements":[{"nodeType":"YulAssignment","src":"12129:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12152:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12134:17:18"},"nodeType":"YulFunctionCall","src":"12134:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12129:1:18"}]},{"nodeType":"YulAssignment","src":"12163:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12186:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12168:17:18"},"nodeType":"YulFunctionCall","src":"12168:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12163:1:18"}]},{"body":{"nodeType":"YulBlock","src":"12326:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12328:16:18"},"nodeType":"YulFunctionCall","src":"12328:18:18"},"nodeType":"YulExpressionStatement","src":"12328:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12247:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12254:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"12322:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12250:3:18"},"nodeType":"YulFunctionCall","src":"12250:74:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12244:2:18"},"nodeType":"YulFunctionCall","src":"12244:81:18"},"nodeType":"YulIf","src":"12241:107:18"},{"nodeType":"YulAssignment","src":"12358:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12369:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"12372:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12365:3:18"},"nodeType":"YulFunctionCall","src":"12365:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12358:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12106:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"12109:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12115:3:18","type":""}],"src":"12075:305:18"},{"body":{"nodeType":"YulBlock","src":"12414:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12431:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12434:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12424:6:18"},"nodeType":"YulFunctionCall","src":"12424:88:18"},"nodeType":"YulExpressionStatement","src":"12424:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12528:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12531:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12521:6:18"},"nodeType":"YulFunctionCall","src":"12521:15:18"},"nodeType":"YulExpressionStatement","src":"12521:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12552:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12555:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12545:6:18"},"nodeType":"YulFunctionCall","src":"12545:15:18"},"nodeType":"YulExpressionStatement","src":"12545:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12386:180:18"},{"body":{"nodeType":"YulBlock","src":"12678:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12700:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12708:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12696:3:18"},"nodeType":"YulFunctionCall","src":"12696:14:18"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"12712:34:18","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12689:6:18"},"nodeType":"YulFunctionCall","src":"12689:58:18"},"nodeType":"YulExpressionStatement","src":"12689:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12768:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12776:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12764:3:18"},"nodeType":"YulFunctionCall","src":"12764:15:18"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"12781:7:18","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12757:6:18"},"nodeType":"YulFunctionCall","src":"12757:32:18"},"nodeType":"YulExpressionStatement","src":"12757:32:18"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12670:6:18","type":""}],"src":"12572:224:18"},{"body":{"nodeType":"YulBlock","src":"12948:220:18","statements":[{"nodeType":"YulAssignment","src":"12958:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13024:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13029:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12965:58:18"},"nodeType":"YulFunctionCall","src":"12965:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12958:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13130:3:18"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"13041:88:18"},"nodeType":"YulFunctionCall","src":"13041:93:18"},"nodeType":"YulExpressionStatement","src":"13041:93:18"},{"nodeType":"YulAssignment","src":"13143:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13154:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13159:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13150:3:18"},"nodeType":"YulFunctionCall","src":"13150:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13143:3:18"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12936:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12944:3:18","type":""}],"src":"12802:366:18"},{"body":{"nodeType":"YulBlock","src":"13345:248:18","statements":[{"nodeType":"YulAssignment","src":"13355:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13367:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13378:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13363:3:18"},"nodeType":"YulFunctionCall","src":"13363:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13355:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13402:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13413:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13398:3:18"},"nodeType":"YulFunctionCall","src":"13398:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13421:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13427:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13417:3:18"},"nodeType":"YulFunctionCall","src":"13417:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13391:6:18"},"nodeType":"YulFunctionCall","src":"13391:47:18"},"nodeType":"YulExpressionStatement","src":"13391:47:18"},{"nodeType":"YulAssignment","src":"13447:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13581:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13455:124:18"},"nodeType":"YulFunctionCall","src":"13455:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13447:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13325:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13340:4:18","type":""}],"src":"13174:419:18"},{"body":{"nodeType":"YulBlock","src":"13705:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13727:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13735:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13723:3:18"},"nodeType":"YulFunctionCall","src":"13723:14:18"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"13739:31:18","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13716:6:18"},"nodeType":"YulFunctionCall","src":"13716:55:18"},"nodeType":"YulExpressionStatement","src":"13716:55:18"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13697:6:18","type":""}],"src":"13599:179:18"},{"body":{"nodeType":"YulBlock","src":"13930:220:18","statements":[{"nodeType":"YulAssignment","src":"13940:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14006:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"14011:2:18","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13947:58:18"},"nodeType":"YulFunctionCall","src":"13947:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13940:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14112:3:18"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"14023:88:18"},"nodeType":"YulFunctionCall","src":"14023:93:18"},"nodeType":"YulExpressionStatement","src":"14023:93:18"},{"nodeType":"YulAssignment","src":"14125:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14136:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"14141:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14132:3:18"},"nodeType":"YulFunctionCall","src":"14132:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14125:3:18"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13918:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13926:3:18","type":""}],"src":"13784:366:18"},{"body":{"nodeType":"YulBlock","src":"14327:248:18","statements":[{"nodeType":"YulAssignment","src":"14337:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14349:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14360:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14345:3:18"},"nodeType":"YulFunctionCall","src":"14345:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14337:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14384:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14395:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14380:3:18"},"nodeType":"YulFunctionCall","src":"14380:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14403:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14409:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14399:3:18"},"nodeType":"YulFunctionCall","src":"14399:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14373:6:18"},"nodeType":"YulFunctionCall","src":"14373:47:18"},"nodeType":"YulExpressionStatement","src":"14373:47:18"},{"nodeType":"YulAssignment","src":"14429:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14563:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14437:124:18"},"nodeType":"YulFunctionCall","src":"14437:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14429:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14307:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14322:4:18","type":""}],"src":"14156:419:18"},{"body":{"nodeType":"YulBlock","src":"14819:537:18","statements":[{"nodeType":"YulAssignment","src":"14829:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14841:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14852:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14837:3:18"},"nodeType":"YulFunctionCall","src":"14837:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14829:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14910:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14923:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14934:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14919:3:18"},"nodeType":"YulFunctionCall","src":"14919:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"14866:43:18"},"nodeType":"YulFunctionCall","src":"14866:71:18"},"nodeType":"YulExpressionStatement","src":"14866:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14991:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15004:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15015:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15000:3:18"},"nodeType":"YulFunctionCall","src":"15000:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14947:43:18"},"nodeType":"YulFunctionCall","src":"14947:72:18"},"nodeType":"YulExpressionStatement","src":"14947:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15073:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15086:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15097:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15082:3:18"},"nodeType":"YulFunctionCall","src":"15082:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15029:43:18"},"nodeType":"YulFunctionCall","src":"15029:72:18"},"nodeType":"YulExpressionStatement","src":"15029:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15155:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15168:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15179:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15164:3:18"},"nodeType":"YulFunctionCall","src":"15164:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15111:43:18"},"nodeType":"YulFunctionCall","src":"15111:72:18"},"nodeType":"YulExpressionStatement","src":"15111:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15237:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15250:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15261:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15246:3:18"},"nodeType":"YulFunctionCall","src":"15246:19:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15193:43:18"},"nodeType":"YulFunctionCall","src":"15193:73:18"},"nodeType":"YulExpressionStatement","src":"15193:73:18"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"15320:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15333:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15344:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15329:3:18"},"nodeType":"YulFunctionCall","src":"15329:19:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15276:43:18"},"nodeType":"YulFunctionCall","src":"15276:73:18"},"nodeType":"YulExpressionStatement","src":"15276:73:18"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14751:9:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14763:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14771:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14779:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14787:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14795:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14803:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14814:4:18","type":""}],"src":"14581:775:18"},{"body":{"nodeType":"YulBlock","src":"15468:74:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15490:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15498:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15486:3:18"},"nodeType":"YulFunctionCall","src":"15486:14:18"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"15502:32:18","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15479:6:18"},"nodeType":"YulFunctionCall","src":"15479:56:18"},"nodeType":"YulExpressionStatement","src":"15479:56:18"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15460:6:18","type":""}],"src":"15362:180:18"},{"body":{"nodeType":"YulBlock","src":"15694:220:18","statements":[{"nodeType":"YulAssignment","src":"15704:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15770:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15775:2:18","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15711:58:18"},"nodeType":"YulFunctionCall","src":"15711:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15704:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15876:3:18"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"15787:88:18"},"nodeType":"YulFunctionCall","src":"15787:93:18"},"nodeType":"YulExpressionStatement","src":"15787:93:18"},{"nodeType":"YulAssignment","src":"15889:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15900:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15905:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15896:3:18"},"nodeType":"YulFunctionCall","src":"15896:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15889:3:18"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15682:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15690:3:18","type":""}],"src":"15548:366:18"},{"body":{"nodeType":"YulBlock","src":"16091:248:18","statements":[{"nodeType":"YulAssignment","src":"16101:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16113:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16124:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16109:3:18"},"nodeType":"YulFunctionCall","src":"16109:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16101:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16148:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16159:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16144:3:18"},"nodeType":"YulFunctionCall","src":"16144:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16167:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16163:3:18"},"nodeType":"YulFunctionCall","src":"16163:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16137:6:18"},"nodeType":"YulFunctionCall","src":"16137:47:18"},"nodeType":"YulExpressionStatement","src":"16137:47:18"},{"nodeType":"YulAssignment","src":"16193:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16327:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16201:124:18"},"nodeType":"YulFunctionCall","src":"16201:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16193:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16071:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16086:4:18","type":""}],"src":"15920:419:18"},{"body":{"nodeType":"YulBlock","src":"16451:119:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16473:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16481:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16469:3:18"},"nodeType":"YulFunctionCall","src":"16469:14:18"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"16485:34:18","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16462:6:18"},"nodeType":"YulFunctionCall","src":"16462:58:18"},"nodeType":"YulExpressionStatement","src":"16462:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16541:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16549:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16537:3:18"},"nodeType":"YulFunctionCall","src":"16537:15:18"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"16554:8:18","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16530:6:18"},"nodeType":"YulFunctionCall","src":"16530:33:18"},"nodeType":"YulExpressionStatement","src":"16530:33:18"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16443:6:18","type":""}],"src":"16345:225:18"},{"body":{"nodeType":"YulBlock","src":"16722:220:18","statements":[{"nodeType":"YulAssignment","src":"16732:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16798:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16803:2:18","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16739:58:18"},"nodeType":"YulFunctionCall","src":"16739:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16732:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16904:3:18"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"16815:88:18"},"nodeType":"YulFunctionCall","src":"16815:93:18"},"nodeType":"YulExpressionStatement","src":"16815:93:18"},{"nodeType":"YulAssignment","src":"16917:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16928:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16933:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16924:3:18"},"nodeType":"YulFunctionCall","src":"16924:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16917:3:18"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16710:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16718:3:18","type":""}],"src":"16576:366:18"},{"body":{"nodeType":"YulBlock","src":"17119:248:18","statements":[{"nodeType":"YulAssignment","src":"17129:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17141:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17152:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17137:3:18"},"nodeType":"YulFunctionCall","src":"17137:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17129:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17176:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17187:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17172:3:18"},"nodeType":"YulFunctionCall","src":"17172:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17195:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"17201:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17191:3:18"},"nodeType":"YulFunctionCall","src":"17191:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17165:6:18"},"nodeType":"YulFunctionCall","src":"17165:47:18"},"nodeType":"YulExpressionStatement","src":"17165:47:18"},{"nodeType":"YulAssignment","src":"17221:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17355:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17229:124:18"},"nodeType":"YulFunctionCall","src":"17229:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17221:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17099:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17114:4:18","type":""}],"src":"16948:419:18"},{"body":{"nodeType":"YulBlock","src":"17479:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17501:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17509:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17497:3:18"},"nodeType":"YulFunctionCall","src":"17497:14:18"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"17513:34:18","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17490:6:18"},"nodeType":"YulFunctionCall","src":"17490:58:18"},"nodeType":"YulExpressionStatement","src":"17490:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17569:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17577:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17565:3:18"},"nodeType":"YulFunctionCall","src":"17565:15:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"17582:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17558:6:18"},"nodeType":"YulFunctionCall","src":"17558:31:18"},"nodeType":"YulExpressionStatement","src":"17558:31:18"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17471:6:18","type":""}],"src":"17373:223:18"},{"body":{"nodeType":"YulBlock","src":"17748:220:18","statements":[{"nodeType":"YulAssignment","src":"17758:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17829:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17765:58:18"},"nodeType":"YulFunctionCall","src":"17765:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17758:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17930:3:18"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"17841:88:18"},"nodeType":"YulFunctionCall","src":"17841:93:18"},"nodeType":"YulExpressionStatement","src":"17841:93:18"},{"nodeType":"YulAssignment","src":"17943:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17954:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17959:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17950:3:18"},"nodeType":"YulFunctionCall","src":"17950:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17943:3:18"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17736:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17744:3:18","type":""}],"src":"17602:366:18"},{"body":{"nodeType":"YulBlock","src":"18145:248:18","statements":[{"nodeType":"YulAssignment","src":"18155:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18167:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18178:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18163:3:18"},"nodeType":"YulFunctionCall","src":"18163:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18155:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18202:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18213:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18198:3:18"},"nodeType":"YulFunctionCall","src":"18198:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18221:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"18227:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18217:3:18"},"nodeType":"YulFunctionCall","src":"18217:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18191:6:18"},"nodeType":"YulFunctionCall","src":"18191:47:18"},"nodeType":"YulExpressionStatement","src":"18191:47:18"},{"nodeType":"YulAssignment","src":"18247:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18381:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18255:124:18"},"nodeType":"YulFunctionCall","src":"18255:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18247:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18125:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18140:4:18","type":""}],"src":"17974:419:18"},{"body":{"nodeType":"YulBlock","src":"18505:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18527:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18535:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18523:3:18"},"nodeType":"YulFunctionCall","src":"18523:14:18"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"18539:34:18","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18516:6:18"},"nodeType":"YulFunctionCall","src":"18516:58:18"},"nodeType":"YulExpressionStatement","src":"18516:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18595:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18603:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18591:3:18"},"nodeType":"YulFunctionCall","src":"18591:15:18"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"18608:4:18","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18584:6:18"},"nodeType":"YulFunctionCall","src":"18584:29:18"},"nodeType":"YulExpressionStatement","src":"18584:29:18"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18497:6:18","type":""}],"src":"18399:221:18"},{"body":{"nodeType":"YulBlock","src":"18772:220:18","statements":[{"nodeType":"YulAssignment","src":"18782:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18848:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18853:2:18","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18789:58:18"},"nodeType":"YulFunctionCall","src":"18789:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18782:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18954:3:18"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"18865:88:18"},"nodeType":"YulFunctionCall","src":"18865:93:18"},"nodeType":"YulExpressionStatement","src":"18865:93:18"},{"nodeType":"YulAssignment","src":"18967:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18978:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18983:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18974:3:18"},"nodeType":"YulFunctionCall","src":"18974:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18967:3:18"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18760:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18768:3:18","type":""}],"src":"18626:366:18"},{"body":{"nodeType":"YulBlock","src":"19169:248:18","statements":[{"nodeType":"YulAssignment","src":"19179:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19191:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19202:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19187:3:18"},"nodeType":"YulFunctionCall","src":"19187:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19179:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19226:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19237:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19222:3:18"},"nodeType":"YulFunctionCall","src":"19222:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19245:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19251:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19241:3:18"},"nodeType":"YulFunctionCall","src":"19241:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19215:6:18"},"nodeType":"YulFunctionCall","src":"19215:47:18"},"nodeType":"YulExpressionStatement","src":"19215:47:18"},{"nodeType":"YulAssignment","src":"19271:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19405:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19279:124:18"},"nodeType":"YulFunctionCall","src":"19279:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19271:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19149:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19164:4:18","type":""}],"src":"18998:419:18"},{"body":{"nodeType":"YulBlock","src":"19529:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19551:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19559:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19547:3:18"},"nodeType":"YulFunctionCall","src":"19547:14:18"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"19563:31:18","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19540:6:18"},"nodeType":"YulFunctionCall","src":"19540:55:18"},"nodeType":"YulExpressionStatement","src":"19540:55:18"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19521:6:18","type":""}],"src":"19423:179:18"},{"body":{"nodeType":"YulBlock","src":"19754:220:18","statements":[{"nodeType":"YulAssignment","src":"19764:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19830:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19835:2:18","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19771:58:18"},"nodeType":"YulFunctionCall","src":"19771:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19764:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19936:3:18"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"19847:88:18"},"nodeType":"YulFunctionCall","src":"19847:93:18"},"nodeType":"YulExpressionStatement","src":"19847:93:18"},{"nodeType":"YulAssignment","src":"19949:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19960:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19965:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19956:3:18"},"nodeType":"YulFunctionCall","src":"19956:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19949:3:18"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19742:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19750:3:18","type":""}],"src":"19608:366:18"},{"body":{"nodeType":"YulBlock","src":"20151:248:18","statements":[{"nodeType":"YulAssignment","src":"20161:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20173:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20184:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20169:3:18"},"nodeType":"YulFunctionCall","src":"20169:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20161:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20208:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20219:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20204:3:18"},"nodeType":"YulFunctionCall","src":"20204:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20227:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"20233:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20223:3:18"},"nodeType":"YulFunctionCall","src":"20223:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20197:6:18"},"nodeType":"YulFunctionCall","src":"20197:47:18"},"nodeType":"YulExpressionStatement","src":"20197:47:18"},{"nodeType":"YulAssignment","src":"20253:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20387:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20261:124:18"},"nodeType":"YulFunctionCall","src":"20261:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20253:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20131:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20146:4:18","type":""}],"src":"19980:419:18"},{"body":{"nodeType":"YulBlock","src":"20511:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20533:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20541:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20529:3:18"},"nodeType":"YulFunctionCall","src":"20529:14:18"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"20545:34:18","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20522:6:18"},"nodeType":"YulFunctionCall","src":"20522:58:18"},"nodeType":"YulExpressionStatement","src":"20522:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20601:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20609:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20597:3:18"},"nodeType":"YulFunctionCall","src":"20597:15:18"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"20614:7:18","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20590:6:18"},"nodeType":"YulFunctionCall","src":"20590:32:18"},"nodeType":"YulExpressionStatement","src":"20590:32:18"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20503:6:18","type":""}],"src":"20405:224:18"},{"body":{"nodeType":"YulBlock","src":"20781:220:18","statements":[{"nodeType":"YulAssignment","src":"20791:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20857:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20862:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20798:58:18"},"nodeType":"YulFunctionCall","src":"20798:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20791:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20963:3:18"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"20874:88:18"},"nodeType":"YulFunctionCall","src":"20874:93:18"},"nodeType":"YulExpressionStatement","src":"20874:93:18"},{"nodeType":"YulAssignment","src":"20976:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20987:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20992:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20983:3:18"},"nodeType":"YulFunctionCall","src":"20983:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20976:3:18"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20769:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20777:3:18","type":""}],"src":"20635:366:18"},{"body":{"nodeType":"YulBlock","src":"21178:248:18","statements":[{"nodeType":"YulAssignment","src":"21188:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21200:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21211:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21196:3:18"},"nodeType":"YulFunctionCall","src":"21196:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21188:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21235:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21246:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21231:3:18"},"nodeType":"YulFunctionCall","src":"21231:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21254:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"21260:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21250:3:18"},"nodeType":"YulFunctionCall","src":"21250:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21224:6:18"},"nodeType":"YulFunctionCall","src":"21224:47:18"},"nodeType":"YulExpressionStatement","src":"21224:47:18"},{"nodeType":"YulAssignment","src":"21280:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21414:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21288:124:18"},"nodeType":"YulFunctionCall","src":"21288:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21280:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21158:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21173:4:18","type":""}],"src":"21007:419:18"},{"body":{"nodeType":"YulBlock","src":"21538:116:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21560:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21568:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21556:3:18"},"nodeType":"YulFunctionCall","src":"21556:14:18"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"21572:34:18","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21549:6:18"},"nodeType":"YulFunctionCall","src":"21549:58:18"},"nodeType":"YulExpressionStatement","src":"21549:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21628:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21636:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21624:3:18"},"nodeType":"YulFunctionCall","src":"21624:15:18"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"21641:5:18","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21617:6:18"},"nodeType":"YulFunctionCall","src":"21617:30:18"},"nodeType":"YulExpressionStatement","src":"21617:30:18"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21530:6:18","type":""}],"src":"21432:222:18"},{"body":{"nodeType":"YulBlock","src":"21806:220:18","statements":[{"nodeType":"YulAssignment","src":"21816:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21882:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21887:2:18","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21823:58:18"},"nodeType":"YulFunctionCall","src":"21823:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21816:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21988:3:18"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"21899:88:18"},"nodeType":"YulFunctionCall","src":"21899:93:18"},"nodeType":"YulExpressionStatement","src":"21899:93:18"},{"nodeType":"YulAssignment","src":"22001:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22012:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22017:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22008:3:18"},"nodeType":"YulFunctionCall","src":"22008:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22001:3:18"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21794:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21802:3:18","type":""}],"src":"21660:366:18"},{"body":{"nodeType":"YulBlock","src":"22203:248:18","statements":[{"nodeType":"YulAssignment","src":"22213:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22225:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22236:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22221:3:18"},"nodeType":"YulFunctionCall","src":"22221:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22213:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22260:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22271:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22256:3:18"},"nodeType":"YulFunctionCall","src":"22256:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22279:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22285:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22275:3:18"},"nodeType":"YulFunctionCall","src":"22275:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22249:6:18"},"nodeType":"YulFunctionCall","src":"22249:47:18"},"nodeType":"YulExpressionStatement","src":"22249:47:18"},{"nodeType":"YulAssignment","src":"22305:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22439:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22313:124:18"},"nodeType":"YulFunctionCall","src":"22313:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22305:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22183:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22198:4:18","type":""}],"src":"22032:419:18"},{"body":{"nodeType":"YulBlock","src":"22563:119:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22585:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22593:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22581:3:18"},"nodeType":"YulFunctionCall","src":"22581:14:18"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"22597:34:18","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22574:6:18"},"nodeType":"YulFunctionCall","src":"22574:58:18"},"nodeType":"YulExpressionStatement","src":"22574:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22653:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22661:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22649:3:18"},"nodeType":"YulFunctionCall","src":"22649:15:18"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"22666:8:18","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22642:6:18"},"nodeType":"YulFunctionCall","src":"22642:33:18"},"nodeType":"YulExpressionStatement","src":"22642:33:18"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22555:6:18","type":""}],"src":"22457:225:18"},{"body":{"nodeType":"YulBlock","src":"22834:220:18","statements":[{"nodeType":"YulAssignment","src":"22844:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22910:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22915:2:18","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22851:58:18"},"nodeType":"YulFunctionCall","src":"22851:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22844:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23016:3:18"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"22927:88:18"},"nodeType":"YulFunctionCall","src":"22927:93:18"},"nodeType":"YulExpressionStatement","src":"22927:93:18"},{"nodeType":"YulAssignment","src":"23029:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23040:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23045:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23036:3:18"},"nodeType":"YulFunctionCall","src":"23036:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23029:3:18"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22822:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22830:3:18","type":""}],"src":"22688:366:18"},{"body":{"nodeType":"YulBlock","src":"23231:248:18","statements":[{"nodeType":"YulAssignment","src":"23241:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23253:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23264:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23249:3:18"},"nodeType":"YulFunctionCall","src":"23249:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23241:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23288:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23299:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23284:3:18"},"nodeType":"YulFunctionCall","src":"23284:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23307:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"23313:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23303:3:18"},"nodeType":"YulFunctionCall","src":"23303:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23277:6:18"},"nodeType":"YulFunctionCall","src":"23277:47:18"},"nodeType":"YulExpressionStatement","src":"23277:47:18"},{"nodeType":"YulAssignment","src":"23333:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23467:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23341:124:18"},"nodeType":"YulFunctionCall","src":"23341:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23333:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23211:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23226:4:18","type":""}],"src":"23060:419:18"},{"body":{"nodeType":"YulBlock","src":"23591:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23613:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"23621:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23609:3:18"},"nodeType":"YulFunctionCall","src":"23609:14:18"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23625:34:18","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23602:6:18"},"nodeType":"YulFunctionCall","src":"23602:58:18"},"nodeType":"YulExpressionStatement","src":"23602:58:18"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23583:6:18","type":""}],"src":"23485:182:18"},{"body":{"nodeType":"YulBlock","src":"23819:220:18","statements":[{"nodeType":"YulAssignment","src":"23829:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23895:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23900:2:18","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23836:58:18"},"nodeType":"YulFunctionCall","src":"23836:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23829:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24001:3:18"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"23912:88:18"},"nodeType":"YulFunctionCall","src":"23912:93:18"},"nodeType":"YulExpressionStatement","src":"23912:93:18"},{"nodeType":"YulAssignment","src":"24014:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24025:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24030:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24021:3:18"},"nodeType":"YulFunctionCall","src":"24021:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24014:3:18"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23807:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23815:3:18","type":""}],"src":"23673:366:18"},{"body":{"nodeType":"YulBlock","src":"24216:248:18","statements":[{"nodeType":"YulAssignment","src":"24226:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24238:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24249:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24234:3:18"},"nodeType":"YulFunctionCall","src":"24234:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24226:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24273:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24284:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24269:3:18"},"nodeType":"YulFunctionCall","src":"24269:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24292:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"24298:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24288:3:18"},"nodeType":"YulFunctionCall","src":"24288:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24262:6:18"},"nodeType":"YulFunctionCall","src":"24262:47:18"},"nodeType":"YulExpressionStatement","src":"24262:47:18"},{"nodeType":"YulAssignment","src":"24318:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24452:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24326:124:18"},"nodeType":"YulFunctionCall","src":"24326:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24318:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24196:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24211:4:18","type":""}],"src":"24045:419:18"},{"body":{"nodeType":"YulBlock","src":"24576:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24598:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24606:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24594:3:18"},"nodeType":"YulFunctionCall","src":"24594:14:18"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"24610:33:18","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24587:6:18"},"nodeType":"YulFunctionCall","src":"24587:57:18"},"nodeType":"YulExpressionStatement","src":"24587:57:18"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24568:6:18","type":""}],"src":"24470:181:18"},{"body":{"nodeType":"YulBlock","src":"24803:220:18","statements":[{"nodeType":"YulAssignment","src":"24813:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24879:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24884:2:18","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24820:58:18"},"nodeType":"YulFunctionCall","src":"24820:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24813:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24985:3:18"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"24896:88:18"},"nodeType":"YulFunctionCall","src":"24896:93:18"},"nodeType":"YulExpressionStatement","src":"24896:93:18"},{"nodeType":"YulAssignment","src":"24998:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25009:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25014:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25005:3:18"},"nodeType":"YulFunctionCall","src":"25005:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24998:3:18"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24791:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24799:3:18","type":""}],"src":"24657:366:18"},{"body":{"nodeType":"YulBlock","src":"25200:248:18","statements":[{"nodeType":"YulAssignment","src":"25210:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25222:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25233:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25218:3:18"},"nodeType":"YulFunctionCall","src":"25218:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25210:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25257:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25268:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25253:3:18"},"nodeType":"YulFunctionCall","src":"25253:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25276:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"25282:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25272:3:18"},"nodeType":"YulFunctionCall","src":"25272:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25246:6:18"},"nodeType":"YulFunctionCall","src":"25246:47:18"},"nodeType":"YulExpressionStatement","src":"25246:47:18"},{"nodeType":"YulAssignment","src":"25302:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25436:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25310:124:18"},"nodeType":"YulFunctionCall","src":"25310:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25302:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25180:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25195:4:18","type":""}],"src":"25029:419:18"},{"body":{"nodeType":"YulBlock","src":"25512:40:18","statements":[{"nodeType":"YulAssignment","src":"25523:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25539:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25533:5:18"},"nodeType":"YulFunctionCall","src":"25533:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25523:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25495:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25505:6:18","type":""}],"src":"25454:98:18"},{"body":{"nodeType":"YulBlock","src":"25614:60:18","statements":[{"nodeType":"YulAssignment","src":"25624:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"25632:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25624:4:18"}]},{"nodeType":"YulAssignment","src":"25645:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"25657:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25662:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25653:3:18"},"nodeType":"YulFunctionCall","src":"25653:14:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25645:4:18"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25601:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"25609:4:18","type":""}],"src":"25558:116:18"},{"body":{"nodeType":"YulBlock","src":"25735:99:18","statements":[{"nodeType":"YulVariableDeclaration","src":"25746:42:18","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"25783:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25777:5:18"},"nodeType":"YulFunctionCall","src":"25777:10:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"25759:17:18"},"nodeType":"YulFunctionCall","src":"25759:29:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25750:5:18","type":""}]},{"nodeType":"YulAssignment","src":"25798:29:18","value":{"name":"value","nodeType":"YulIdentifier","src":"25822:5:18"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"25798:11:18"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25715:3:18","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"25723:11:18","type":""}],"src":"25680:154:18"},{"body":{"nodeType":"YulBlock","src":"25893:54:18","statements":[{"nodeType":"YulAssignment","src":"25903:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25928:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"25934:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25924:3:18"},"nodeType":"YulFunctionCall","src":"25924:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25903:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25868:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"25874:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25884:8:18","type":""}],"src":"25840:107:18"},{"body":{"nodeType":"YulBlock","src":"26043:504:18","statements":[{"nodeType":"YulVariableDeclaration","src":"26054:52:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26100:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26068:31:18"},"nodeType":"YulFunctionCall","src":"26068:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26058:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26115:21:18","value":{"name":"array","nodeType":"YulIdentifier","src":"26131:5:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"26119:8:18","type":""}]},{"nodeType":"YulAssignment","src":"26146:52:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26192:5:18"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26158:33:18"},"nodeType":"YulFunctionCall","src":"26158:40:18"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"26146:8:18"}]},{"nodeType":"YulAssignment","src":"26208:44:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"26243:8:18"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"26217:25:18"},"nodeType":"YulFunctionCall","src":"26217:35:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26208:5:18"}]},{"body":{"nodeType":"YulBlock","src":"26280:260:18","statements":[{"nodeType":"YulAssignment","src":"26294:236:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26324:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26391:1:18","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26398:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"26402:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26394:3:18"},"nodeType":"YulFunctionCall","src":"26394:15:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26387:3:18"},"nodeType":"YulFunctionCall","src":"26387:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"26432:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"26347:18:18"},"nodeType":"YulFunctionCall","src":"26347:169:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26303:3:18"},"nodeType":"YulFunctionCall","src":"26303:227:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26294:5:18"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26268:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"26276:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26265:2:18"},"nodeType":"YulFunctionCall","src":"26265:14:18"},"nodeType":"YulIf","src":"26262:278:18"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"26027:5:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"26037:5:18","type":""}],"src":"25953:594:18"},{"body":{"nodeType":"YulBlock","src":"26763:454:18","statements":[{"nodeType":"YulAssignment","src":"26773:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26785:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26796:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26781:3:18"},"nodeType":"YulFunctionCall","src":"26781:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26773:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26854:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26867:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26878:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26863:3:18"},"nodeType":"YulFunctionCall","src":"26863:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26810:43:18"},"nodeType":"YulFunctionCall","src":"26810:71:18"},"nodeType":"YulExpressionStatement","src":"26810:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26935:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26948:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26959:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26944:3:18"},"nodeType":"YulFunctionCall","src":"26944:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26891:43:18"},"nodeType":"YulFunctionCall","src":"26891:72:18"},"nodeType":"YulExpressionStatement","src":"26891:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27017:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27030:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27041:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27026:3:18"},"nodeType":"YulFunctionCall","src":"27026:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26973:43:18"},"nodeType":"YulFunctionCall","src":"26973:72:18"},"nodeType":"YulExpressionStatement","src":"26973:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27099:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27112:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27123:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27108:3:18"},"nodeType":"YulFunctionCall","src":"27108:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27055:43:18"},"nodeType":"YulFunctionCall","src":"27055:72:18"},"nodeType":"YulExpressionStatement","src":"27055:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27181:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27194:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27205:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27190:3:18"},"nodeType":"YulFunctionCall","src":"27190:19:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27137:43:18"},"nodeType":"YulFunctionCall","src":"27137:73:18"},"nodeType":"YulExpressionStatement","src":"27137:73:18"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26703:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26715:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26723:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26731:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26739:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26747:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26758:4:18","type":""}],"src":"26553:664:18"},{"body":{"nodeType":"YulBlock","src":"27401:367:18","statements":[{"nodeType":"YulAssignment","src":"27411:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27423:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27434:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27419:3:18"},"nodeType":"YulFunctionCall","src":"27419:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27411:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27492:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27505:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27516:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27501:3:18"},"nodeType":"YulFunctionCall","src":"27501:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27448:43:18"},"nodeType":"YulFunctionCall","src":"27448:71:18"},"nodeType":"YulExpressionStatement","src":"27448:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27569:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27582:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27593:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27578:3:18"},"nodeType":"YulFunctionCall","src":"27578:18:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"27529:39:18"},"nodeType":"YulFunctionCall","src":"27529:68:18"},"nodeType":"YulExpressionStatement","src":"27529:68:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27651:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27664:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27675:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27660:3:18"},"nodeType":"YulFunctionCall","src":"27660:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27607:43:18"},"nodeType":"YulFunctionCall","src":"27607:72:18"},"nodeType":"YulExpressionStatement","src":"27607:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27733:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27746:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27757:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27742:3:18"},"nodeType":"YulFunctionCall","src":"27742:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27689:43:18"},"nodeType":"YulFunctionCall","src":"27689:72:18"},"nodeType":"YulExpressionStatement","src":"27689:72:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27349:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27361:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27369:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27377:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27385:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27396:4:18","type":""}],"src":"27223:545:18"},{"body":{"nodeType":"YulBlock","src":"27802:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27819:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27822:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27812:6:18"},"nodeType":"YulFunctionCall","src":"27812:88:18"},"nodeType":"YulExpressionStatement","src":"27812:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27916:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27919:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27909:6:18"},"nodeType":"YulFunctionCall","src":"27909:15:18"},"nodeType":"YulExpressionStatement","src":"27909:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27940:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27943:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27933:6:18"},"nodeType":"YulFunctionCall","src":"27933:15:18"},"nodeType":"YulExpressionStatement","src":"27933:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"27774:180:18"},{"body":{"nodeType":"YulBlock","src":"28066:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28088:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"28096:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28084:3:18"},"nodeType":"YulFunctionCall","src":"28084:14:18"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"28100:26:18","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28077:6:18"},"nodeType":"YulFunctionCall","src":"28077:50:18"},"nodeType":"YulExpressionStatement","src":"28077:50:18"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28058:6:18","type":""}],"src":"27960:174:18"},{"body":{"nodeType":"YulBlock","src":"28286:220:18","statements":[{"nodeType":"YulAssignment","src":"28296:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28362:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28367:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28303:58:18"},"nodeType":"YulFunctionCall","src":"28303:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28296:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28468:3:18"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"28379:88:18"},"nodeType":"YulFunctionCall","src":"28379:93:18"},"nodeType":"YulExpressionStatement","src":"28379:93:18"},{"nodeType":"YulAssignment","src":"28481:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28492:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28497:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28488:3:18"},"nodeType":"YulFunctionCall","src":"28488:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28481:3:18"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28274:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28282:3:18","type":""}],"src":"28140:366:18"},{"body":{"nodeType":"YulBlock","src":"28683:248:18","statements":[{"nodeType":"YulAssignment","src":"28693:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28705:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28716:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28701:3:18"},"nodeType":"YulFunctionCall","src":"28701:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28693:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28740:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28751:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28736:3:18"},"nodeType":"YulFunctionCall","src":"28736:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28759:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"28765:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28755:3:18"},"nodeType":"YulFunctionCall","src":"28755:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28729:6:18"},"nodeType":"YulFunctionCall","src":"28729:47:18"},"nodeType":"YulExpressionStatement","src":"28729:47:18"},{"nodeType":"YulAssignment","src":"28785:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28919:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28793:124:18"},"nodeType":"YulFunctionCall","src":"28793:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28785:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28663:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28678:4:18","type":""}],"src":"28512:419:18"},{"body":{"nodeType":"YulBlock","src":"29043:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29065:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"29073:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29061:3:18"},"nodeType":"YulFunctionCall","src":"29061:14:18"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"29077:33:18","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29054:6:18"},"nodeType":"YulFunctionCall","src":"29054:57:18"},"nodeType":"YulExpressionStatement","src":"29054:57:18"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29035:6:18","type":""}],"src":"28937:181:18"},{"body":{"nodeType":"YulBlock","src":"29270:220:18","statements":[{"nodeType":"YulAssignment","src":"29280:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29346:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29351:2:18","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29287:58:18"},"nodeType":"YulFunctionCall","src":"29287:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29280:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29452:3:18"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"29363:88:18"},"nodeType":"YulFunctionCall","src":"29363:93:18"},"nodeType":"YulExpressionStatement","src":"29363:93:18"},{"nodeType":"YulAssignment","src":"29465:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29476:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29481:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29472:3:18"},"nodeType":"YulFunctionCall","src":"29472:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29465:3:18"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29258:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29266:3:18","type":""}],"src":"29124:366:18"},{"body":{"nodeType":"YulBlock","src":"29667:248:18","statements":[{"nodeType":"YulAssignment","src":"29677:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29689:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29700:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29685:3:18"},"nodeType":"YulFunctionCall","src":"29685:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29677:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29724:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29735:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29720:3:18"},"nodeType":"YulFunctionCall","src":"29720:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29743:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"29749:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29739:3:18"},"nodeType":"YulFunctionCall","src":"29739:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29713:6:18"},"nodeType":"YulFunctionCall","src":"29713:47:18"},"nodeType":"YulExpressionStatement","src":"29713:47:18"},{"nodeType":"YulAssignment","src":"29769:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29903:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29777:124:18"},"nodeType":"YulFunctionCall","src":"29777:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29769:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29647:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29662:4:18","type":""}],"src":"29496:419:18"},{"body":{"nodeType":"YulBlock","src":"30027:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30049:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"30057:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30045:3:18"},"nodeType":"YulFunctionCall","src":"30045:14:18"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"30061:34:18","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30038:6:18"},"nodeType":"YulFunctionCall","src":"30038:58:18"},"nodeType":"YulExpressionStatement","src":"30038:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30117:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"30125:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30113:3:18"},"nodeType":"YulFunctionCall","src":"30113:15:18"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"30130:4:18","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30106:6:18"},"nodeType":"YulFunctionCall","src":"30106:29:18"},"nodeType":"YulExpressionStatement","src":"30106:29:18"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30019:6:18","type":""}],"src":"29921:221:18"},{"body":{"nodeType":"YulBlock","src":"30294:220:18","statements":[{"nodeType":"YulAssignment","src":"30304:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30370:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30375:2:18","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30311:58:18"},"nodeType":"YulFunctionCall","src":"30311:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30304:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30476:3:18"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"30387:88:18"},"nodeType":"YulFunctionCall","src":"30387:93:18"},"nodeType":"YulExpressionStatement","src":"30387:93:18"},{"nodeType":"YulAssignment","src":"30489:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30500:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30505:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30496:3:18"},"nodeType":"YulFunctionCall","src":"30496:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30489:3:18"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30282:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30290:3:18","type":""}],"src":"30148:366:18"},{"body":{"nodeType":"YulBlock","src":"30691:248:18","statements":[{"nodeType":"YulAssignment","src":"30701:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30713:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30724:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30709:3:18"},"nodeType":"YulFunctionCall","src":"30709:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30701:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30748:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30759:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30744:3:18"},"nodeType":"YulFunctionCall","src":"30744:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30767:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"30773:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30763:3:18"},"nodeType":"YulFunctionCall","src":"30763:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30737:6:18"},"nodeType":"YulFunctionCall","src":"30737:47:18"},"nodeType":"YulExpressionStatement","src":"30737:47:18"},{"nodeType":"YulAssignment","src":"30793:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30927:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30801:124:18"},"nodeType":"YulFunctionCall","src":"30801:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30793:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30671:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30686:4:18","type":""}],"src":"30520:419:18"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2072":[{"length":32,"start":4143}],"2074":[{"length":32,"start":4102}],"2076":[{"length":32,"start":4016}],"2078":[{"length":32,"start":5366}],"2080":[{"length":32,"start":5399}],"2083":[{"length":32,"start":1518}],"2086":[{"length":32,"start":1570}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F6 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EB SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x417 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x464 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x439 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x464 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x447 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x479 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x486 DUP2 DUP6 DUP6 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A6 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B3 DUP6 DUP3 DUP6 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x4BE DUP6 DUP6 DUP6 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4ED PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x4FF DUP6 DUP10 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x52B DUP3 DUP3 PUSH2 0x10E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x589 PUSH1 0x0 PUSH2 0x1238 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x61B PUSH1 0x6 PUSH32 0x0 PUSH2 0x130C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x64F PUSH1 0x7 PUSH32 0x0 PUSH2 0x130C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x201C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x69E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x716 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x764 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A4 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B2 DUP3 DUP7 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x804 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81B PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x828 DUP2 DUP6 DUP6 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP1 PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x8A5 DUP13 PUSH2 0x13BC JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8BB SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x8DE DUP3 PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8EE DUP3 DUP8 DUP8 DUP8 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x969 DUP11 DUP11 DUP11 PUSH2 0xADD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA04 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6B SWAP1 PUSH2 0x2288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0x1238 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA95 DUP4 PUSH2 0x145F JUMP JUMPDEST SWAP1 POP PUSH2 0xAC5 JUMP JUMPDEST DUP3 PUSH2 0xAA6 DUP4 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xABC SWAP3 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP1 PUSH2 0x231A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB4 DUP5 DUP5 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD2E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD17 SWAP1 PUSH2 0x2418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2D DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xADD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP1 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE1F DUP4 DUP4 DUP4 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9C SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFA6 DUP5 DUP5 DUP5 PUSH2 0x14CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1028 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1055 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x105D PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x106B PUSH2 0xAD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1089 PUSH2 0x6DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D6 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1148 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115D PUSH1 0x0 DUP4 DUP4 PUSH2 0x14C7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1234 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1329 JUMPI PUSH2 0x1322 DUP4 PUSH2 0x1567 JUMP JUMPDEST SWAP1 POP PUSH2 0x13B6 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1335 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1361 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1383 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1391 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1409 DUP2 PUSH2 0x12FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 DUP2 PUSH2 0x15DB JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142D PUSH2 0x1427 PUSH2 0xFAC JUMP JUMPDEST DUP4 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1445 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1632 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1452 DUP2 PUSH2 0x1715 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x14AC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A3 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x14B8 SWAP1 PUSH2 0x2703 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x154C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1574 DUP4 PUSH2 0x1883 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1593 JUMPI PUSH2 0x1592 PUSH2 0x201C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x170C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1692 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x170C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1729 JUMPI PUSH2 0x1728 PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1747 JUMPI PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x176E JUMPI PUSH2 0x176D PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A6 SWAP1 PUSH2 0x287D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP1 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x182B JUMPI PUSH2 0x182A PUSH2 0x2802 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x2802 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x187F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1876 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x18DF SWAP1 PUSH2 0x1F65 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1901 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1948 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x191A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1948 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1948 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1947 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x192C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1972 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x195A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1995 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x19EB DUP2 DUP6 PUSH2 0x1981 JUMP JUMPDEST SWAP4 POP PUSH2 0x19FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1992 JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x19C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A29 DUP2 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A71 DUP2 PUSH2 0x1A56 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8E DUP2 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA7 DUP2 PUSH2 0x1A94 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC4 DUP2 PUSH2 0x1A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP6 DUP3 DUP7 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP6 DUP3 DUP7 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x1B0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B49 DUP2 PUSH2 0x1A94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH2 0x1B82 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BA2 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD3 DUP2 PUSH2 0x1BBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C07 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP5 DUP3 DUP6 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8A DUP2 PUSH2 0x1C55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C99 DUP2 PUSH2 0x1A56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD4 DUP2 PUSH2 0x1A94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE6 DUP4 DUP4 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0A DUP3 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x1D14 DUP2 DUP6 PUSH2 0x1CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x1D1F DUP4 PUSH2 0x1CBB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D50 JUMPI DUP2 MLOAD PUSH2 0x1D37 DUP9 DUP3 PUSH2 0x1CDA JUMP JUMPDEST SWAP8 POP PUSH2 0x1D42 DUP4 PUSH2 0x1CF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D23 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1D72 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1C81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D84 DUP2 DUP10 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1D98 DUP2 DUP9 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DA7 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x1DB4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x1DC1 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BFE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1DD3 DUP2 DUP5 PUSH2 0x1CFF JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x1BBD JUMP JUMPDEST DUP2 EQ PUSH2 0x1E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E22 DUP2 PUSH2 0x1DFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E31 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E4E DUP2 PUSH2 0x1E28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E81 DUP11 DUP3 DUP12 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1E92 DUP11 DUP3 DUP12 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1EA3 DUP11 DUP3 DUP12 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1EB4 DUP11 DUP3 DUP12 ADD PUSH2 0x1AB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1EC5 DUP11 DUP3 DUP12 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1ED6 DUP11 DUP3 DUP12 ADD PUSH2 0x1E3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1EE7 DUP11 DUP3 DUP12 ADD PUSH2 0x1E3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1B DUP6 DUP3 DUP7 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F2C DUP6 DUP3 DUP7 ADD PUSH2 0x1A7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F7D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD1 DUP3 PUSH2 0x1A94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDC DUP4 PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1F97 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A7 PUSH1 0x25 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B2 DUP3 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D6 DUP2 PUSH2 0x209A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2113 PUSH1 0x1D DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x211E DUP3 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2142 DUP2 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x215E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x216B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x2178 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0x2185 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x2192 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x219F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E0 PUSH1 0x1E DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EB DUP3 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220F DUP2 PUSH2 0x21D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2272 PUSH1 0x26 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x227D DUP3 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22A1 DUP2 PUSH2 0x2265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2304 PUSH1 0x24 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x230F DUP3 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2333 DUP2 PUSH2 0x22F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2396 PUSH1 0x22 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A1 DUP3 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C5 DUP2 PUSH2 0x2389 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2402 PUSH1 0x1D DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x240D DUP3 PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2431 DUP2 PUSH2 0x23F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2494 PUSH1 0x25 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x249F DUP3 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C3 DUP2 PUSH2 0x2487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 PUSH1 0x23 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP3 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x2519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x26 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E7 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 PUSH1 0x20 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2653 DUP2 PUSH2 0x2617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2690 PUSH1 0x1F DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x269B DUP3 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26BF DUP2 PUSH2 0x2683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26ED DUP3 MLOAD PUSH2 0x1BF4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270E DUP3 PUSH2 0x26C6 JUMP JUMPDEST DUP3 PUSH2 0x2718 DUP5 PUSH2 0x26D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2723 DUP2 PUSH2 0x26E1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x2763 JUMPI PUSH2 0x275E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x26F6 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x277F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x278C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x2799 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x27A6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x27B3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1C90 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x27D2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x27DF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x27EC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x27F9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BFE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2867 PUSH1 0x18 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x2872 DUP3 PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2896 DUP2 PUSH2 0x285A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D3 PUSH1 0x1F DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x28DE DUP3 PUSH2 0x289D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 PUSH2 0x28C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2965 PUSH1 0x22 DUP4 PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP PUSH2 0x2970 DUP3 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2994 DUP2 PUSH2 0x2958 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP12 0xE0 0xAA 0xEE EXTCODEHASH 0xFB CODESIZE SWAP9 0xDA 0x5E MLOAD BALANCE 0xBE DUP1 RETURN 0xDC 0xD0 CALLCODE PUSH20 0x92142F43C15E788A243032B664736F6C63430008 MULMOD STOP CALLER ","sourceMap":"253:247:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2867:113:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:95:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3419:125:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;2617:126:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5021:633:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1930:626:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2158:98:2;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;2867:113:4:-;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;5854:234:2:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;402:95:17:-;1094:13:0;:11;:13::i;:::-;472:17:17::1;478:2;482:6;472:5;:17::i;:::-;402:95:::0;;:::o;3419:125:2:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2617:126:4:-;2686:7;2712:24;:7;:14;2720:5;2712:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2705:31;;2617:126;;;:::o;5021:633:14:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;1930:626:4:-;2165:8;2146:15;:27;;2138:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2319:8;2249:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;2457:15;;:6;:15;;;2449:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;3987:149:2:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;2895:341:10:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;:32::i;:::-;:38;;:46;;;;;;;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3310:202:11:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;3695:262:14:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;8520:535:2:-;8622:1;8603:21;;:7;:21;;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;827:112:9:-;892:7;918;:14;;;911:21;;827:112;;;:::o;3367:268:10:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;3111:203:4:-;3171:15;3198:30;3231:7;:14;3239:5;3231:14;;;;;;;;;;;;;;;3198:47;;3265:15;:5;:13;:15::i;:::-;3255:25;;3290:17;:5;:15;:17::i;:::-;3188:126;3111:203;;;:::o;4768:165:14:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:13:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;1689:286:10:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;12073:91:2:-;;;;:::o;12752:90::-;;;;:::o;3963:180:14:-;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;2059:405:10:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;945:123:9:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8336:397:13:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;;;683:7;;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;2536:245:10:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:18:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:77::-;4938:7;4967:5;4956:16;;4901:77;;;:::o;4984:118::-;5071:24;5089:5;5071:24;:::i;:::-;5066:3;5059:37;4984:118;;:::o;5108:222::-;5201:4;5239:2;5228:9;5224:18;5216:26;;5252:71;5320:1;5309:9;5305:17;5296:6;5252:71;:::i;:::-;5108:222;;;;:::o;5336:329::-;5395:6;5444:2;5432:9;5423:7;5419:23;5415:32;5412:119;;;5450:79;;:::i;:::-;5412:119;5570:1;5595:53;5640:7;5631:6;5620:9;5616:22;5595:53;:::i;:::-;5585:63;;5541:117;5336:329;;;;:::o;5671:149::-;5707:7;5747:66;5740:5;5736:78;5725:89;;5671:149;;;:::o;5826:115::-;5911:23;5928:5;5911:23;:::i;:::-;5906:3;5899:36;5826:115;;:::o;5947:118::-;6034:24;6052:5;6034:24;:::i;:::-;6029:3;6022:37;5947:118;;:::o;6071:114::-;6138:6;6172:5;6166:12;6156:22;;6071:114;;;:::o;6191:184::-;6290:11;6324:6;6319:3;6312:19;6364:4;6359:3;6355:14;6340:29;;6191:184;;;;:::o;6381:132::-;6448:4;6471:3;6463:11;;6501:4;6496:3;6492:14;6484:22;;6381:132;;;:::o;6519:108::-;6596:24;6614:5;6596:24;:::i;:::-;6591:3;6584:37;6519:108;;:::o;6633:179::-;6702:10;6723:46;6765:3;6757:6;6723:46;:::i;:::-;6801:4;6796:3;6792:14;6778:28;;6633:179;;;;:::o;6818:113::-;6888:4;6920;6915:3;6911:14;6903:22;;6818:113;;;:::o;6967:732::-;7086:3;7115:54;7163:5;7115:54;:::i;:::-;7185:86;7264:6;7259:3;7185:86;:::i;:::-;7178:93;;7295:56;7345:5;7295:56;:::i;:::-;7374:7;7405:1;7390:284;7415:6;7412:1;7409:13;7390:284;;;7491:6;7485:13;7518:63;7577:3;7562:13;7518:63;:::i;:::-;7511:70;;7604:60;7657:6;7604:60;:::i;:::-;7594:70;;7450:224;7437:1;7434;7430:9;7425:14;;7390:284;;;7394:14;7690:3;7683:10;;7091:608;;;6967:732;;;;:::o;7705:1215::-;8054:4;8092:3;8081:9;8077:19;8069:27;;8106:69;8172:1;8161:9;8157:17;8148:6;8106:69;:::i;:::-;8222:9;8216:4;8212:20;8207:2;8196:9;8192:18;8185:48;8250:78;8323:4;8314:6;8250:78;:::i;:::-;8242:86;;8375:9;8369:4;8365:20;8360:2;8349:9;8345:18;8338:48;8403:78;8476:4;8467:6;8403:78;:::i;:::-;8395:86;;8491:72;8559:2;8548:9;8544:18;8535:6;8491:72;:::i;:::-;8573:73;8641:3;8630:9;8626:19;8617:6;8573:73;:::i;:::-;8656;8724:3;8713:9;8709:19;8700:6;8656:73;:::i;:::-;8777:9;8771:4;8767:20;8761:3;8750:9;8746:19;8739:49;8805:108;8908:4;8899:6;8805:108;:::i;:::-;8797:116;;7705:1215;;;;;;;;;;:::o;8926:222::-;9019:4;9057:2;9046:9;9042:18;9034:26;;9070:71;9138:1;9127:9;9123:17;9114:6;9070:71;:::i;:::-;8926:222;;;;:::o;9154:118::-;9225:22;9241:5;9225:22;:::i;:::-;9218:5;9215:33;9205:61;;9262:1;9259;9252:12;9205:61;9154:118;:::o;9278:135::-;9322:5;9360:6;9347:20;9338:29;;9376:31;9401:5;9376:31;:::i;:::-;9278:135;;;;:::o;9419:122::-;9492:24;9510:5;9492:24;:::i;:::-;9485:5;9482:35;9472:63;;9531:1;9528;9521:12;9472:63;9419:122;:::o;9547:139::-;9593:5;9631:6;9618:20;9609:29;;9647:33;9674:5;9647:33;:::i;:::-;9547:139;;;;:::o;9692:1199::-;9803:6;9811;9819;9827;9835;9843;9851;9900:3;9888:9;9879:7;9875:23;9871:33;9868:120;;;9907:79;;:::i;:::-;9868:120;10027:1;10052:53;10097:7;10088:6;10077:9;10073:22;10052:53;:::i;:::-;10042:63;;9998:117;10154:2;10180:53;10225:7;10216:6;10205:9;10201:22;10180:53;:::i;:::-;10170:63;;10125:118;10282:2;10308:53;10353:7;10344:6;10333:9;10329:22;10308:53;:::i;:::-;10298:63;;10253:118;10410:2;10436:53;10481:7;10472:6;10461:9;10457:22;10436:53;:::i;:::-;10426:63;;10381:118;10538:3;10565:51;10608:7;10599:6;10588:9;10584:22;10565:51;:::i;:::-;10555:61;;10509:117;10665:3;10692:53;10737:7;10728:6;10717:9;10713:22;10692:53;:::i;:::-;10682:63;;10636:119;10794:3;10821:53;10866:7;10857:6;10846:9;10842:22;10821:53;:::i;:::-;10811:63;;10765:119;9692:1199;;;;;;;;;;:::o;10897:474::-;10965:6;10973;11022:2;11010:9;11001:7;10997:23;10993:32;10990:119;;;11028:79;;:::i;:::-;10990:119;11148:1;11173:53;11218:7;11209:6;11198:9;11194:22;11173:53;:::i;:::-;11163:63;;11119:117;11275:2;11301:53;11346:7;11337:6;11326:9;11322:22;11301:53;:::i;:::-;11291:63;;11246:118;10897:474;;;;;:::o;11377:180::-;11425:77;11422:1;11415:88;11522:4;11519:1;11512:15;11546:4;11543:1;11536:15;11563:320;11607:6;11644:1;11638:4;11634:12;11624:22;;11691:1;11685:4;11681:12;11712:18;11702:81;;11768:4;11760:6;11756:17;11746:27;;11702:81;11830:2;11822:6;11819:14;11799:18;11796:38;11793:84;;;11849:18;;:::i;:::-;11793:84;11614:269;11563:320;;;:::o;11889:180::-;11937:77;11934:1;11927:88;12034:4;12031:1;12024:15;12058:4;12055:1;12048:15;12075:305;12115:3;12134:20;12152:1;12134:20;:::i;:::-;12129:25;;12168:20;12186:1;12168:20;:::i;:::-;12163:25;;12322:1;12254:66;12250:74;12247:1;12244:81;12241:107;;;12328:18;;:::i;:::-;12241:107;12372:1;12369;12365:9;12358:16;;12075:305;;;;:::o;12386:180::-;12434:77;12431:1;12424:88;12531:4;12528:1;12521:15;12555:4;12552:1;12545:15;12572:224;12712:34;12708:1;12700:6;12696:14;12689:58;12781:7;12776:2;12768:6;12764:15;12757:32;12572:224;:::o;12802:366::-;12944:3;12965:67;13029:2;13024:3;12965:67;:::i;:::-;12958:74;;13041:93;13130:3;13041:93;:::i;:::-;13159:2;13154:3;13150:12;13143:19;;12802:366;;;:::o;13174:419::-;13340:4;13378:2;13367:9;13363:18;13355:26;;13427:9;13421:4;13417:20;13413:1;13402:9;13398:17;13391:47;13455:131;13581:4;13455:131;:::i;:::-;13447:139;;13174:419;;;:::o;13599:179::-;13739:31;13735:1;13727:6;13723:14;13716:55;13599:179;:::o;13784:366::-;13926:3;13947:67;14011:2;14006:3;13947:67;:::i;:::-;13940:74;;14023:93;14112:3;14023:93;:::i;:::-;14141:2;14136:3;14132:12;14125:19;;13784:366;;;:::o;14156:419::-;14322:4;14360:2;14349:9;14345:18;14337:26;;14409:9;14403:4;14399:20;14395:1;14384:9;14380:17;14373:47;14437:131;14563:4;14437:131;:::i;:::-;14429:139;;14156:419;;;:::o;14581:775::-;14814:4;14852:3;14841:9;14837:19;14829:27;;14866:71;14934:1;14923:9;14919:17;14910:6;14866:71;:::i;:::-;14947:72;15015:2;15004:9;15000:18;14991:6;14947:72;:::i;:::-;15029;15097:2;15086:9;15082:18;15073:6;15029:72;:::i;:::-;15111;15179:2;15168:9;15164:18;15155:6;15111:72;:::i;:::-;15193:73;15261:3;15250:9;15246:19;15237:6;15193:73;:::i;:::-;15276;15344:3;15333:9;15329:19;15320:6;15276:73;:::i;:::-;14581:775;;;;;;;;;:::o;15362:180::-;15502:32;15498:1;15490:6;15486:14;15479:56;15362:180;:::o;15548:366::-;15690:3;15711:67;15775:2;15770:3;15711:67;:::i;:::-;15704:74;;15787:93;15876:3;15787:93;:::i;:::-;15905:2;15900:3;15896:12;15889:19;;15548:366;;;:::o;15920:419::-;16086:4;16124:2;16113:9;16109:18;16101:26;;16173:9;16167:4;16163:20;16159:1;16148:9;16144:17;16137:47;16201:131;16327:4;16201:131;:::i;:::-;16193:139;;15920:419;;;:::o;16345:225::-;16485:34;16481:1;16473:6;16469:14;16462:58;16554:8;16549:2;16541:6;16537:15;16530:33;16345:225;:::o;16576:366::-;16718:3;16739:67;16803:2;16798:3;16739:67;:::i;:::-;16732:74;;16815:93;16904:3;16815:93;:::i;:::-;16933:2;16928:3;16924:12;16917:19;;16576:366;;;:::o;16948:419::-;17114:4;17152:2;17141:9;17137:18;17129:26;;17201:9;17195:4;17191:20;17187:1;17176:9;17172:17;17165:47;17229:131;17355:4;17229:131;:::i;:::-;17221:139;;16948:419;;;:::o;17373:223::-;17513:34;17509:1;17501:6;17497:14;17490:58;17582:6;17577:2;17569:6;17565:15;17558:31;17373:223;:::o;17602:366::-;17744:3;17765:67;17829:2;17824:3;17765:67;:::i;:::-;17758:74;;17841:93;17930:3;17841:93;:::i;:::-;17959:2;17954:3;17950:12;17943:19;;17602:366;;;:::o;17974:419::-;18140:4;18178:2;18167:9;18163:18;18155:26;;18227:9;18221:4;18217:20;18213:1;18202:9;18198:17;18191:47;18255:131;18381:4;18255:131;:::i;:::-;18247:139;;17974:419;;;:::o;18399:221::-;18539:34;18535:1;18527:6;18523:14;18516:58;18608:4;18603:2;18595:6;18591:15;18584:29;18399:221;:::o;18626:366::-;18768:3;18789:67;18853:2;18848:3;18789:67;:::i;:::-;18782:74;;18865:93;18954:3;18865:93;:::i;:::-;18983:2;18978:3;18974:12;18967:19;;18626:366;;;:::o;18998:419::-;19164:4;19202:2;19191:9;19187:18;19179:26;;19251:9;19245:4;19241:20;19237:1;19226:9;19222:17;19215:47;19279:131;19405:4;19279:131;:::i;:::-;19271:139;;18998:419;;;:::o;19423:179::-;19563:31;19559:1;19551:6;19547:14;19540:55;19423:179;:::o;19608:366::-;19750:3;19771:67;19835:2;19830:3;19771:67;:::i;:::-;19764:74;;19847:93;19936:3;19847:93;:::i;:::-;19965:2;19960:3;19956:12;19949:19;;19608:366;;;:::o;19980:419::-;20146:4;20184:2;20173:9;20169:18;20161:26;;20233:9;20227:4;20223:20;20219:1;20208:9;20204:17;20197:47;20261:131;20387:4;20261:131;:::i;:::-;20253:139;;19980:419;;;:::o;20405:224::-;20545:34;20541:1;20533:6;20529:14;20522:58;20614:7;20609:2;20601:6;20597:15;20590:32;20405:224;:::o;20635:366::-;20777:3;20798:67;20862:2;20857:3;20798:67;:::i;:::-;20791:74;;20874:93;20963:3;20874:93;:::i;:::-;20992:2;20987:3;20983:12;20976:19;;20635:366;;;:::o;21007:419::-;21173:4;21211:2;21200:9;21196:18;21188:26;;21260:9;21254:4;21250:20;21246:1;21235:9;21231:17;21224:47;21288:131;21414:4;21288:131;:::i;:::-;21280:139;;21007:419;;;:::o;21432:222::-;21572:34;21568:1;21560:6;21556:14;21549:58;21641:5;21636:2;21628:6;21624:15;21617:30;21432:222;:::o;21660:366::-;21802:3;21823:67;21887:2;21882:3;21823:67;:::i;:::-;21816:74;;21899:93;21988:3;21899:93;:::i;:::-;22017:2;22012:3;22008:12;22001:19;;21660:366;;;:::o;22032:419::-;22198:4;22236:2;22225:9;22221:18;22213:26;;22285:9;22279:4;22275:20;22271:1;22260:9;22256:17;22249:47;22313:131;22439:4;22313:131;:::i;:::-;22305:139;;22032:419;;;:::o;22457:225::-;22597:34;22593:1;22585:6;22581:14;22574:58;22666:8;22661:2;22653:6;22649:15;22642:33;22457:225;:::o;22688:366::-;22830:3;22851:67;22915:2;22910:3;22851:67;:::i;:::-;22844:74;;22927:93;23016:3;22927:93;:::i;:::-;23045:2;23040:3;23036:12;23029:19;;22688:366;;;:::o;23060:419::-;23226:4;23264:2;23253:9;23249:18;23241:26;;23313:9;23307:4;23303:20;23299:1;23288:9;23284:17;23277:47;23341:131;23467:4;23341:131;:::i;:::-;23333:139;;23060:419;;;:::o;23485:182::-;23625:34;23621:1;23613:6;23609:14;23602:58;23485:182;:::o;23673:366::-;23815:3;23836:67;23900:2;23895:3;23836:67;:::i;:::-;23829:74;;23912:93;24001:3;23912:93;:::i;:::-;24030:2;24025:3;24021:12;24014:19;;23673:366;;;:::o;24045:419::-;24211:4;24249:2;24238:9;24234:18;24226:26;;24298:9;24292:4;24288:20;24284:1;24273:9;24269:17;24262:47;24326:131;24452:4;24326:131;:::i;:::-;24318:139;;24045:419;;;:::o;24470:181::-;24610:33;24606:1;24598:6;24594:14;24587:57;24470:181;:::o;24657:366::-;24799:3;24820:67;24884:2;24879:3;24820:67;:::i;:::-;24813:74;;24896:93;24985:3;24896:93;:::i;:::-;25014:2;25009:3;25005:12;24998:19;;24657:366;;;:::o;25029:419::-;25195:4;25233:2;25222:9;25218:18;25210:26;;25282:9;25276:4;25272:20;25268:1;25257:9;25253:17;25246:47;25310:131;25436:4;25310:131;:::i;:::-;25302:139;;25029:419;;;:::o;25454:98::-;25505:6;25539:5;25533:12;25523:22;;25454:98;;;:::o;25558:116::-;25609:4;25632:3;25624:11;;25662:4;25657:3;25653:14;25645:22;;25558:116;;;:::o;25680:154::-;25723:11;25759:29;25783:3;25777:10;25759:29;:::i;:::-;25822:5;25798:29;;25735:99;25680:154;;;:::o;25840:107::-;25884:8;25934:5;25928:4;25924:16;25903:37;;25840:107;;;;:::o;25953:594::-;26037:5;26068:38;26100:5;26068:38;:::i;:::-;26131:5;26158:40;26192:5;26158:40;:::i;:::-;26146:52;;26217:35;26243:8;26217:35;:::i;:::-;26208:44;;26276:2;26268:6;26265:14;26262:278;;;26347:169;26432:66;26402:6;26398:2;26394:15;26391:1;26387:23;26347:169;:::i;:::-;26324:5;26303:227;26294:236;;26262:278;26043:504;;25953:594;;;:::o;26553:664::-;26758:4;26796:3;26785:9;26781:19;26773:27;;26810:71;26878:1;26867:9;26863:17;26854:6;26810:71;:::i;:::-;26891:72;26959:2;26948:9;26944:18;26935:6;26891:72;:::i;:::-;26973;27041:2;27030:9;27026:18;27017:6;26973:72;:::i;:::-;27055;27123:2;27112:9;27108:18;27099:6;27055:72;:::i;:::-;27137:73;27205:3;27194:9;27190:19;27181:6;27137:73;:::i;:::-;26553:664;;;;;;;;:::o;27223:545::-;27396:4;27434:3;27423:9;27419:19;27411:27;;27448:71;27516:1;27505:9;27501:17;27492:6;27448:71;:::i;:::-;27529:68;27593:2;27582:9;27578:18;27569:6;27529:68;:::i;:::-;27607:72;27675:2;27664:9;27660:18;27651:6;27607:72;:::i;:::-;27689;27757:2;27746:9;27742:18;27733:6;27689:72;:::i;:::-;27223:545;;;;;;;:::o;27774:180::-;27822:77;27819:1;27812:88;27919:4;27916:1;27909:15;27943:4;27940:1;27933:15;27960:174;28100:26;28096:1;28088:6;28084:14;28077:50;27960:174;:::o;28140:366::-;28282:3;28303:67;28367:2;28362:3;28303:67;:::i;:::-;28296:74;;28379:93;28468:3;28379:93;:::i;:::-;28497:2;28492:3;28488:12;28481:19;;28140:366;;;:::o;28512:419::-;28678:4;28716:2;28705:9;28701:18;28693:26;;28765:9;28759:4;28755:20;28751:1;28740:9;28736:17;28729:47;28793:131;28919:4;28793:131;:::i;:::-;28785:139;;28512:419;;;:::o;28937:181::-;29077:33;29073:1;29065:6;29061:14;29054:57;28937:181;:::o;29124:366::-;29266:3;29287:67;29351:2;29346:3;29287:67;:::i;:::-;29280:74;;29363:93;29452:3;29363:93;:::i;:::-;29481:2;29476:3;29472:12;29465:19;;29124:366;;;:::o;29496:419::-;29662:4;29700:2;29689:9;29685:18;29677:26;;29749:9;29743:4;29739:20;29735:1;29724:9;29720:17;29713:47;29777:131;29903:4;29777:131;:::i;:::-;29769:139;;29496:419;;;:::o;29921:221::-;30061:34;30057:1;30049:6;30045:14;30038:58;30130:4;30125:2;30117:6;30113:15;30106:29;29921:221;:::o;30148:366::-;30290:3;30311:67;30375:2;30370:3;30311:67;:::i;:::-;30304:74;;30387:93;30476:3;30387:93;:::i;:::-;30505:2;30500:3;30496:12;30489:19;;30148:366;;;:::o;30520:419::-;30686:4;30724:2;30713:9;30709:18;30701:26;;30773:9;30767:4;30763:20;30759:1;30748:9;30744:17;30737:47;30801:131;30927:4;30801:131;:::i;:::-;30793:139;;30520:419;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20TokenUSDC.sol\":\"ERC20TokenUSDC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xbe43b6f1e04b5215939f1a76fa612c275b75948f6e7bf25808fb91e99444a33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86d672d9a23f3502472f6827af8e8116a6412b28c234dcfcb201413055cb0159\",\"dweb:/ipfs/Qmcts6GvEMHuyikwDHtcTdTW4SVP1k66KpUMRcCovWbLN8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/ERC20TokenUSDC.sol\":{\"keccak256\":\"0x1d5a04e051a2f65b6759e5fb79604992f59e6c32b882c940f045f1e87b1e64d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef74f62c79a7635631fcd61912aa1f94c319e03edc633ffc60e16b3c3a45a07\",\"dweb:/ipfs/QmTcDDMbDjHKXNeiJ7poCbeHtBjFz2TB9Wi4hYVwFXdVvE\"]}},\"version\":1}"}}}}}